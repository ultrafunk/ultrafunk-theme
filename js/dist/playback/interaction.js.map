{
  "version": 3,
  "sources": ["../../src/playback/eventlogger.js", "../../src/playback/gallery/gallery-playback.js", "../../src/playback/playback-timer.js", "../../src/playback/gallery/gallery-playback-timer.js", "../../src/playback/gallery/embedded-players.js", "../../src/playback/gallery/gallery-events.js", "../../src/playback/gallery/crossfade-controls.js", "../../src/playback/gallery/gallery-players.js", "../../src/playback/list/list-playback.js", "../../src/playback/list/list-playback-timer.js", "../../src/playback/screen-wakelock.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('eventlogger');\r\n\r\nexport const SOURCE = {\r\n// Default source\r\n  UNKNOWN: 1000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// Playback event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nexport const EVENT = {\r\n// Default event\r\n  UNKNOWN:         -2000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  180,\r\n  KEY_ARROW_RIGHT: 181,\r\n  MOUSE_CLICK:     182,\r\n// Playback event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n  CUE_PLAY_SINGLE_TRACK: 80,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timeStamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog base class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  #log        = [];\r\n  #maxEntries = 0;\r\n  #matchCount = 0;\r\n  #lastPos    = 0;\r\n\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.#maxEntries = maxEntries;\r\n  }\r\n\r\n  add(eventSource, eventType, uId = null, timeStamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timeStamp   = timeStamp;\r\n\r\n    // Simple and inefficient, but good enough...\r\n    if (this.#log.length < this.#maxEntries)\r\n    {\r\n      this.#log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.#log.shift();\r\n      this.#log.push(logEntry);\r\n    }\r\n  }\r\n\r\n  clear()\r\n  {\r\n    this.#log = [];\r\n  }\r\n\r\n  getLastPos()\r\n  {\r\n    return this.#lastPos;\r\n  }\r\n\r\n  initMatch()\r\n  {\r\n    this.#lastPos    = this.#log.length - 1;\r\n    this.#matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.#log[this.#lastPos - index].eventSource === eventSource) &&\r\n        (this.#log[this.#lastPos - index].eventType   === eventType)   &&\r\n        (this.#log[this.#lastPos - index].uId         === uId))\r\n    {\r\n      this.#matchCount++;\r\n    }\r\n  }\r\n\r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.#log[this.#lastPos].timeStamp - this.#log[this.#lastPos - elements].timeStamp) <= delta)\r\n      this.#matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.#matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      debug.logEventLog(this.#log, SOURCE, EVENT);\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nexport class Interaction extends EventLog\r\n{\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nexport class Playback extends EventLog\r\n{\r\n  ytAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING, uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(5, 'YouTube Autoplay Blocked');\r\n  }\r\n\r\n  ytSingleTrackAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.CUE_PLAY_SINGLE_TRACK, null);\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY,       null);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING,       uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED,       uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(5, 'YouTube Single Track Autoplay Blocked');\r\n  }\r\n\r\n  scAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(5, 'SoundCloud Autoplay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Gallery playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger          from '../../shared/debuglogger.js';\r\nimport * as eventLogger          from '../eventlogger.js';\r\nimport * as embeddedPlayers      from './embedded-players.js';\r\nimport * as playbackEvents       from '../playback-events.js';\r\nimport * as galleryEvents        from './gallery-events.js';\r\nimport * as playbackControls     from '../playback-controls.js';\r\nimport * as crossfadeControls    from './crossfade-controls.js';\r\nimport { playbackTimer }         from './gallery-playback-timer.js';\r\nimport { galleryPlayers }        from './gallery-players.js';\r\nimport { CROSSFADE_TYPE }        from './crossfade.js';\r\nimport { settings }              from '../../shared/session-data.js';\r\nimport { singleTrackFetchReady } from './single-track-fetch.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-playback');\r\n\r\nconst m = {\r\n  eventLog: null,\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  minCrossfadeToTime: 5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:  3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.eventLog = embeddedPlayers.eventLog;\r\n\r\n  galleryEvents.init();\r\n\r\n  m.players = galleryPlayers();\r\n  m.players.init(playTrack);\r\n\r\n  playbackControls.init(m.players, seekClick);\r\n  crossfadeControls.init(m.players, crossfadeToClick);\r\n  playbackTimer.init(m.players, crossfadeInit);\r\n  embeddedPlayers.init(m.players, playbackState, embeddedEventHandler);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nexport function togglePlayPause()\r\n{\r\n  if (playbackControls.isPlaying())\r\n  {\r\n    playbackControls.setPauseState();\r\n    m.players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    playbackControls.setPlayState();\r\n    m.players.current.play(embeddedPlayers.onPlayerError);\r\n  }\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  debug.log(`prevTrack() - prevTrack: ${m.players.getCurrentTrack() - 1} - numTracks: ${m.players.getNumTracks()}`);\r\n\r\n  if (m.players.getCurrentTrack() > 0)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 5000)\r\n      {\r\n        m.players.current.seekTo(0);\r\n        playbackControls.updateTimerAndProgress(0, 0, m.players.current.getDuration());\r\n      }\r\n      else\r\n      {\r\n        if (m.players.getCurrentTrack() > 1)\r\n          m.players.stop();\r\n\r\n        if (m.players.prevTrack(playbackControls.isPlaying()))\r\n          playbackControls.updateTrackData();\r\n        else\r\n          playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PREV_TRACK);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function nextTrack(isMediaEnded = false)\r\n{\r\n  const isLastTrack = ((m.players.getCurrentTrack() + 1) > m.players.getNumTracks());\r\n\r\n  debug.log(`nextTrack() - isMediaEnded: ${isMediaEnded} - isLastTrack: ${isLastTrack} - autoplay: ${settings.playback.autoplay}`);\r\n\r\n  if (repeatPlayback(isMediaEnded, isLastTrack))\r\n    return;\r\n\r\n  if (isLastTrack === false)\r\n  {\r\n    m.players.stop();\r\n\r\n    if (isMediaEnded && (settings.playback.autoplay === false))\r\n    {\r\n      playbackControls.setPauseState();\r\n    }\r\n    else\r\n    {\r\n      if (m.players.nextTrack(playbackControls.isPlaying()))\r\n        playbackControls.updateTrackData();\r\n    }\r\n  }\r\n  else if ((isLastTrack === true) && (isMediaEnded === false))\r\n  {\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_NEXT_TRACK);\r\n  }\r\n  else if (isMediaEnded)\r\n  {\r\n    playbackControls.setPauseState();\r\n\r\n    if (settings.playback.autoplay)\r\n      playbackEvents.dispatch(playbackEvents.EVENT.CONTINUE_AUTOPLAY, { trackType: m.players.current.getTrackType() });\r\n    else\r\n      m.players.stop();\r\n  }\r\n}\r\n\r\nfunction repeatPlayback(isMediaEnded, isLastTrack)\r\n{\r\n  if (isMediaEnded && settings.playback.autoplay)\r\n  {\r\n    const repeatMode = playbackControls.getRepeatMode();\r\n\r\n    debug.log(`repeatPlayback(): ${debug.getKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n    if (repeatMode === playbackControls.REPEAT.ONE)\r\n    {\r\n      m.players.current.seekTo(0);\r\n      m.players.current.play();\r\n      return true;\r\n    }\r\n    else if (isLastTrack && (repeatMode === playbackControls.REPEAT.ALL))\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(0);\r\n      playTrack(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  m.players.current.seekTo(positionSeconds);\r\n}\r\n\r\nexport function setVolume()\r\n{\r\n  m.players.current.setVolume(settings.playback.masterVolume);\r\n}\r\n\r\nexport function toggleMute()\r\n{\r\n  settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n  m.players.mute();\r\n}\r\n\r\nfunction cueTrack(iframeId, scrollToMedia = true)\r\n{\r\n  debug.log(`cueTrack(): ${iframeId}`);\r\n\r\n  m.players.setPlayerIndex(m.players.indexMap.get(iframeId));\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  playbackControls.updateTrackData();\r\n}\r\n\r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n\r\n  if (playMedia)\r\n    m.players.current.play(embeddedPlayers.onPlayerError);\r\n}\r\n\r\nfunction skipToTrack(trackNum, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${trackNum} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (playbackControls.isPlaying() === false))\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n\r\n    if (m.players.jumpToTrack(trackNum, playMedia))\r\n      playbackControls.updateTrackData();\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay(autoplayData, iframeId = null)\r\n{\r\n  debug.log(`resumeAutoplay(): ${autoplayData.autoplay}${(iframeId !== null) ? (' - ' + iframeId) : '' }`);\r\n\r\n  if (iframeId !== null)\r\n  {\r\n    if (autoplayData.autoplay)\r\n      skipToTrack(m.players.trackFromUid(iframeId), true);\r\n    else\r\n      cueTrack(iframeId);\r\n  }\r\n  else if (autoplayData.autoplay)\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n    togglePlayPause();\r\n  }\r\n}\r\n\r\nfunction cueOrPlaySingleTrackById(trackData, thumbnailData, playMedia = false)\r\n{\r\n  debug.log(`cueOrPlaySingleTrackById() - playMedia: ${playMedia}`);\r\n  m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CUE_PLAY_SINGLE_TRACK);\r\n\r\n  m.players.current.setIsCued(false);\r\n  m.players.current.setIsPlayable(true);\r\n  m.players.current.setArtistTitle(trackData.track_artist, trackData.track_title);\r\n  m.players.current.setDuration(parseInt(trackData.track_duration));\r\n  m.players.current.setThumbnail(thumbnailData);\r\n\r\n  playbackControls.updateProgressPercent(0);\r\n  playbackControls.updateTrackData();\r\n\r\n  if (playMedia)\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n    m.players.current.playTrackById(thumbnailData.uid);\r\n  }\r\n  else\r\n  {\r\n    m.players.current.cueTrackById(thumbnailData.uid);\r\n  }\r\n}\r\n\r\nexport function getStatus()\r\n{\r\n  return {\r\n    isPlaying:    playbackControls.isPlaying(),\r\n    currentTrack: m.players.getCurrentTrack(),\r\n    trackType:    m.players.current.getTrackType(),\r\n    position:     0,\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      m.players.current.getTrackId(),\r\n    iframeId:     m.players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((m.players.isCurrent(fadeInUid) === false) && (m.players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\r\n      fadeOut: ${m.players.current.getArtist()} - \"${m.players.current.getTitle()}\" (${m.players.current.getUid()})\r\n      fadeIn.: ${m.players.playerFromUid(fadeInUid).getArtist()} - \"${m.players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.playback.masterMute === false) && (settings.playback.autoplay === false))\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = m.players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (config.minCrossfadeToTime + config.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START);\r\n\r\n  const playersIndex = m.players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playbackControls.updateTrackData();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Embedded players event handler proxy for playbackEvents.dispatch()\r\n// ************************************************************************************************\r\n\r\nfunction embeddedEventHandler(embeddedEvent, embeddedEventData = null)\r\n{\r\n  debug.log(`embeddedEventHandler() - event: ${debug.getKeyForValue(playbackEvents.EVENT, embeddedEvent)}`);\r\n  if (embeddedEventData !== null) debug.log(embeddedEventData);\r\n\r\n  switch(embeddedEvent)\r\n  {\r\n    case playbackEvents.EVENT.MEDIA_ENDED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED, getStatus());\r\n      nextTrack(true);\r\n      break;\r\n\r\n    case playbackEvents.EVENT.PLAYBACK_READY:\r\n      playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n      singleTrackFetchReady(cueOrPlaySingleTrackById);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_READY, embeddedEventData);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.AUTOPLAY_BLOCKED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.AUTOPLAY_BLOCKED, null, { 'togglePlayPause': togglePlayPause });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.PLAYBACK_BLOCKED:\r\n    case playbackEvents.EVENT.MEDIA_UNAVAILABLE:\r\n      playbackEvents.dispatch(embeddedEvent, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n\r\n  const sync = function syncRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.sync() - previousTrack: ${m.players.getPlayerIndex() + 1} - nextTrack: ${m.players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getKeyForValue(STATE, syncState)}`);\r\n\r\n    if (m.players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(m.players.indexMap.get(nextPlayerUid));\r\n      playbackControls.updateTrackData();\r\n      syncRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  return {\r\n    STATE,\r\n    sync,\r\n  };\r\n})();\r\n", "//\r\n// PlaybackTimer base class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { settings } from '../shared/session-data.js';\r\nimport { EVENT, dispatch } from './playback-events.js';\r\nimport { timeRemainingWarningBlink } from './playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nexport class PlaybackTimer\r\n{\r\n  #intervalId     = -1;\r\n  #lastPosSeconds = 0;\r\n  isVisible       = true;\r\n\r\n  config = {\r\n    updateTimerInterval: 250, // Milliseconds between each timer event\r\n    maxBufferingDelay:   3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n  };\r\n\r\n  init()\r\n  {\r\n    document.addEventListener('visibilitychange', () =>\r\n    {\r\n      this.isVisible = (document.visibilityState === 'visible') ? true : false;\r\n    });\r\n  }\r\n\r\n  // Abstract methods to override in child class(es)\r\n  updateTimer() {}\r\n  updateVolumeMute() {}\r\n\r\n  start()\r\n  {\r\n    this.stop();\r\n    this.#intervalId = setInterval(() => this.updateTimer(), this.config.updateTimerInterval);\r\n  }\r\n\r\n  stop()\r\n  {\r\n    if (this.#intervalId !== -1)\r\n    {\r\n      clearInterval(this.#intervalId);\r\n      this.#intervalId = -1;\r\n    }\r\n\r\n    this.#lastPosSeconds = 0;\r\n    timeRemainingWarningBlink(false);\r\n  }\r\n\r\n  updateOncePerSecond(positionSeconds, durationSeconds)\r\n  {\r\n    if (this.#lastPosSeconds !== positionSeconds)\r\n    {\r\n      this.#lastPosSeconds = positionSeconds;\r\n      this.updateVolumeMute();\r\n\r\n      if ((settings.playback.autoplay === false) && settings.playback.timeRemainingWarning)\r\n      {\r\n        const remainingSeconds = durationSeconds - positionSeconds;\r\n\r\n        if (remainingSeconds <= settings.playback.timeRemainingSeconds)\r\n        {\r\n          timeRemainingWarningBlink(true);\r\n          dispatch(EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: remainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          timeRemainingWarningBlink(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Gallery playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { PlaybackTimer }            from '../playback-timer.js';\r\nimport { settings }                 from '../../shared/session-data.js';\r\nimport { CROSSFADE_TYPE }           from './crossfade.js';\r\nimport { updateTimerAndProgress }   from '../playback-controls.js';\r\nimport { updateVolumeMuteSettings } from '../shared-gallery-list.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass GalleryPlaybackTimer extends PlaybackTimer\r\n{\r\n  #players       = null;\r\n  #crossfadeInit = null;\r\n\r\n  #updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    updateTimerAndProgress(positionMilliseconds, positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      super.updateOncePerSecond(positionSeconds, durationSeconds);\r\n      this.#updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  #isAutoCrossfade()\r\n  {\r\n    return (settings.playback.autoplay && settings.gallery.autoCrossfade);\r\n  }\r\n\r\n  #updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.playback.masterMute === false) && this.#isAutoCrossfade())\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.gallery.autoCrossfadeLength + this.config.maxBufferingDelay))\r\n      {\r\n        if ((this.#players.getCurrentTrack() + 1) <= this.#players.getNumTracks())\r\n        {\r\n          this.#crossfadeInit(CROSSFADE_TYPE.AUTO,\r\n            {\r\n              name:   'Auto Crossfade',\r\n              length: settings.gallery.autoCrossfadeLength,\r\n              curve:  settings.gallery.autoCrossfadeCurve\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  init(players, crossfadeInit)\r\n  {\r\n    super.init();\r\n    this.#players       = players;\r\n    this.#crossfadeInit = crossfadeInit;\r\n  }\r\n\r\n  updateTimer()\r\n  {\r\n    if (this.isVisible || this.#isAutoCrossfade())\r\n      this.#players.current.getPosition((position, duration) => this.#updateCallback(position, duration));\r\n  }\r\n\r\n  updateVolumeMute()\r\n  {\r\n    if (this.#players.crossfade.isFading() === false)\r\n      this.#players.current.getVolume((volume) => updateVolumeMuteSettings(Math.round(volume), this.#players.current.isMuted()));\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new GalleryPlaybackTimer();\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger    from '../../shared/debuglogger.js';\r\nimport * as eventLogger    from '../eventlogger.js';\r\nimport * as mediaPlayers   from '../mediaplayers.js';\r\nimport * as playbackEvents from '../playback-events.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\nimport { playbackTimer }   from './gallery-playback-timer.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('embedded-players');\r\nexport const eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  players:         {},\r\n  playbackState:   null,\r\n  embeddedEvent:   null,\r\n  loadEventsTotal: 0,\r\n  loadEventsCount: 1,\r\n};\r\n\r\nconst config = {\r\n  maxPlaybackStartDelay: 3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init(players, playbackState, embeddedEventHandler)\r\n{\r\n  m.players       = players;\r\n  m.playbackState = playbackState;\r\n  m.embeddedEvent = embeddedEventHandler;\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  m.loadEventsTotal = 3 + parseInt(document.body.getAttribute('data-gallery-track-count'));\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (m.loadEventsCount++ / m.loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (m.loadEventsCount >= m.loadEventsTotal)\r\n    m.embeddedEvent(playbackEvents.EVENT.PLAYBACK_READY, { resetProgressBar: true });\r\n  else\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const elements = document.querySelectorAll('single-track, gallery-track');\r\n\r\n  elements.forEach(element =>\r\n  {\r\n    const trackType = parseInt(element.getAttribute('data-track-type'));\r\n    const iframe    = element.querySelector('iframe');\r\n    let player      = null;\r\n\r\n    if (trackType === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if ((elements.length === 1) && (iframe === null))\r\n        player = getYouTubePlayer('youtube-player', element, true);\r\n      else\r\n        player = getYouTubePlayer(iframe.id, element, false);\r\n    }\r\n    else if (trackType === mediaPlayers.TRACK_TYPE.SOUNDCLOUD)\r\n    {\r\n      /* eslint-disable */\r\n      const embeddedPlayer = SC.Widget(iframe.id);\r\n      player = new mediaPlayers.SoundCloud(element.id, iframe.id, embeddedPlayer, iframe.src);\r\n\r\n      // Set thumbnail and duration as early as possible\r\n      embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n      {\r\n        player.setThumbnail(element);\r\n\r\n        embeddedPlayer.getDuration(durationMilliseconds =>\r\n        {\r\n          player.setDuration(Math.round(durationMilliseconds / 1000))\r\n          element.setAttribute('data-track-duration', player.getDuration());\r\n        });\r\n\r\n        onSoundCloudPlayerEventReady(player, iframe.id);\r\n      });\r\n\r\n      embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n      embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n      embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n      embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n      /* eslint-enable */\r\n    }\r\n\r\n    if (player !== null)\r\n    {\r\n      player.setArtistTitle(element.getAttribute('data-track-artist'), element.getAttribute('data-track-title'));\r\n      m.players.add(player);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getYouTubePlayer(playerId, element, isSingleTrackPlayer = false)\r\n{\r\n  const videoId = element.getAttribute('data-track-source-uid');\r\n\r\n  const embeddedPlayer = new YT.Player(playerId, // eslint-disable-line no-undef\r\n  {\r\n    events:\r\n    {\r\n      onReady:       (event) => onYouTubePlayerReady(event, playerId),\r\n      onStateChange: (event) => onYouTubePlayerStateChange(event, playerId),\r\n      onError:       (event) => onYouTubePlayerError(event, playerId),\r\n    },\r\n    ...isSingleTrackPlayer && { videoId: videoId },\r\n  });\r\n\r\n  let player = null;\r\n\r\n  if (isSingleTrackPlayer)\r\n    player = new mediaPlayers.SingleTrack(element.id, playerId, embeddedPlayer, videoId);\r\n  else\r\n    player = new mediaPlayers.YouTube(element.id, playerId, embeddedPlayer, videoId);\r\n\r\n  player.setDuration(parseInt(element.getAttribute('data-track-duration')));\r\n\r\n  return player;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nexport function onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player.getTrackType() === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n                        ? eventLogger.SOURCE.YOUTUBE\r\n                        : eventLogger.SOURCE.SOUNDCLOUD;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (m.players.isCurrent(player.getUid()) === false)\r\n    m.players.stop();\r\n\r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  m.embeddedEvent(playbackEvents.EVENT.MEDIA_UNAVAILABLE, getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: m.players.trackFromUid(player.getUid()),\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady(event, iframeId)\r\n{\r\n  const player = m.players.playerFromUid(iframeId);\r\n\r\n  // YT.PlayerState.UNSTARTED (-1) here means the video is not available or playable anymore,\r\n  // so we set playbable to false for later use...\r\n  // ToDo: This is _NOT_ documented or official behaviour, so it could change at any time!\r\n  if (event.target.getPlayerState() === -1)\r\n  {\r\n    debug.warn(`onYouTubePlayerReady() - MEDIA_UNAVAILABLE: ${iframeId} => ${event.target.getVideoData().video_id} => ${player.getArtist()} - \"${player.getTitle()}\"`);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else\r\n  {\r\n    debug.log(`onYouTubePlayerReady(): ${iframeId} => ${event.target.getVideoData().video_id} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  }\r\n\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event, iframeId)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, iframeId);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(iframeId); break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(iframeId); break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(iframeId);   break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(iframeId);    break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(iframeId);      break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(iframeId);     break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (uID: ${iframeId})`);\r\n\r\n  if (eventLog.ytAutoplayBlocked(iframeId, 3000) || eventLog.ytSingleTrackAutoplayBlocked(iframeId, 3000))\r\n    m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (uID: ${iframeId})`);\r\n\r\n  if (m.players.crossfade.isFading() === false)\r\n  {\r\n    const player = m.players.playerFromUid(iframeId);\r\n    player.mute(settings.playback.masterMute);\r\n    player.setVolume(settings.playback.masterVolume);\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (uID: ${iframeId})`);\r\n\r\n  // Call order is important on play events for state handling: Always sync first!\r\n  m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onYouTubeStatePaused(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (uID: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    m.playbackState.sync(iframeId, m.playbackState.STATE.PAUSE);\r\n    playbackTimer.stop();\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateCued(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (uID: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (uID: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event, iframeId)\r\n{\r\n  const player = m.players.playerFromUid(iframeId);\r\n\r\n  // Handle single track fetched cueOrPlaySingleTrackById() errors for unplayable tracks (= 150)\r\n  if ((event.data === 150) && (player instanceof mediaPlayers.SingleTrack) && player.isCued())\r\n  {\r\n    debug.log(`onYouTubePlayerError(150) - SingleTrack.isCued(): true`);\r\n    player.setIsCued(false);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else if ((event.data !== null) && player.isPlayable())\r\n  {\r\n    debug.log('onYouTubePlayerError: ' + event.data);\r\n    player.setIsPlayable(false);\r\n    onPlayerError(player, event.target.getVideoUrl());\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady(player, iframeId)\r\n{\r\n  debug.log(`onSCPlayerEventReady(): ${iframeId} => ${player.getUid()} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (m.players.crossfade.isFading() && m.players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (config.maxPlaybackStartDelay * 1000)))\r\n      m.playbackState.sync(event.soundId, m.playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    m.playbackState.sync(event.soundId, m.playbackState.STATE.PLAY);\r\n    m.players.current.mute(settings.playback.masterMute);\r\n    m.players.current.setVolume(settings.playback.masterVolume);\r\n  }\r\n\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n\r\n  if (eventLog.scAutoplayBlocked(event.soundId, 3000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.PLAYBACK_BLOCKED, { currentTrack: m.players.trackFromUid(event.soundId), numTracks: m.players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (m.players.isCurrent(event.soundId))\r\n    {\r\n      m.players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          m.playbackState.sync(event.soundId, m.playbackState.STATE.PAUSE);\r\n          playbackTimer.stop();\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      m.players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (m.players.isCurrent(event.soundId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = m.players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${m.players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setIsPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Gallery playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { TRACK_TYPE }         from '../mediaplayers.js';\r\nimport { replaceClass }       from '../../shared/utils.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../playback-events.js';\r\n\r\nimport {\r\n  SINGLE_TRACK_PLAY,\r\n  isSingleTrackFetch,\r\n  playSingleTrack,\r\n} from './single-track-fetch.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-events');\r\n\r\nconst m = {\r\n  snackbarId:      0,\r\n  nowPlayingIcons: null,\r\n};\r\n\r\nconst config = {\r\n  nowPlayingIconsSelector: 'h2.track-artist-title',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.nowPlayingIcons = document.querySelectorAll(config.nowPlayingIconsSelector);\r\n\r\n  addListener(EVENT.MEDIA_PLAYING,     mediaPlaying);\r\n  addListener(EVENT.MEDIA_PAUSED,      mediaPaused);\r\n  addListener(EVENT.MEDIA_ENDED,       mediaEnded);\r\n  addListener(EVENT.MEDIA_CUE_TRACK,   mediaCueTrack);\r\n  addListener(EVENT.CONTINUE_AUTOPLAY, continueAutoplay);\r\n  addListener(EVENT.RESUME_AUTOPLAY,   resumeAutoplay);\r\n  addListener(EVENT.AUTOPLAY_BLOCKED,  autoplayBlocked);\r\n  addListener(EVENT.PLAYBACK_BLOCKED,  playbackBlocked);\r\n  addListener(EVENT.MEDIA_UNAVAILABLE, mediaUnavailable);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(m.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (settings.gallery.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaCueTrack(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    playerScrollTo(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (isSingleTrackFetch() && (playbackEvent.data.trackType === TRACK_TYPE.YOUTUBE))\r\n    playSingleTrack(SINGLE_TRACK_PLAY.NEXT, true);\r\n  else\r\n    autoplayNavTo(response.nextPage, true);\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayData = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debug.log(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayData !== null) ? JSON.stringify(autoplayData) : 'NO'}`);\r\n\r\n  if (autoplayData !== null)\r\n  {\r\n    const iframeId = document.getElementById(autoplayData.trackId)?.querySelector('iframe').id;\r\n    playbackEvent.callback.resumeAutoplay(autoplayData, iframeId);\r\n  }\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  m.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => playbackEvent.callback.togglePlayPause());\r\n}\r\n\r\nfunction playbackBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n  debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', playbackEvent.data);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  m.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (isSingleTrackFetch())\r\n    {\r\n      // ToDo: Make below behaviour consistent throughout instead of: playSingleTrack(true) or\r\n      //                                                              playSingleTrack(isPlaying()) ?\r\n      // Meaning settings.playback.autoplay must be TRUE for autoplay triggering on next track played...?\r\n      playSingleTrack(SINGLE_TRACK_PLAY.NEXT, settings.playback.autoplay);\r\n    }\r\n    else if (response.nextPage !== null)\r\n    {\r\n      autoplayNavTo(response.nextPage, true);\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Crossfade UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger    from '../../shared/debuglogger.js';\r\nimport * as playbackEvents from '../playback-events.js';\r\nimport { isPlaying }       from '../playback-controls.js';\r\nimport { presetList }      from '../../shared/settings/settings.js';\r\nimport { replaceClass }    from '../../shared/utils.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\n\r\nimport {\r\n  STATE,\r\n  ElementsWrapper\r\n} from '../element-wrappers.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('crossfade-controls');\r\nconst m     = { players: {} };\r\nconst ctrl  = {};\r\n\r\nconst config = {\r\n  crossfadePresetSelector: '.crossfade-preset-control',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     '.crossfade-fadeto-control',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nexport function init(mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.players = mediaPlayers;\r\n\r\n  ctrl.crossfadePreset = ElementsWrapper(config.crossfadePresetSelector);\r\n  ctrl.crossfadeTo     = ElementsWrapper(config.crossfadeToSelector);\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element => setCrossfadePreset(element, settings.gallery.trackCrossfadeDefPreset));\r\n    ctrl.crossfadeTo.clickCallback = crossfadeClickCallback;\r\n  }\r\n\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY, playbackReady);\r\n}\r\n\r\nexport function playbackReady()\r\n{\r\n  debug.log('playbackReady()');\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED.CLASS, STATE.ENABLED.CLASS);\r\n    });\r\n\r\n    ctrl.crossfadeTo.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, index)\r\n{\r\n  element.setAttribute(config.crossfadePresetData, index);\r\n  element.textContent = `${index + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[index].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  const index = parseInt(event.target.getAttribute(config.crossfadePresetData));\r\n  setCrossfadePreset(event.target, ((index + 1) < presetList.crossfade.length) ? (index + 1) : 0);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (m.players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('gallery-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe = element.querySelector('iframe');\r\n      const index  = parseInt(element.querySelector(config.crossfadePresetSelector).getAttribute(config.crossfadePresetData));\r\n\r\n      replaceClass(element.querySelector(`div${config.crossfadeToSelector}`), STATE.ENABLED.CLASS, STATE.DISABLED.CLASS);\r\n      ctrl.crossfadeTo.clickCallback(m.players.uIdFromIframeId(iframe.id), presetList.crossfade[index]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? m.players.getTrackData().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  ctrl.crossfadeTo.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS),\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS)\r\n      );\r\n    }\r\n    else\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS),\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS)\r\n      );\r\n    }\r\n  });\r\n}\r\n", "//\r\n// Gallery players module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport { crossfadeClosure }   from './crossfade.js';\r\nimport { settings }           from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../playback-events.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-players');\r\n\r\n\r\n// ************************************************************************************************\r\n// Gallery players closure\r\n// ************************************************************************************************\r\n\r\nexport const galleryPlayers = (() =>\r\n{\r\n  let playTrack      = null;\r\n  let crossfade      = null;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n    indexMap,\r\n    get crossfade()                 { return crossfade;                       },\r\n    get current()                   { return mediaPlayers[playerIndex];       },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];   },\r\n    getPlayerIndex()                { return playerIndex;                     },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;          },\r\n    getTrackType()                  { return this.current.getTrackType();     },\r\n    getNumTracks()                  { return mediaPlayers.length;             },\r\n    getCurrentTrack()               { return playerIndex + 1;                 },\r\n    playerFromUid(uId)              { return mediaPlayers[indexMap.get(uId)]; },\r\n    trackFromUid(uId)               { return (indexMap.get(uId) + 1);         },\r\n    isCurrent(uId)                  { return (uId === this.current.getUid()); },\r\n    init,\r\n    add,\r\n    uIdFromIframeId,\r\n    stop,\r\n    mute,\r\n    getTrackData,\r\n    prevTrack,\r\n    nextTrack,\r\n    jumpToTrack,\r\n  };\r\n\r\n  function init(playTrackCallback)\r\n  {\r\n    debug.log('init()');\r\n\r\n    playTrack = playTrackCallback;\r\n    crossfade = crossfadeClosure(this);\r\n\r\n    addListener(EVENT.MEDIA_PLAYING, () => crossfade.start());\r\n    addListener(EVENT.MEDIA_PAUSED,  () => crossfade.stop());\r\n  }\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n\r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getUid(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function uIdFromIframeId(iframeId)\r\n  {\r\n    return mediaPlayers.find(player => (player.getIframeId() === iframeId)).getUid();\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n\r\n  function mute()\r\n  {\r\n    this.current.mute(settings.playback.masterMute);\r\n    crossfade.mute(settings.playback.masterMute);\r\n  }\r\n\r\n  function getTrackData()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      duration:     this.current.getDuration(),\r\n      thumbnail:    { src: this.current.getThumbnailSrc(), class: this.current.getThumbnailClass() },\r\n    };\r\n  }\r\n\r\n  function prevTrack(playMedia)\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function nextTrack(playMedia)\r\n  {\r\n    playerIndex++;\r\n\r\n    if (playerIndex < this.getNumTracks())\r\n    {\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function jumpToTrack(track, playMedia, scrollToMedia = true)\r\n  {\r\n    if ((track > 0) && (track <= this.getNumTracks()))\r\n    {\r\n      playerIndex = track - 1;\r\n      playTrack(playMedia, scrollToMedia);\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n});\r\n", "//\r\n// List playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport * as eventLogger       from '../eventlogger.js';\r\nimport * as playbackControls  from '../playback-controls.js';\r\nimport * as listControls      from './list-controls.js';\r\nimport * as mediaPlayers      from '../mediaplayers.js';\r\nimport * as playbackEvents    from '../playback-events.js';\r\nimport * as utils             from '../../shared/utils.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { STATE }              from '../element-wrappers.js';\r\nimport { showModal }          from '../../shared/modal.js';\r\nimport { playbackTimer }      from './list-playback-timer.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('list-playback');\r\nconst eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  player:            null,\r\n  autoplayData:      null,\r\n  playerReady:       false,\r\n  firstStatePlaying: true,\r\n  currentTrackId:    null,\r\n  currentSnackbarId: 0,\r\n};\r\n\r\nconst noPlayableTracksError = /*html*/ `\r\n  <p>The <b>List Player</b> only supports playing YouTube tracks, SoundCloud tracks will be automatically skipped over.</p>\r\n  <p>SoundCloud tracks must be played using the <b>Gallery Player</b> or by clicking / tapping on the track <b>Artist + Title</b> text link in the <b>List Player</b>.</p>\r\n  <p>To toggle between the <b>Gallery</b> and <b>List</b> players, please use the <b>Pref. Player: GALLERY / LIST</b> setting toggle button in the sites footer area.</p>`;\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  listControls.init(setCurrentTrack);\r\n\r\n  if (cueInitialTrack() !== null)\r\n    initYouTubeAPI();\r\n  else\r\n    showSnackbar('No playable YouTube tracks!', 0, 'help', () => showModal('No playable tracks', noPlayableTracksError));\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction cueInitialTrack()\r\n{\r\n  m.currentTrackId = listControls.getNextPlayableId();\r\n  m.autoplayData   = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  if (m.currentTrackId !== null)\r\n  {\r\n    if ((m.autoplayData !== null) && (m.autoplayData.trackId !== null))\r\n    {\r\n      const matchesVideoId = m.autoplayData.trackId.match(mediaPlayers.youTubeVideoIdRegEx);\r\n\r\n      if (matchesVideoId !== null)\r\n      {\r\n        const trackElement = listControls.queryTrack(`[data-track-source-uid=\"${matchesVideoId[0]}\"]`);\r\n\r\n        if (trackElement !== null)\r\n          m.currentTrackId = trackElement.id;\r\n      }\r\n      else if (m.autoplayData.trackId.match(/^track-(?!0)\\d{1,9}$/i) !== null)\r\n      {\r\n        const trackElement = listControls.queryTrack(`[data-track-id=\"${m.autoplayData.trackId}\"]`);\r\n\r\n        if (trackElement !== null)\r\n        {\r\n          if (listControls.getTrackType(trackElement) === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n            m.currentTrackId = trackElement.id;\r\n          else\r\n            showSnackbar('Cannot play SoundCloud track', 5, 'help', () => showModal('Cannot play SoundCloud track', noPlayableTracksError));\r\n        }\r\n        else\r\n        {\r\n          showSnackbar('Unable to cue track (not found)', 5);\r\n        }\r\n      }\r\n    }\r\n\r\n    listControls.setCuedTrack(m.currentTrackId);\r\n  }\r\n\r\n  debug.log(`cueInitialTrack() - currentTrackId: ${m.currentTrackId} - autoplayData: ${(m.autoplayData !== null) ? JSON.stringify(m.autoplayData) : 'N/A'}`);\r\n\r\n  return m.currentTrackId;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction setCurrentTrack(nextTrackId, playNextTrack = true, isPointerClick = false)\r\n{\r\n  const nextTrackType = listControls.getTrackType(listControls.queryTrackId(nextTrackId));\r\n\r\n  debug.log(`setCurrentTrack() - nextTrackType: ${debug.getKeyForValue(mediaPlayers.TRACK_TYPE, nextTrackType)} - nextTrackId: ${nextTrackId} - playNextTrack: ${playNextTrack} - isPointerClick: ${isPointerClick}`);\r\n\r\n  if ((nextTrackType === mediaPlayers.TRACK_TYPE.SOUNDCLOUD) && isPointerClick)\r\n  {\r\n    showSnackbar('Cannot play SoundCloud track', 5, 'help', () => showModal('Cannot play SoundCloud track', noPlayableTracksError));\r\n    return;\r\n  }\r\n\r\n  if (nextTrackId === m.currentTrackId)\r\n  {\r\n    togglePlayPause();\r\n  }\r\n  else\r\n  {\r\n    if (playbackControls.isPlaying())\r\n      m.player.embedded.stopVideo();\r\n\r\n    m.currentTrackId = nextTrackId;\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { trackId: nextTrackId, isPointerClick: isPointerClick });\r\n    cueOrPlayCurrentTrack(playNextTrack);\r\n  }\r\n}\r\n\r\nfunction cueOrPlayCurrentTrack(playTrack)\r\n{\r\n  const sourceUid = listControls.updateTrackDetails();\r\n\r\n  m.player.resetState();\r\n\r\n  if (playTrack)\r\n  {\r\n    m.player.playTrackById(sourceUid);\r\n    listControls.setCurrentTrackState(STATE.PLAYING);\r\n    playbackControls.updateTrackData();\r\n  }\r\n  else\r\n  {\r\n    m.player.cueTrackById(sourceUid);\r\n    listControls.setCurrentTrackState(STATE.PAUSED);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function togglePlayPause()\r\n{\r\n  if (m.currentTrackId === null)\r\n  {\r\n    setCurrentTrack(listControls.queryTrack('div.track-entry.current').id);\r\n  }\r\n  else\r\n  {\r\n    if (playbackControls.isPlaying())\r\n      m.player.embedded.pauseVideo();\r\n    else\r\n      m.player.play(onYouTubePlayerError);\r\n  }\r\n}\r\n\r\nexport function setVolume()\r\n{\r\n  m.player.setVolume(settings.playback.masterVolume);\r\n}\r\n\r\nexport function toggleMute(setMuteSetting = true)\r\n{\r\n  if (setMuteSetting)\r\n    settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n\r\n  if (settings.playback.masterMute)\r\n    m.player.embedded.mute();\r\n  else\r\n    m.player.embedded.unMute();\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  const prevTrackId = listControls.getPrevPlayableId();\r\n  const position    = m.player.embedded.getCurrentTime();\r\n\r\n  if ((prevTrackId !== null) && (position <= 5))\r\n  {\r\n    setCurrentTrack(prevTrackId, playbackControls.isPlaying());\r\n    playbackControls.updateTrackData();\r\n  }\r\n  else if (position !== 0)\r\n  {\r\n    m.player.embedded.seekTo(0);\r\n    playbackControls.updateTimerAndProgress(0, 0, m.player.getDuration());\r\n  }\r\n}\r\n\r\nexport function nextTrack()\r\n{\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  if (nextTrackId !== null)\r\n  {\r\n    setCurrentTrack(nextTrackId, playbackControls.isPlaying());\r\n    playbackControls.updateTrackData();\r\n  }\r\n}\r\n\r\nasync function advanceToNextTrack(autoplay = false, isPlaybackError = false)\r\n{\r\n  const repeatMode  = isPlaybackError ? playbackControls.REPEAT.OFF : playbackControls.getRepeatMode();\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  debug.log(`advanceToNextTrack() autoplay: ${autoplay} - isPlaybackError: ${isPlaybackError} - nextTrackId: ${nextTrackId} - repeatMode: ${debug.getKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n  if (autoplay && (repeatMode === playbackControls.REPEAT.ONE))\r\n  {\r\n    m.player.embedded.seekTo(0);\r\n    m.player.play(onYouTubePlayerError);\r\n  }\r\n  else if (autoplay && (nextTrackId === null) && (repeatMode === playbackControls.REPEAT.ALL))\r\n  {\r\n    setCurrentTrack(listControls.getNextPlayableId(null)); // getNextPlayableId(null) means the nextTrackId will come from the top of the playlist\r\n    playerScrollTo(0);\r\n  }\r\n  else\r\n  {\r\n    if (nextTrackId === null)\r\n    {\r\n      if (settings.list.showLoadMoreTracks)\r\n      {\r\n        const tracksLoaded = await listControls.loadMoreTracks();\r\n\r\n        if (autoplay && tracksLoaded)\r\n          setCurrentTrack(listControls.getNextPlayableId());\r\n      }\r\n      else\r\n      {\r\n        autoplayNavTo(response.nextPage, autoplay);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      autoplay ? setCurrentTrack(nextTrackId) : listControls.setCurrentTrackState(STATE.PAUSED);\r\n    }\r\n  }\r\n}\r\n\r\nfunction skipToNextTrack()\r\n{\r\n  if ((playbackControls.isPlaying() === false) && (m.autoplayData !== null))\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n    eventLog.add(eventLogger.SOURCE.YOUTUBE, -1, listControls.getNextPlayableId());\r\n  }\r\n\r\n  if (playbackControls.isPlaying() === false)\r\n    advanceToNextTrack(true, true);\r\n}\r\n\r\nfunction stopSkipToNextTrack()\r\n{\r\n  m.currentTrackId = null;\r\n  listControls.setCurrentTrackState(STATE.PAUSED);\r\n}\r\n\r\nexport function getStatus()\r\n{\r\n  const currentTrack = listControls.queryTrack('div.track-entry.current');\r\n\r\n  if (currentTrack !== null)\r\n  {\r\n    const allTracksList = listControls.queryTrackAll('div.track-entry');\r\n    const currentIndex  = Array.prototype.indexOf.call(allTracksList, currentTrack);\r\n\r\n    return {\r\n      isPlaying:    playbackControls.isPlaying(),\r\n      currentTrack: (currentIndex + 1),\r\n      trackType:    mediaPlayers.TRACK_TYPE.YOUTUBE,\r\n      position:     Math.ceil(m.player.embedded.getCurrentTime()),\r\n      numTracks:    1,\r\n      trackId:      allTracksList[currentIndex].getAttribute('data-track-id'),\r\n      iframeId:     'youtube-player',\r\n    };\r\n  }\r\n\r\n  return { isPlaying: false, currentTrack: 1, position: 0, trackId: 0 };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n\r\n    // eslint-disable-next-line no-undef\r\n    const embeddedPlayer = new YT.Player('youtube-player',\r\n    {\r\n      events:\r\n      {\r\n        onReady:       onYouTubePlayerReady,\r\n        onStateChange: onYouTubePlayerStateChange,\r\n        onError:       onYouTubePlayerError,\r\n      }\r\n    });\r\n\r\n    m.player = new mediaPlayers.Playlist(embeddedPlayer);\r\n    debug.log(m.player);\r\n\r\n    playbackControls.init(m.player, (positionSeconds) => m.player.embedded.seekTo(positionSeconds));\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 33 });\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n\r\n  if (m.autoplayData?.autoplay === true)\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n\r\n  playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 66 });\r\n  playbackTimer.ready(m.player);\r\n  listControls.ready(m.player);\r\n\r\n  toggleMute(false);\r\n  m.player.setVolume(settings.playback.masterVolume);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_READY, { resetProgressBar: false });\r\n  cueOrPlayCurrentTrack(m.autoplayData?.autoplay === true);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange(): ${event.data} - trackId: ${m.currentTrackId}`);\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, m.currentTrackId);\r\n\r\n  // Set playback controls state to YouTube state so we have a single source of truth = playbackControls.isPlaying()\r\n  if (event.data !== YT.PlayerState.PLAYING) // eslint-disable-line no-undef\r\n    playbackControls.setPauseState();\r\n\r\n  switch(event.data)\r\n  {\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.UNSTARTED:\r\n      onYouTubeStateUnstarted();\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.BUFFERING:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PLAYING:\r\n      onYouTubeStatePlaying();\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PAUSED:\r\n      listControls.setCurrentTrackState(STATE.PAUSED);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.ENDED:\r\n      playbackTimer.stop();\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED);\r\n      advanceToNextTrack(settings.playback.autoplay);\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction onYouTubeStateUnstarted()\r\n{\r\n  if (eventLog.ytAutoplayBlocked(m.currentTrackId, 3000))\r\n  {\r\n    listControls.setCurrentTrackState(STATE.PAUSED);\r\n    m.currentSnackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => m.player.play(onYouTubePlayerError));\r\n  }\r\n\r\n  if (m.playerReady === false)\r\n  {\r\n    m.playerReady = true;\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 0 });\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying()\r\n{\r\n  dismissSnackbar(m.currentSnackbarId);\r\n\r\n  if (m.firstStatePlaying)\r\n  {\r\n    m.firstStatePlaying = false;\r\n    m.autoplayData      = null;\r\n\r\n    setTimeout(() =>\r\n    {\r\n      if (settings.playback.autoplay            &&\r\n          playbackControls.isPlaying()          &&\r\n          (Math.round(window.pageYOffset) <= 1) &&\r\n          utils.matchesMedia(utils.MATCH.SITE_MAX_WIDTH_MOBILE))\r\n      {\r\n        playerScrollTo(0);\r\n      }\r\n    },\r\n    6000);\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log(`onYouTubePlayerError(): playerError: ${event.data} - currentTrackId: ${m.currentTrackId} - isTrackCued: ${m.player.isTrackCued()}`);\r\n\r\n  m.player.setPlayerError(event.data);\r\n\r\n  if (m.player.isTrackCued() === false)\r\n  {\r\n    listControls.setTrackMessage('Error!');\r\n    eventLog.add(eventLogger.SOURCE.YOUTUBE, eventLogger.EVENT.PLAYER_ERROR, m.currentTrackId);\r\n    showSnackbar('Unable to play track, skipping to next', 5, 'Stop', stopSkipToNextTrack, skipToNextTrack);\r\n\r\n    debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', {\r\n      mediaUrl:   m.player.embedded.getVideoUrl(),\r\n      mediaTitle: `${m.player.getArtist()} - ${m.player.getTitle()}`,\r\n    });\r\n  }\r\n}\r\n", "//\r\n// List playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { PlaybackTimer }            from '../playback-timer.js';\r\nimport { EVENT, addListener }       from '../playback-events.js';\r\nimport { updateVolumeMuteSettings } from '../shared-gallery-list.js';\r\n\r\nimport {\r\n  isPlaying,\r\n  updateTimerAndProgress\r\n} from '../playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass ListPlaybackTimer extends PlaybackTimer\r\n{\r\n  #player = null;\r\n\r\n  #update(positionSecondsDecimal, durationSeconds)\r\n  {\r\n    if (positionSecondsDecimal !== undefined)\r\n    {\r\n      const positionSeconds = Math.round(positionSecondsDecimal);\r\n\r\n      updateTimerAndProgress((positionSecondsDecimal * 1000), positionSeconds, durationSeconds);\r\n\r\n      if ((positionSeconds > 0) && (durationSeconds > 0))\r\n        super.updateOncePerSecond(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  ready(player)\r\n  {\r\n    super.init();\r\n    this.#player = player;\r\n    addListener(EVENT.MEDIA_PLAYING, () => super.start());\r\n  }\r\n\r\n  updateTimer()\r\n  {\r\n    if (this.isVisible && isPlaying())\r\n      this.#update(this.#player.embedded.getCurrentTime(), this.#player.getDuration());\r\n  }\r\n\r\n  updateVolumeMute()\r\n  {\r\n    updateVolumeMuteSettings(this.#player.embedded.getVolume(), this.#player.embedded.isMuted());\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new ListPlaybackTimer();\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\nimport { showSnackbar } from '../shared/snackbar.js';\r\nimport { settings }     from '../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('screen-wakelock');\r\nconst m     = { wakeLock: null };\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initScreenWakeLock()\r\n{\r\n  if (settings.mobile.keepScreenOn)\r\n    document.addEventListener('click', enableScreenWakeLock);\r\n}\r\n\r\nfunction enableScreenWakeLock()\r\n{\r\n  debug.log('enableScreenWakeLock()');\r\n\r\n  document.removeEventListener('click', enableScreenWakeLock);\r\n\r\n  enableWakeLock();\r\n\r\n  document.addEventListener('visibilitychange', () =>\r\n  {\r\n    if ((document.visibilityState === 'visible') && (settings.mobile.keepScreenOn))\r\n      setStateVisible();\r\n  });\r\n}\r\n\r\nfunction setStateVisible()\r\n{\r\n  if (isSupported() && (m.wakeLock === null))\r\n    requestWakeLock();\r\n}\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enableWakeLock()\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      if (await requestWakeLock() !== true)\r\n      {\r\n        debug.log('enableWakeLock(): Screen Wake Lock request failed');\r\n        showSnackbar('Keep Screen On failed', 5, 'Disable', () => (settings.mobile.keepScreenOn = false));\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enableWakeLock(): Screen Wake Lock is not supported');\r\n    showSnackbar('Keep Screen On is not supported', 5, 'Disable', () => (settings.mobile.keepScreenOn = false));\r\n  }\r\n}\r\n\r\nasync function requestWakeLock()\r\n{\r\n  try\r\n  {\r\n    m.wakeLock = await navigator.wakeLock.request('screen');\r\n  //debug.log('requestWakeLock(): Screen Wake Lock is Enabled');\r\n\r\n    m.wakeLock.addEventListener('release', () =>\r\n    {\r\n    //debug.log('requestWakeLock(): Screen Wake Lock was Released');\r\n      m.wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`requestWakeLock(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../shared/debuglogger.js';\r\nimport * as eventLogger       from './eventlogger.js';\r\nimport * as galleryPlayback   from './gallery/gallery-playback.js';\r\nimport * as listPlayback      from './list/list-playback.js';\r\nimport * as playbackEvents    from './playback-events.js';\r\nimport * as utils             from '../shared/utils.js';\r\nimport * as footerToggles     from './footer-toggles.js';\r\nimport * as shared            from './shared-gallery-list.js';\r\nimport { ElementClick }       from '../shared/element-click.js';\r\nimport { showSnackbar }       from '../shared/snackbar.js';\r\nimport { initScreenWakeLock } from './screen-wakelock.js';\r\nimport { TRACK_TYPE }         from './mediaplayers.js';\r\n\r\nimport {\r\n  SINGLE_TRACK_PLAY,\r\n  isSingleTrackFetch,\r\n  isSingleTrackLoading,\r\n  playSingleTrack,\r\n} from './gallery/single-track-fetch.js';\r\n\r\nimport {\r\n  setPlaybackControlsCss,\r\n  toggleRepeat,\r\n} from './playback-controls.js';\r\n\r\nimport {\r\n  response,\r\n  settings,\r\n  getSessionData,\r\n} from '../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('playback-interaction');\r\nconst eventLog = new eventLogger.Interaction(10);\r\n\r\nconst m = {\r\n  player:             null,\r\n  isPlaybackReady:    false,\r\n  siteNavUiElements:  null,\r\n  trackNavUiElements: null,\r\n  keyboardShortcuts:  null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{\r\n  debugLogger.measureStartupExecutionTime();\r\n\r\n  debug.log('DOMContentLoaded');\r\n\r\n  getSessionData();\r\n\r\n  if (shared.hasGalleryPlayer())\r\n    m.player = galleryPlayback;\r\n  else if (shared.hasListPlayer())\r\n    m.player = listPlayback;\r\n\r\n  if (m.player !== null)\r\n    initCommon();\r\n\r\n  footerToggles.init(m.player?.getStatus);\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction initCommon()\r\n{\r\n  debug.log('initCommon()');\r\n\r\n  // Set user settings CSS with JS as early as possible...\r\n  setPlaybackControlsCss();\r\n\r\n  // Must be done before player.init() since events are used to relay player status updates\r\n  initPlaybackEvents();\r\n\r\n  m.player.init();\r\n  m.siteNavUiElements  = new siteNavUiElements('#site-navigation');\r\n  m.trackNavUiElements = new trackNavUiElements('nav.single-track-nav .nav-links');\r\n\r\n  shared.fullscreenElement.init();\r\n  m.keyboardShortcuts = utils.keyboardShortcuts(settings.playback.keyboardShortcuts);\r\n\r\n  initListeners();\r\n  initScreenWakeLock();\r\n}\r\n\r\nfunction initPlaybackEvents()\r\n{\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY,       playbackEventPlaybackReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_CUE_TRACK,      playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PREV_TRACK,     () => playPrevNextTrack(null, SINGLE_TRACK_PLAY.PREV, response.prevPage));\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_NEXT_TRACK,     () => playPrevNextTrack(null, SINGLE_TRACK_PLAY.NEXT, response.nextPage));\r\n}\r\n\r\nfunction initListeners()\r\n{\r\n  utils.addListener('.playback-shuffle-control span', 'click', shared.shuffleClickNavTo);\r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  document.addEventListener('keydown', documentEventMediaKeyDown);\r\n  window.addEventListener('blur', windowEventBlur);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Regular keyboard events handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady           &&\r\n      m.keyboardShortcuts.allow() &&\r\n      (event.ctrlKey === false)   &&\r\n      (event.altKey  === false))\r\n  {\r\n    // Events that need event.repeat goes here\r\n    switch(event.key)\r\n    {\r\n      case '+':\r\n      case '-':\r\n        onKeysVolumeChange(event);\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n        if (event.shiftKey)\r\n        {\r\n          onKeysVolumeChange(event);\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (event.repeat === false)\r\n    {\r\n      switch(event.code)\r\n      {\r\n        case 'Backquote':\r\n          event.preventDefault();\r\n          shared.playerScrollTo(m.player.getStatus().trackId);\r\n          break;\r\n      }\r\n\r\n      switch (event.key)\r\n      {\r\n        case ' ':\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n          break;\r\n\r\n        case 'Home':\r\n        case 'End':\r\n        case 'PageUp':\r\n        case 'PageDown':\r\n          shared.playerOnKeysScroll(event);\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n          onKeyArrowLeft(event);\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n          onKeyArrowRight(event);\r\n          break;\r\n\r\n        case 'A':\r\n          footerToggles.autoplay.toggle();\r\n          break;\r\n\r\n        case 'f':\r\n        case 'F':\r\n          event.preventDefault();\r\n          shared.fullscreenElement.toggle(document.getElementById(m.player.getStatus().iframeId));\r\n          break;\r\n\r\n        case 'm':\r\n        case 'M':\r\n          event.preventDefault();\r\n          m.player.toggleMute();\r\n          showSnackbar(settings.playback.masterMute ? '<b>Muted</b> (<b>m</b> to Unmute)' : '<b>Unmuted</b> (<b>m</b> to Mute)', 3);\r\n          break;\r\n\r\n        case 'p':\r\n        case 'P':\r\n          footerToggles.playerType.toggle();\r\n          break;\r\n\r\n        case 'r':\r\n        case 'R':\r\n          showSnackbar(`${toggleRepeat().title} (<b>r</b> to change)`, 3);\r\n          break;\r\n\r\n        case 'x':\r\n        case 'X':\r\n          footerToggles.crossfade.toggle();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard media keys event handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventMediaKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady && m.keyboardShortcuts.allow()) // && (event.repeat  === false)) does not function as expected on Firefox\r\n  {\r\n    switch(event.key)\r\n    {\r\n      case 'MediaPlayPause':\r\n        if (playbackEvents.hasPlaybackStarted === false)\r\n        {\r\n          debug.log('documentEventMediaKeyDown(): MediaPlayPause');\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n        }\r\n        break;\r\n\r\n      case 'MediaTrackPrevious':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackPrevious');\r\n        event.preventDefault();\r\n        m.player.prevTrack();\r\n        break;\r\n\r\n      case 'MediaTrackNext':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackNext');\r\n        event.preventDefault();\r\n        m.player.nextTrack();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard event handlers\r\n// ************************************************************************************************\r\n\r\nfunction onKeyArrowLeft(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    playPrevNextTrack(null, SINGLE_TRACK_PLAY.PREV, response.prevPage);\r\n  else\r\n    m.player.prevTrack();\r\n}\r\n\r\nfunction onKeyArrowRight(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    playPrevNextTrack(null, SINGLE_TRACK_PLAY.NEXT, response.nextPage);\r\n  else\r\n    m.player.nextTrack();\r\n}\r\n\r\nfunction playPrevNextTrack(event, playPrevNext, prevNextPage)\r\n{\r\n  event?.preventDefault();\r\n\r\n  if (isSingleTrackFetch())\r\n  {\r\n    if (m.player.getStatus().trackType === TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if (isSingleTrackLoading() === false)\r\n        playSingleTrack(playPrevNext, m.player.getStatus().isPlaying);\r\n      else\r\n        showSnackbar('Loading track, please wait...', 3);\r\n    }\r\n    else\r\n    {\r\n      prevNextNavTo(null, prevNextPage);\r\n    }\r\n  }\r\n  else\r\n  {\r\n    prevNextNavTo(null, prevNextPage);\r\n  }\r\n}\r\n\r\nfunction onKeysVolumeChange(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  settings.playback.masterVolume = ((event.key === '+') || (event.key === 'ArrowUp'))\r\n    ? (settings.playback.masterVolume < 100) ? (settings.playback.masterVolume + 5) : 100\r\n    : (settings.playback.masterVolume > 5  ) ? (settings.playback.masterVolume - 5) : 5;\r\n\r\n  m.player.setVolume();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventPlaybackReady()\r\n{\r\n  utils.addListener('.playback-details-control',   'click', playbackDetailsClick);\r\n  utils.addListener('.playback-thumbnail-control', 'click', playbackThumbnailClick);\r\n  utils.addListener('.playback-timer-control',     'click', playbackTimerClick);\r\n  m.isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  if (settings.playback.autoExitFullscreen)\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  if (settings.playback.autoExitFsOnWarning && (playbackEvent.data.timeRemainingSeconds <= settings.playback.timeRemainingSeconds))\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Window and document event handlers\r\n// ************************************************************************************************\r\n\r\nfunction windowEventBlur()\r\n{\r\n  // ToDo: This is only for gallery players for now...?\r\n  if (shared.isListPlayer())\r\n    return;\r\n\r\n  // setTimeout(0) = Yield\r\n  setTimeout(() =>\r\n  {\r\n    // document (page) iframe was focused\r\n    if (document.activeElement instanceof HTMLIFrameElement)\r\n    {\r\n      setTimeout(() =>\r\n      {\r\n        document.activeElement.blur();\r\n\r\n        // Needed to get Firefox to behave like Chrome\r\n        if (document.activeElement instanceof HTMLIFrameElement)\r\n          document.activeElement.blur();\r\n      }, 250);\r\n    }\r\n  }, 0);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick()\r\n{\r\n  shared.playerScrollTo(m.player.getStatus().trackId);\r\n}\r\n\r\nfunction playbackThumbnailClick()\r\n{\r\n  if (shared.isGalleryPlayer())\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK);\r\n\r\n    if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, 500))\r\n      shared.fullscreenElement.enter(document.getElementById(m.player.getStatus().iframeId));\r\n  }\r\n  else if (shared.isListPlayer())\r\n  {\r\n    shared.playerScrollTo(0);\r\n  }\r\n}\r\n\r\nfunction playbackTimerClick()\r\n{\r\n  footerToggles.autoplay.toggle();\r\n}\r\n\r\nclass siteNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('a.navbar-prev-link'))\r\n      return playPrevNextTrack(this.event, SINGLE_TRACK_PLAY.PREV, response.prevPage);\r\n\r\n    if (this.clicked('a.navbar-next-link'))\r\n      return playPrevNextTrack(this.event, SINGLE_TRACK_PLAY.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nclass trackNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('div.nav-previous a'))\r\n      return playPrevNextTrack(this.event, SINGLE_TRACK_PLAY.PREV, response.prevPage);\r\n\r\n    if (this.clicked('div.nav-next a'))\r\n      return playPrevNextTrack(this.event, SINGLE_TRACK_PLAY.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  shared.autoplayNavTo(destUrl, m.player.getStatus().isPlaying);\r\n}\r\n"],
  "mappings": "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",
  "names": ["debug", "newInstance", "SOURCE", "EVENT", "entry", "_log", "_maxEntries", "_matchCount", "_lastPos", "EventLog", "maxEntries", "__privateAdd", "__privateSet", "eventSource", "eventType", "uId", "timeStamp", "logEntry", "__privateGet", "index", "__privateWrapper", "elements", "delta", "matchCount", "event", "Interaction", "deltaTime", "Playback", "gallery_playback_exports", "__export", "getStatus", "init", "nextTrack", "prevTrack", "setVolume", "toggleMute", "togglePlayPause", "_intervalId", "_lastPosSeconds", "PlaybackTimer", "__privateAdd", "__publicField", "__privateSet", "__privateGet", "timeRemainingWarningBlink", "positionSeconds", "durationSeconds", "settings", "remainingSeconds", "dispatch", "EVENT", "_players", "_crossfadeInit", "_updateCallback", "updateCallback_fn", "_isAutoCrossfade", "isAutoCrossfade_fn", "_updateAutoCrossfade", "updateAutoCrossfade_fn", "_GalleryPlaybackTimer", "PlaybackTimer", "__privateAdd", "players", "crossfadeInit", "__privateSet", "__privateMethod", "__privateGet", "position", "duration", "volume", "updateVolumeMuteSettings", "GalleryPlaybackTimer", "positionMilliseconds", "durationSeconds", "positionSeconds", "updateTimerAndProgress", "__superGet", "settings", "TYPE", "playbackTimer", "debug", "newInstance", "eventLog", "Playback", "m", "config", "init", "players", "playbackState", "embeddedEventHandler", "initYouTubeAPI", "initSoundCloudAPI", "getLoadingPercent", "updatePlayersReady", "EVENT", "dispatch", "getAllPlayers", "elements", "element", "trackType", "iframe", "player", "TRACK_TYPE", "getYouTubePlayer", "embeddedPlayer", "SoundCloud", "durationMilliseconds", "onSoundCloudPlayerEventReady", "onSoundCloudPlayerEventPlay", "onSoundCloudPlayerEventPause", "onSoundCloudPlayerEventFinish", "onSoundCloudPlayerEventError", "playerId", "isSingleTrackPlayer", "videoId", "event", "onYouTubePlayerReady", "onYouTubePlayerStateChange", "onYouTubePlayerError", "SingleTrack", "YouTube", "onPlayerError", "mediaUrl", "eventSource", "SOURCE", "getPlayerErrorData", "artist", "title", "tag", "firstScriptTag", "iframeId", "onYouTubeStateUnstarted", "onYouTubeStateBuffering", "onYouTubeStatePlaying", "onYouTubeStatePaused", "onYouTubeStateCued", "onYouTubeStateEnded", "settings", "playbackTimer", "positionMilliseconds", "soundObject", "debug", "newInstance", "m", "config", "init", "addListener", "EVENT", "mediaPlaying", "mediaPaused", "mediaEnded", "mediaCueTrack", "continueAutoplay", "resumeAutoplay", "autoplayBlocked", "playbackBlocked", "mediaUnavailable", "playbackEvent", "dismissSnackbar", "nowPlayingIcon", "resetNowPlayingIcons", "replaceClass", "settings", "playerScrollTo", "isSingleTrackFetch", "TRACK_TYPE", "playSingleTrack", "SINGLE_TRACK_PLAY", "autoplayNavTo", "response", "autoplayData", "KEY", "iframeId", "showSnackbar", "playbackEventErrorTryNext", "logErrorOnServer", "nowPlayingElement", "element", "debug", "newInstance", "m", "ctrl", "config", "init", "mediaPlayers", "crossfadeClickCallback", "ElementsWrapper", "element", "setCrossfadePreset", "settings", "addListener", "EVENT", "playbackReady", "crossfadePresetClick", "replaceClass", "STATE", "crossfadeToClick", "updateCrossfadeToState", "index", "presetList", "event", "isPlaying", "iframe", "isPlayingState", "currentTrack", "debug", "newInstance", "galleryPlayers", "playTrack", "crossfade", "mediaPlayers", "indexMap", "playerIndex", "nextPlayerIndex", "uId", "init", "add", "uIdFromIframeId", "stop", "mute", "getTrackData", "prevTrack", "nextTrack", "jumpToTrack", "playTrackCallback", "crossfadeClosure", "addListener", "EVENT", "player", "iframeId", "settings", "playMedia", "track", "scrollToMedia", "debug", "newInstance", "m", "config", "init", "eventLog", "galleryPlayers", "playTrack", "seekClick", "crossfadeToClick", "playbackTimer", "crossfadeInit", "playbackState", "embeddedEventHandler", "togglePlayPause", "isPlaying", "setPauseState", "setPlayState", "onPlayerError", "prevTrack", "positionMilliseconds", "updateTimerAndProgress", "updateTrackData", "dispatch", "EVENT", "nextTrack", "isMediaEnded", "isLastTrack", "settings", "repeatPlayback", "repeatMode", "getRepeatMode", "REPEAT", "positionSeconds", "setVolume", "toggleMute", "cueTrack", "iframeId", "scrollToMedia", "playMedia", "skipToTrack", "trackNum", "SOURCE", "resumeAutoplay", "autoplayData", "cueOrPlaySingleTrackById", "trackData", "thumbnailData", "updateProgressPercent", "getStatus", "fadeInUid", "crossfadePreset", "TYPE", "crossfadeType", "crossfadeInUid", "embeddedEvent", "embeddedEventData", "ready", "singleTrackFetchReady", "STATE", "syncRecursive", "nextPlayerUid", "syncState", "list_playback_exports", "__export", "getStatus", "init", "nextTrack", "prevTrack", "setVolume", "toggleMute", "togglePlayPause", "_player", "_update", "update_fn", "_ListPlaybackTimer", "PlaybackTimer", "__privateAdd", "player", "__privateSet", "addListener", "EVENT", "isPlaying", "__privateMethod", "__privateGet", "updateVolumeMuteSettings", "ListPlaybackTimer", "positionSecondsDecimal", "durationSeconds", "positionSeconds", "updateTimerAndProgress", "__superGet", "playbackTimer", "debug", "newInstance", "eventLog", "Playback", "m", "noPlayableTracksError", "init", "setCurrentTrack", "cueInitialTrack", "initYouTubeAPI", "showSnackbar", "showModal", "getNextPlayableId", "KEY", "matchesVideoId", "youTubeVideoIdRegEx", "trackElement", "queryTrack", "getTrackType", "TRACK_TYPE", "setCuedTrack", "nextTrackId", "playNextTrack", "isPointerClick", "nextTrackType", "queryTrackId", "togglePlayPause", "isPlaying", "dispatch", "EVENT", "cueOrPlayCurrentTrack", "playTrack", "sourceUid", "updateTrackDetails", "setCurrentTrackState", "STATE", "updateTrackData", "onYouTubePlayerError", "setVolume", "settings", "toggleMute", "setMuteSetting", "prevTrack", "prevTrackId", "getPrevPlayableId", "position", "updateTimerAndProgress", "nextTrack", "advanceToNextTrack", "autoplay", "isPlaybackError", "repeatMode", "REPEAT", "getRepeatMode", "playerScrollTo", "tracksLoaded", "loadMoreTracks", "autoplayNavTo", "response", "skipToNextTrack", "SOURCE", "stopSkipToNextTrack", "getStatus", "currentTrack", "allTracksList", "queryTrackAll", "currentIndex", "embeddedPlayer", "onYouTubePlayerReady", "onYouTubePlayerStateChange", "Playlist", "positionSeconds", "tag", "firstScriptTag", "ready", "playbackTimer", "event", "setPauseState", "onYouTubeStateUnstarted", "onYouTubeStatePlaying", "dismissSnackbar", "matchesMedia", "MATCH", "setTrackMessage", "logErrorOnServer", "debug", "newInstance", "m", "initScreenWakeLock", "settings", "enableScreenWakeLock", "enableWakeLock", "setStateVisible", "isSupported", "requestWakeLock", "showSnackbar", "exception", "debug", "newInstance", "eventLog", "Interaction", "m", "measureStartupExecutionTime", "getSessionData", "hasGalleryPlayer", "gallery_playback_exports", "hasListPlayer", "list_playback_exports", "initCommon", "init", "setPlaybackControlsCss", "initPlaybackEvents", "siteNavUiElements", "trackNavUiElements", "fullscreenElement", "keyboardShortcuts", "settings", "initListeners", "initScreenWakeLock", "addListener", "EVENT", "playbackEventPlaybackReady", "playbackEventMediaEnded", "playbackEventMediaTimeRemaining", "playPrevNextTrack", "SINGLE_TRACK_PLAY", "response", "shuffleClickNavTo", "documentEventKeyDown", "documentEventMediaKeyDown", "windowEventBlur", "event", "onKeysVolumeChange", "playerScrollTo", "playerOnKeysScroll", "onKeyArrowLeft", "onKeyArrowRight", "autoplay", "showSnackbar", "playerType", "toggleRepeat", "crossfade", "hasPlaybackStarted", "playPrevNext", "prevNextPage", "isSingleTrackFetch", "TRACK_TYPE", "isSingleTrackLoading", "playSingleTrack", "prevNextNavTo", "playbackDetailsClick", "playbackThumbnailClick", "playbackTimerClick", "playbackEvent", "isListPlayer", "isGalleryPlayer", "SOURCE", "ElementClick", "destUrl", "autoplayNavTo"]
}
