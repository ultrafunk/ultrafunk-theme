{
  "version": 3,
  "sources": ["../../src/playback/eventlogger.js", "../../src/playback/gallery/gallery-playback.js", "../../src/playback/playback-timer.js", "../../src/playback/gallery/gallery-playback-timer.js", "../../src/playback/gallery/embedded-players.js", "../../src/playback/gallery/gallery-events.js", "../../src/playback/gallery/crossfade-controls.js", "../../src/playback/gallery/gallery-players.js", "../../src/playback/list/list-playback.js", "../../src/playback/list/list-playback-timer.js", "../../src/playback/screen-wakelock.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('eventlogger');\r\n\r\nexport const SOURCE = {\r\n// Default source\r\n  UNKNOWN: 1000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// Playback event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nexport const EVENT = {\r\n// Default event\r\n  UNKNOWN:         -2000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  180,\r\n  KEY_ARROW_RIGHT: 181,\r\n  MOUSE_CLICK:     182,\r\n// Playback event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timeStamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog parent class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.log        = [];\r\n    this.maxEntries = maxEntries;\r\n    this.lastPos    = 0;\r\n    this.matchCount = 0;\r\n  }\r\n  \r\n  add(eventSource, eventType, uId, timeStamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timeStamp   = timeStamp;\r\n    \r\n    // Simple and inefficient, but good enough...\r\n    if (this.log.length < this.maxEntries)\r\n    {\r\n      this.log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.log.shift();\r\n      this.log.push(logEntry);\r\n    }\r\n  }\r\n  \r\n  clear()\r\n  {\r\n    this.log = [];\r\n  }\r\n\r\n  initMatch()\r\n  {\r\n    this.lastPos    = this.log.length - 1;\r\n    this.matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.log[this.lastPos - index].eventSource === eventSource) &&\r\n        (this.log[this.lastPos - index].eventType   === eventType)   &&\r\n        (this.log[this.lastPos - index].uId         === uId))\r\n    {\r\n      this.matchCount++;\r\n    }\r\n  }\r\n  \r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.log[this.lastPos].timeStamp - this.log[this.lastPos - elements].timeStamp) <= delta)\r\n      this.matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      debug.logEventLog(this.log, SOURCE, EVENT);\r\n      \r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nexport class Interaction extends EventLog\r\n{\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getObjectKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nexport class Playback extends EventLog\r\n{\r\n  ytAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK, EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesEvent(1, SOURCE.YOUTUBE,   EVENT.STATE_BUFFERING, uId);\r\n      this.matchesEvent(0, SOURCE.YOUTUBE,   EVENT.STATE_UNSTARTED, uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'YouTube Autoplay Blocked');\r\n  }\r\n  \r\n  scAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(5, 'SoundCloud Autoplay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n    \r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n    \r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.lastPos >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Gallery playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport * as eventLogger       from '../eventlogger.js';\r\nimport * as embeddedPlayers   from './embedded-players.js';\r\nimport * as playbackEvents    from '../playback-events.js';\r\nimport * as galleryEvents     from './gallery-events.js';\r\nimport * as playbackControls  from '../playback-controls.js';\r\nimport * as crossfadeControls from './crossfade-controls.js';\r\nimport { playbackTimer }      from './gallery-playback-timer.js';\r\nimport { galleryPlayers }     from './gallery-players.js';\r\nimport { CROSSFADE_TYPE }     from './crossfade.js';\r\nimport { settings }           from '../../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-playback');\r\n\r\nconst m = {\r\n  eventLog: null,\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  minCrossfadeToTime: 5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:  3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.eventLog = embeddedPlayers.eventLog;\r\n\r\n  galleryEvents.init();\r\n  \r\n  m.players = galleryPlayers();\r\n  m.players.init(playTrack);\r\n\r\n  playbackControls.init(m.players, seekClick);\r\n  crossfadeControls.init(m.players, crossfadeToClick);\r\n  playbackTimer.init(m.players, crossfadeInit);\r\n  embeddedPlayers.init(m.players, playbackState, embeddedEventHandler);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nexport function togglePlayPause()\r\n{\r\n  if (playbackControls.isPlaying())\r\n  {\r\n    playbackControls.setPauseState();\r\n    m.players.current.pause();\r\n  }\r\n  else\r\n  {\r\n    playbackControls.setPlayState();\r\n    m.players.current.play(embeddedPlayers.onPlayerError);\r\n  }\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  debug.log(`prevTrack() - prevTrack: ${m.players.getCurrentTrack() - 1} - numTracks: ${m.players.getNumTracks()}`);\r\n\r\n  if (m.players.getCurrentTrack() > 0)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 5000)\r\n      {\r\n        m.players.current.seekTo(0);\r\n        playbackControls.updateTimerAndProgress(0, 0, m.players.current.getDuration());\r\n      }\r\n      else\r\n      {\r\n        if (m.players.getCurrentTrack() > 1)\r\n          m.players.stop();\r\n        \r\n        if (m.players.prevTrack(playbackControls.isPlaying()))\r\n          playbackControls.updatePrevState();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function nextTrack(isMediaEnded = false)\r\n{\r\n  const isLastTrack = ((m.players.getCurrentTrack() + 1) > m.players.getNumTracks());\r\n\r\n  debug.log(`nextTrack() - isMediaEnded: ${isMediaEnded} - isLastTrack: ${isLastTrack} - autoplay: ${settings.playback.autoplay}`);\r\n\r\n  if (repeatPlayback(isMediaEnded, isLastTrack))\r\n    return;\r\n\r\n  if (isLastTrack === false)\r\n  {\r\n    m.players.stop();\r\n    \r\n    if (isMediaEnded && (settings.playback.autoplay === false))\r\n    {\r\n      playbackControls.setPauseState();\r\n    }\r\n    else\r\n    {\r\n      if (m.players.nextTrack(playbackControls.isPlaying()))\r\n        playbackControls.updateNextState();\r\n    }\r\n  }\r\n  else if (isMediaEnded)\r\n  {\r\n    playbackControls.setPauseState();\r\n    \r\n    if (settings.playback.autoplay)\r\n      playbackEvents.dispatch(playbackEvents.EVENT.CONTINUE_AUTOPLAY);\r\n    else\r\n      m.players.stop();\r\n  }\r\n}\r\n\r\nfunction repeatPlayback(isMediaEnded, isLastTrack)\r\n{\r\n  if (isMediaEnded && settings.playback.autoplay)\r\n  {\r\n    const repeatMode = playbackControls.getRepeatMode();\r\n\r\n    debug.log(`repeatPlayback(): ${debug.getObjectKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n    if (repeatMode === playbackControls.REPEAT.ONE)\r\n    {\r\n      m.players.current.seekTo(0);\r\n      m.players.current.play();\r\n      return true;\r\n    }\r\n    else if (isLastTrack && (repeatMode === playbackControls.REPEAT.ALL))\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(0);\r\n      playTrack(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  m.players.current.seekTo(positionSeconds);\r\n}\r\n\r\nexport function toggleMute()\r\n{\r\n  settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n  m.players.mute();\r\n}\r\n  \r\nfunction cueTrack(iframeId, scrollToMedia = true)\r\n{\r\n  debug.log(`cueTrack(): ${iframeId}`);\r\n\r\n  m.players.setPlayerIndex(m.players.indexMap.get(iframeId));\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_NEXT, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  playbackControls.updateNextState();\r\n}\r\n\r\nfunction playTrack(playMedia, scrollToMedia = true)\r\n{\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_NEXT, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  \r\n  if (playMedia)\r\n    m.players.current.play(embeddedPlayers.onPlayerError);\r\n}\r\n\r\nfunction skipToTrack(trackNum, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack(): ${trackNum} - ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (playbackControls.isPlaying() === false))\r\n  {\r\n    // Reset eventlog to enable check for autoplay block\r\n    m.eventLog.clear();\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    \r\n    if (m.players.jumpToTrack(trackNum, playMedia))\r\n      playbackControls.updateNextState();\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay(autoplayData, iframeId = null)\r\n{\r\n  debug.log(`resumeAutoplay(): ${autoplayData.autoplay}${(iframeId !== null) ? (' - ' + iframeId) : '' }`);\r\n\r\n  if (iframeId !== null)\r\n  {\r\n    if (autoplayData.autoplay)\r\n      skipToTrack(m.players.trackFromUid(iframeId), true);\r\n    else\r\n      cueTrack(iframeId);\r\n  }\r\n  else if (autoplayData.autoplay)\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    togglePlayPause();\r\n  }\r\n}\r\n\r\nexport function getStatus()\r\n{\r\n  return {\r\n    isPlaying:    playbackControls.isPlaying(),\r\n    currentTrack: m.players.getCurrentTrack(),\r\n    position:     0,\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      m.players.current.getTrackId(),\r\n    iframeId:     m.players.current.getIframeId(),\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((m.players.isCurrent(fadeInUid) === false) && (m.players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\r\n      fadeOut: ${m.players.current.getArtist()} - \"${m.players.current.getTitle()}\" (${m.players.current.getUid()})\r\n      fadeIn.: ${m.players.playerFromUid(fadeInUid).getArtist()} - \"${m.players.playerFromUid(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.playback.masterMute === false) && (settings.playback.autoplay === false))\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = m.players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (config.minCrossfadeToTime + config.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START, null);\r\n\r\n  const playersIndex = m.players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid);\r\n\r\n  if (playersIndex !== null)\r\n    playbackState.syncControls(playersIndex.fadeOutPlayer, playersIndex.fadeInPlayer);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Embedded players event handler proxy for playbackEvents.dispatch()\r\n// ************************************************************************************************\r\n\r\nfunction embeddedEventHandler(embeddedEvent, embeddedEventData = null)\r\n{\r\n  debug.log(`embeddedEventHandler() - event: ${debug.getObjectKeyForValue(playbackEvents.EVENT, embeddedEvent)}`);\r\n  if (embeddedEventData !== null) debug.log(embeddedEventData);\r\n\r\n  switch(embeddedEvent)\r\n  {\r\n    case playbackEvents.EVENT.MEDIA_ENDED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED, getStatus());\r\n      nextTrack(true);\r\n      break;\r\n\r\n    case playbackEvents.EVENT.READY:\r\n      playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.READY, embeddedEventData);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.AUTOPLAY_BLOCKED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.AUTOPLAY_BLOCKED, null, { 'togglePlayPause': togglePlayPause });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.PLAYBACK_BLOCKED:\r\n    case playbackEvents.EVENT.MEDIA_UNAVAILABLE:\r\n      playbackEvents.dispatch(embeddedEvent, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n  \r\n  const syncAll = function syncAllRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.syncAll() - previousTrack: ${m.players.getPlayerIndex() + 1} - nextTrack: ${m.players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getObjectKeyForValue(STATE, syncState)}`);\r\n    \r\n    if (m.players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      const prevPlayerIndex = m.players.getPlayerIndex();\r\n      const nextPlayerIndex = m.players.indexMap.get(nextPlayerUid);\r\n      \r\n      m.players.stop();\r\n      m.players.setPlayerIndex(nextPlayerIndex);\r\n      \r\n      syncControls(prevPlayerIndex, nextPlayerIndex);\r\n      syncAllRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  function syncControls(prevPlayerIndex, nextPlayerIndex)\r\n  {\r\n    if (nextPlayerIndex > prevPlayerIndex)\r\n      playbackControls.updateNextState();\r\n    else\r\n      playbackControls.updatePrevState();\r\n  }\r\n\r\n  return {\r\n    STATE,\r\n    syncAll,\r\n    syncControls,\r\n  };\r\n})();\r\n", "//\r\n// PlaybackTimer base class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { settings }        from '../shared/session-data.js';\r\nimport { blinkPlayPause }  from './playback-controls.js';\r\nimport { EVENT, dispatch } from './playback-events.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nexport default class PlaybackTimer\r\n{\r\n  constructor()\r\n  {\r\n    this.intervalId     = -1;\r\n    this.lastPosSeconds = 0;\r\n    this.isVisible      = true;\r\n    \r\n    this.config = {\r\n      updateTimerInterval: 250, // Milliseconds between each timer event\r\n      maxBufferingDelay:   3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n    };\r\n  }\r\n  \r\n  init()\r\n  {\r\n    document.addEventListener('visibilitychange', () =>\r\n    {\r\n      this.isVisible = (document.visibilityState === 'visible') ? true : false;\r\n    });\r\n  }\r\n\r\n  start()\r\n  {\r\n    this.stop();\r\n\r\n    this.intervalId = setInterval(() =>\r\n    {\r\n      if (this.isVisible)\r\n        this.updateProxy();\r\n    },\r\n    this.config.updateTimerInterval);\r\n  }\r\n\r\n  stop()\r\n  {\r\n    if (this.intervalId !== -1)\r\n    {\r\n      clearInterval(this.intervalId);\r\n      this.intervalId = -1;\r\n    }\r\n    \r\n    this.lastPosSeconds = 0;\r\n    blinkPlayPause(false);\r\n  }\r\n  \r\n  updateTimeRemainingWarning(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.playback.autoplay === false)  &&\r\n         settings.playback.timeRemainingWarning &&\r\n        (this.lastPosSeconds !== positionSeconds))\r\n    {\r\n      const remainingSeconds = durationSeconds - positionSeconds;\r\n      this.lastPosSeconds    = positionSeconds;\r\n\r\n      if (remainingSeconds <= settings.playback.timeRemainingSeconds)\r\n      {\r\n        blinkPlayPause(true);\r\n        dispatch(EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: remainingSeconds });\r\n      }\r\n      else\r\n      {\r\n        blinkPlayPause(false);\r\n      }\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Gallery playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport PlaybackTimer              from '../playback-timer.js';\r\nimport { settings }               from '../../shared/session-data.js';\r\nimport { CROSSFADE_TYPE }         from './crossfade.js';\r\nimport { updateTimerAndProgress } from '../playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass GalleryPlaybackTimer extends PlaybackTimer\r\n{\r\n  constructor()\r\n  {\r\n    super();    \r\n    this.players       = null;\r\n    this.crossfadeInit = null;\r\n  }\r\n\r\n  init(players, crossfadeInit)\r\n  {\r\n    super.init();\r\n    this.players       = players;\r\n    this.crossfadeInit = crossfadeInit;\r\n  }\r\n\r\n  updateProxy()\r\n  {\r\n    this.players.current.getPosition((position, duration) => this.updateCallback(position, duration));\r\n  }\r\n\r\n  updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    updateTimerAndProgress(positionMilliseconds, positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      super.updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n      this.updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.playback.masterMute === false) && settings.playback.autoplay && settings.gallery.autoCrossfade)\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.gallery.autoCrossfadeLength + this.config.maxBufferingDelay))\r\n      {\r\n        if ((this.players.getCurrentTrack() + 1) <= this.players.getNumTracks())\r\n        {\r\n          this.crossfadeInit(CROSSFADE_TYPE.AUTO,\r\n            {\r\n              name:   'Auto Crossfade',\r\n              length: settings.gallery.autoCrossfadeLength,\r\n              curve:  settings.gallery.autoCrossfadeCurve\r\n            }\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new GalleryPlaybackTimer();\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger    from '../../shared/debuglogger.js';\r\nimport * as eventLogger    from '../eventlogger.js';\r\nimport * as mediaPlayers   from '../mediaplayers.js';\r\nimport * as playbackEvents from '../playback-events.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\nimport { playbackTimer }   from './gallery-playback-timer.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('embedded-players');\r\nexport const eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  players:         {},\r\n  playbackState:   null,\r\n  embeddedEvent:   null,\r\n  loadEventsTotal: 0,\r\n  loadEventsCount: 1,\r\n};\r\n\r\nconst config = {\r\n  youTubeIframeIdRegEx:    /youtube-uid/i,\r\n  soundCloudIframeIdRegEx: /soundcloud-uid/i,\r\n  maxPlaybackStartDelay:   3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init(players, playbackState, embeddedEventHandler)\r\n{\r\n  m.players       = players;\r\n  m.playbackState = playbackState;\r\n  m.embeddedEvent = embeddedEventHandler;\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  m.loadEventsTotal = 3 + parseInt(document.body.getAttribute('data-gallery-track-count'));\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (m.loadEventsCount++ / m.loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (m.loadEventsCount >= m.loadEventsTotal)\r\n    m.embeddedEvent(playbackEvents.EVENT.READY, { resetProgressBar: true });\r\n  else\r\n    playbackEvents.dispatch(playbackEvents.EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const entries = document.querySelectorAll('single-track');\r\n\r\n  entries.forEach(entry => \r\n  {\r\n    const iframe = entry.querySelector('iframe');\r\n    let player   = null;\r\n\r\n    if (config.youTubeIframeIdRegEx.test(iframe.id)) \r\n    {\r\n      const embeddedPlayer = new YT.Player(iframe.id, // eslint-disable-line no-undef\r\n      {\r\n        events:\r\n        {\r\n          onReady:       (event) => onYouTubePlayerReady(event, iframe.id),\r\n          onStateChange: (event) => onYouTubePlayerStateChange(event, iframe.id),\r\n          onError:       (event) => onYouTubePlayerError(event, iframe.id),\r\n        }\r\n      });\r\n\r\n      player = new mediaPlayers.YouTube(entry.id, iframe.id, embeddedPlayer, entry.getAttribute('data-track-source-data'));\r\n      player.setDuration(parseInt(entry.getAttribute('data-track-duration')));\r\n    }\r\n    else if (config.soundCloudIframeIdRegEx.test(iframe.id))\r\n    {\r\n      /* eslint-disable */\r\n      const embeddedPlayer = SC.Widget(iframe.id);\r\n      player = new mediaPlayers.SoundCloud(entry.id, iframe.id, embeddedPlayer, iframe.src);\r\n\r\n      // Preload thumbnail image as early as possible\r\n      embeddedPlayer.bind(SC.Widget.Events.READY, () =>\r\n      {\r\n        player.setThumbnail(entry.querySelector('.track-share-control span'));\r\n        embeddedPlayer.getDuration(durationMilliseconds => player.setDuration(Math.round(durationMilliseconds / 1000)));\r\n        onSoundCloudPlayerEventReady(player, iframe.id);\r\n      });\r\n\r\n      embeddedPlayer.bind(SC.Widget.Events.PLAY,   onSoundCloudPlayerEventPlay);\r\n      embeddedPlayer.bind(SC.Widget.Events.PAUSE,  onSoundCloudPlayerEventPause);\r\n      embeddedPlayer.bind(SC.Widget.Events.FINISH, onSoundCloudPlayerEventFinish);\r\n      embeddedPlayer.bind(SC.Widget.Events.ERROR,  onSoundCloudPlayerEventError);\r\n      /* eslint-enable */\r\n    }\r\n\r\n    if (player !== null)\r\n    {\r\n      player.setTitle(entry.getAttribute('data-track-title'));\r\n      player.setArtist(entry.getAttribute('data-track-artist'));\r\n      m.players.add(player);\r\n    }\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nexport function onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player instanceof mediaPlayers.SoundCloud)\r\n                        ? eventLogger.SOURCE.SOUNDCLOUD\r\n                        : eventLogger.SOURCE.YOUTUBE;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (m.players.isCurrent(player.getUid()) === false)\r\n    m.players.stop();\r\n  \r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getUid());\r\n  m.embeddedEvent(playbackEvents.EVENT.MEDIA_UNAVAILABLE, getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: m.players.trackFromUid(player.getUid()),\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    playbackEvents.dispatch(playbackEvents.EVENT.LOADING, getLoadingPercent());\r\n  \r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n  \r\nfunction onYouTubePlayerReady(event, iframeId)\r\n{\r\n  const player = m.players.playerFromUid(iframeId);\r\n  debug.log(`onYouTubePlayerReady(): ${iframeId} => ${event.target.getVideoData().video_id} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event, iframeId)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, iframeId);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(iframeId);      break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(iframeId);      break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(event, iframeId); break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(iframeId);         break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(iframeId);           break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(iframeId);          break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (uID: ${iframeId})`);\r\n  \r\n  if (eventLog.ytAutoplayBlocked(iframeId, 3000))\r\n    m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (uID: ${iframeId})`);\r\n\r\n  if (m.players.crossfade.isFading() === false)\r\n  {\r\n    const player = m.players.playerFromUid(iframeId);\r\n    player.mute(settings.playback.masterMute);\r\n    player.setVolume(settings.playback.masterVolume);\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event, iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (uID: ${iframeId})`);\r\n  \r\n  // Call order is important on play events for state handling: Always sync first!\r\n  m.playbackState.syncAll(iframeId, m.playbackState.STATE.PLAY);\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onYouTubeStatePaused(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (uID: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    m.playbackState.syncAll(iframeId, m.playbackState.STATE.PAUSE);\r\n    playbackTimer.stop();\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateCued(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (uID: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (uID: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event, iframeId)\r\n{\r\n  debug.log('onYouTubePlayerError: ' + event.data);\r\n\r\n  const player = m.players.playerFromUid(iframeId);\r\n  player.setPlayable(false);\r\n  onPlayerError(player, event.target.getVideoUrl());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady(player, iframeId)\r\n{\r\n  debug.log(`onSCPlayerEventReady(): ${iframeId} => ${player.getUid()} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, event.soundId);\r\n\r\n  if (m.players.crossfade.isFading() && m.players.isCurrent(event.soundId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(event.soundId, (config.maxPlaybackStartDelay * 1000)))\r\n      m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PLAY);\r\n\r\n    m.players.current.mute(settings.playback.masterMute);\r\n    m.players.current.setVolume(settings.playback.masterVolume);\r\n  }\r\n\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (uID: ${event.soundId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, event.soundId);\r\n  \r\n  if (eventLog.scAutoplayBlocked(event.soundId, 3000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(event.soundId, 30000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.PLAYBACK_BLOCKED, { currentTrack: m.players.trackFromUid(event.soundId), numTracks: m.players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (m.players.isCurrent(event.soundId))\r\n    {\r\n      m.players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          m.playbackState.syncAll(event.soundId, m.playbackState.STATE.PAUSE);\r\n          playbackTimer.stop();\r\n        }\r\n      });    \r\n    }\r\n    else\r\n    {\r\n      m.players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(event)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (uID: ${event.soundId})`);\r\n\r\n  if (m.players.isCurrent(event.soundId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError()\r\n{\r\n  this.getCurrentSound(soundObject =>\r\n  {\r\n    const player = m.players.playerFromUid(soundObject.id);\r\n    debug.log(`onSoundCloudPlayerEvent: ERROR for track: ${m.players.trackFromUid(soundObject.id)}. ${player.getArtist()} - ${player.getTitle()} - [${player.getUid()} / ${player.getIframeId()}]`);\r\n    player.setPlayable(false);\r\n  });\r\n}\r\n", "//\r\n// Gallery playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { replaceClass }       from '../../shared/utils.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../playback-events.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-events');\r\n\r\nconst m = {\r\n  snackbarId:      0,\r\n  nowPlayingIcons: null,\r\n};\r\n\r\nconst config = {\r\n  nowPlayingIconsSelector: 'h2.entry-title',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n  \r\n  m.nowPlayingIcons = document.querySelectorAll(config.nowPlayingIconsSelector);\r\n\r\n  addListener(EVENT.MEDIA_PLAYING,     mediaPlaying);\r\n  addListener(EVENT.MEDIA_PAUSED,      mediaPaused);\r\n  addListener(EVENT.MEDIA_ENDED,       mediaEnded);\r\n  addListener(EVENT.MEDIA_CUE_NEXT,    mediaCueNext);\r\n  addListener(EVENT.CONTINUE_AUTOPLAY, continueAutoplay);\r\n  addListener(EVENT.RESUME_AUTOPLAY,   resumeAutoplay);\r\n  addListener(EVENT.AUTOPLAY_BLOCKED,  autoplayBlocked);\r\n  addListener(EVENT.PLAYBACK_BLOCKED,  playbackBlocked);\r\n  addListener(EVENT.MEDIA_UNAVAILABLE, mediaUnavailable);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  \r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(m.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (settings.gallery.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaCueNext(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    playerScrollTo(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  autoplayNavTo(response.nextPage, true);\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayData = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debug.log(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayData !== null) ? JSON.stringify(autoplayData) : 'NO'}`);\r\n\r\n  if (autoplayData !== null)\r\n  {\r\n    const iframeId = document.getElementById(autoplayData.trackId)?.querySelector('iframe').id;\r\n    playbackEvent.callback.resumeAutoplay(autoplayData, iframeId);\r\n  }\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  m.snackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => playbackEvent.callback.togglePlayPause());\r\n}\r\n\r\nfunction playbackBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (isPremiumTrack(playbackEvent.data.trackId))\r\n  {\r\n    showSnackbar('YouTube Premium track, skipping', 5, 'help',\r\n      () => (window.location.href = '/channel/premium/'),\r\n      () => playbackEventErrorTryNext(playbackEvent)\r\n    );\r\n  }\r\n  else\r\n  {\r\n    showSnackbar('Unable to play track, skipping to next', 5, 'Stop', () => {}, () => playbackEventErrorTryNext(playbackEvent));\r\n    debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', playbackEvent.data);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  m.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (response.nextPage !== null)\r\n      autoplayNavTo(response.nextPage, true);\r\n  }\r\n}\r\n\r\nfunction isPremiumTrack(trackId)\r\n{\r\n  const postWithId = document.getElementById(trackId);\r\n\r\n  if (postWithId !== null)\r\n    return postWithId.classList.contains('uf_channel-premium');\r\n  \r\n  return false;\r\n}\r\n", "//\r\n// Crossfade UI controls\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger    from '../../shared/debuglogger.js';\r\nimport * as playbackEvents from '../playback-events.js';\r\nimport { isPlaying }       from '../playback-controls.js';\r\nimport { presetList }      from '../../shared/settings/settings.js';\r\nimport { replaceClass }    from '../../shared/utils.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\n\r\nimport {\r\n  STATE,\r\n  ElementsWrapper\r\n} from '../element-wrappers.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('crossfade-controls');\r\nconst m     = { players: {} };\r\nconst ctrl  = {};\r\n\r\nconst config = {\r\n  crossfadePresetSelector: '.crossfade-preset-control',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     '.crossfade-fadeto-control',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init and make ready all controls\r\n// ************************************************************************************************\r\n\r\nexport function init(mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.players = mediaPlayers;\r\n\r\n  ctrl.crossfadePreset = new ElementsWrapper(config.crossfadePresetSelector);\r\n  ctrl.crossfadeTo     = new ElementsWrapper(config.crossfadeToSelector);\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element => setCrossfadePreset(element, settings.gallery.trackCrossfadeDefPreset));\r\n    ctrl.crossfadeTo.clickCallback = crossfadeClickCallback;\r\n  }\r\n\r\n  playbackEvents.addListener(playbackEvents.EVENT.READY, ready);\r\n}\r\n\r\nexport function ready()\r\n{\r\n  debug.log('ready()');\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED.CLASS, STATE.ENABLED.CLASS);\r\n    });\r\n\r\n    ctrl.crossfadeTo.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, index)\r\n{\r\n  element.setAttribute(config.crossfadePresetData, index);\r\n  element.textContent = `${index + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[index].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  const index = parseInt(event.target.getAttribute(config.crossfadePresetData));\r\n  setCrossfadePreset(event.target, ((index + 1) < presetList.crossfade.length) ? (index + 1) : 0);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (m.players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('single-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe = element.querySelector('iframe');\r\n      const index  = parseInt(element.querySelector(config.crossfadePresetSelector).getAttribute(config.crossfadePresetData));\r\n\r\n      replaceClass(element.querySelector(`div${config.crossfadeToSelector}`), STATE.ENABLED.CLASS, STATE.DISABLED.CLASS);\r\n      ctrl.crossfadeTo.clickCallback(m.players.uIdFromIframeId(iframe.id), presetList.crossfade[index]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? m.players.getTrackData().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  ctrl.crossfadeTo.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS),\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS)\r\n      );\r\n    }\r\n    else\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS),\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS)\r\n      );\r\n    }\r\n  });\r\n}\r\n", "//\r\n// Gallery players module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport { crossfadeClosure }   from './crossfade.js';\r\nimport { settings }           from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../playback-events.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('gallery-players');\r\n\r\n\r\n// ************************************************************************************************\r\n// Gallery players closure\r\n// ************************************************************************************************\r\n\r\nexport const galleryPlayers = (() =>\r\n{\r\n  let playTrack      = null;\r\n  let crossfade      = null;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n    indexMap,\r\n    get crossfade()                 { return crossfade;                       },\r\n    get current()                   { return mediaPlayers[playerIndex];       },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];   },\r\n    getPlayerIndex()                { return playerIndex;                     },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;          },\r\n    getNumTracks()                  { return mediaPlayers.length;             },\r\n    getCurrentTrack()               { return playerIndex + 1;                 },\r\n    playerFromUid(uId)              { return mediaPlayers[indexMap.get(uId)]; },\r\n    trackFromUid(uId)               { return (indexMap.get(uId) + 1);         },\r\n    isCurrent(uId)                  { return (uId === this.current.getUid()); },\r\n    init,\r\n    add,\r\n    uIdFromIframeId,\r\n    stop,\r\n    mute,\r\n    getTrackData,\r\n    prevTrack,\r\n    nextTrack,\r\n    jumpToTrack,\r\n  };\r\n\r\n  function init(playTrackCallback)\r\n  {\r\n    debug.log('init()');\r\n\r\n    playTrack = playTrackCallback;\r\n    crossfade = crossfadeClosure(this);\r\n\r\n    addListener(EVENT.MEDIA_PLAYING, () => crossfade.start());\r\n    addListener(EVENT.MEDIA_PAUSED,  () => crossfade.stop());\r\n  }\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n    \r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getUid(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function uIdFromIframeId(iframeId)\r\n  {\r\n    return mediaPlayers.find(player => (player.iframeId === iframeId)).getUid();\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n  \r\n  function mute()\r\n  {\r\n    this.current.mute(settings.playback.masterMute);\r\n    crossfade.mute(settings.playback.masterMute);\r\n  }\r\n\r\n  function getTrackData()\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrack(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      duration:     this.current.getDuration(),\r\n      thumbnail:    { src: this.current.getThumbnailSrc(), class: this.current.getThumbnailClass() },\r\n    };\r\n  }\r\n\r\n  function prevTrack(playMedia)\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function nextTrack(playMedia)\r\n  {\r\n    playerIndex++;\r\n    \r\n    if (playerIndex < this.getNumTracks())\r\n    {\r\n      playTrack(playMedia);\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n  \r\n  function jumpToTrack(track, playMedia, scrollToMedia = true)\r\n  {\r\n    if ((track > 0) && (track <= this.getNumTracks()))\r\n    {\r\n      playerIndex = track - 1;\r\n      playTrack(playMedia, scrollToMedia);\r\n      return true;\r\n    }\r\n  \r\n    return false;\r\n  }\r\n});\r\n", "//\r\n// List playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../../shared/debuglogger.js';\r\nimport * as eventLogger       from '../eventlogger.js';\r\nimport * as playbackControls  from '../playback-controls.js';\r\nimport * as listControls      from './list-controls.js';\r\nimport * as mediaPlayers      from '../mediaplayers.js';\r\nimport * as playbackEvents    from '../playback-events.js';\r\nimport * as utils             from '../../shared/utils.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { STATE }              from '../element-wrappers.js';\r\nimport { playbackTimer }      from './list-playback-timer.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\n\r\nimport {\r\n  TRACK_TYPE,\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('list-playback');\r\nconst eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  player:            null,\r\n  autoplayData:      null,\r\n  playerReady:       false,\r\n  firstStatePlaying: true,\r\n  currentTrackId:    null,\r\n  currentSnackbarId: 0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  listControls.init(setCurrentTrack);\r\n  \r\n  if (cueInitialTrack() !== null)\r\n    initYouTubeAPI();\r\n  else\r\n    showSnackbar('No playable YouTube tracks!', 0, 'help', () => (window.location.href = \"/help/#list-player\"));\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction cueInitialTrack()\r\n{\r\n  m.currentTrackId = listControls.getNextPlayableId();\r\n  m.autoplayData   = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  if (m.currentTrackId !== null)\r\n  {\r\n    if ((m.autoplayData !== null) && (m.autoplayData.trackId !== null))\r\n    {\r\n      const matchesVideoId = m.autoplayData.trackId.match(mediaPlayers.youTubeVideoIdRegEx);\r\n      \r\n      if (matchesVideoId !== null)\r\n      {\r\n        const trackElement = listControls.queryTrack(`[data-track-source-uid=\"${matchesVideoId[0]}\"]`);\r\n\r\n        if (trackElement !== null)\r\n          m.currentTrackId = trackElement.id;\r\n      }\r\n      else if (m.autoplayData.trackId.match(/^track-(?!0)\\d{1,9}$/i) !== null)\r\n      {\r\n        const trackElement = listControls.queryTrack(`[data-track-id=\"${m.autoplayData.trackId}\"]`);\r\n\r\n        if (trackElement !== null)\r\n        {\r\n          if (listControls.getTrackType(trackElement) === TRACK_TYPE.YOUTUBE)\r\n            m.currentTrackId = trackElement.id;\r\n          else\r\n            showSnackbar('Cannot play SoundCloud track', 5, 'help', () => (window.location.href = \"/help/#list-player\"));\r\n        }\r\n        else\r\n        {\r\n          showSnackbar('Unable to cue track (not found)', 5);\r\n        }\r\n      }\r\n    }\r\n  \r\n    listControls.setCuedTrack(m.currentTrackId);\r\n  }\r\n\r\n  debug.log(`cueInitialTrack() - currentTrackId: ${m.currentTrackId} - autoplayData: ${(m.autoplayData !== null) ? JSON.stringify(m.autoplayData) : 'N/A'}`);\r\n\r\n  return m.currentTrackId;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction setCurrentTrack(nextTrackId, playNextTrack = true, isPointerClick = false)\r\n{\r\n  const nextTrackType = listControls.getTrackType(listControls.queryTrackId(nextTrackId));\r\n\r\n  debug.log(`setCurrentTrack() - nextTrackType: ${debug.getObjectKeyForValue(TRACK_TYPE, nextTrackType)} - nextTrackId: ${nextTrackId} - playNextTrack: ${playNextTrack} - isPointerClick: ${isPointerClick}`);\r\n\r\n  if ((nextTrackType === TRACK_TYPE.SOUNDCLOUD) && isPointerClick)\r\n  {\r\n    showSnackbar('Cannot play SoundCloud track', 5, 'help', () => (window.location.href = \"/help/#list-player\"));\r\n    return;\r\n  }\r\n\r\n  if (nextTrackId === m.currentTrackId)\r\n  {\r\n    togglePlayPause();\r\n  }\r\n  else\r\n  {\r\n    if (playbackControls.isPlaying())\r\n      m.player.embedded.stopVideo();\r\n\r\n    m.currentTrackId = nextTrackId;\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_NEXT, { nextTrackId: nextTrackId, isPointerClick: isPointerClick });\r\n    loadOrCueCurrentTrack(playNextTrack);\r\n  }\r\n}\r\n\r\nfunction loadOrCueCurrentTrack(playTrack)\r\n{\r\n  const sourceUid = listControls.updateTrackDetails();\r\n\r\n  if (playTrack)\r\n  {\r\n    m.player.embedded.loadVideoById(sourceUid);\r\n    listControls.setCurrentTrackState(STATE.PLAYING);\r\n    playbackControls.getSetTrackData();\r\n  }\r\n  else\r\n  {\r\n    m.player.embedded.cueVideoById(sourceUid);\r\n    listControls.setCurrentTrackState(STATE.PAUSED);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function togglePlayPause()\r\n{\r\n  if (m.currentTrackId === null)\r\n  {\r\n    setCurrentTrack(listControls.queryTrack('div.track-entry.current').id);\r\n  }\r\n  else\r\n  {\r\n    if (playbackControls.isPlaying())\r\n      m.player.embedded.pauseVideo();\r\n    else\r\n      m.player.play(onYouTubePlayerError);\r\n  }\r\n}\r\n\r\nexport function toggleMute(setCurrentSetting = false)\r\n{\r\n  if (setCurrentSetting === false)\r\n    settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n\r\n  if (settings.playback.masterMute)\r\n    m.player.embedded.mute();\r\n  else\r\n    m.player.embedded.unMute();\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  const prevTrackId = listControls.getPrevPlayableId();\r\n  const position    = m.player.embedded.getCurrentTime();\r\n\r\n  if ((prevTrackId !== null) && (position <= 5))\r\n  {\r\n    setCurrentTrack(prevTrackId, playbackControls.isPlaying());\r\n    playbackControls.updatePrevState();\r\n  }\r\n  else if (position !== 0)\r\n  {\r\n    m.player.embedded.seekTo(0);\r\n    playbackControls.updateTimerAndProgress(0, 0, m.player.getDuration());\r\n  }\r\n}\r\n\r\nexport function nextTrack()\r\n{\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  if (nextTrackId !== null)\r\n  {\r\n    setCurrentTrack(nextTrackId, playbackControls.isPlaying());\r\n    playbackControls.updateNextState();\r\n  }\r\n}\r\n\r\nasync function advanceToNextTrack(autoplay = false, isPlaybackError = false)\r\n{\r\n  const repeatMode  = isPlaybackError ? playbackControls.REPEAT.OFF : playbackControls.getRepeatMode();\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  debug.log(`advanceToNextTrack() autoplay: ${autoplay} - isPlaybackError: ${isPlaybackError} - nextTrackId: ${nextTrackId} - repeatMode: ${debug.getObjectKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n  if (autoplay && (repeatMode === playbackControls.REPEAT.ONE))\r\n  {\r\n    m.player.embedded.seekTo(0);\r\n    m.player.play(onYouTubePlayerError);\r\n  }\r\n  else if (autoplay && (nextTrackId === null) && (repeatMode === playbackControls.REPEAT.ALL))\r\n  {\r\n    setCurrentTrack(listControls.getNextPlayableId(null)); // getNextPlayableId(null) means the nextTrackId will come from the top of the playlist\r\n    playerScrollTo(0);\r\n  }\r\n  else\r\n  {\r\n    if (nextTrackId === null)\r\n    {\r\n      if (settings.list.showLoadMoreTracks)\r\n      {\r\n        const tracksLoaded = await listControls.loadMoreTracks();\r\n\r\n        if (autoplay && tracksLoaded)\r\n          setCurrentTrack(listControls.getNextPlayableId());\r\n      }\r\n      else\r\n      {\r\n        autoplayNavTo(response.nextPage, autoplay);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      autoplay ? setCurrentTrack(nextTrackId) : listControls.setCurrentTrackState(STATE.PAUSED);\r\n    }\r\n  }\r\n}\r\n\r\nfunction skipToNextTrack()\r\n{\r\n  if ((playbackControls.isPlaying() === false) && (m.autoplayData !== null))\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n    eventLog.add(eventLogger.SOURCE.YOUTUBE, -1, listControls.getNextPlayableId());\r\n  }\r\n\r\n  if (playbackControls.isPlaying() === false)\r\n    advanceToNextTrack(true, true);\r\n}\r\n\r\nfunction stopSkipToNextTrack()\r\n{\r\n  m.currentTrackId = null;\r\n  listControls.setCurrentTrackState(STATE.PAUSED);\r\n}\r\n\r\nexport function getStatus()\r\n{\r\n  const currentTrack = listControls.queryTrack('div.track-entry.current');\r\n\r\n  if (currentTrack !== null)\r\n  {\r\n    const allTracksList = listControls.queryTrackAll('div.track-entry');\r\n    const currentIndex  = Array.prototype.indexOf.call(allTracksList, currentTrack);\r\n\r\n    return {\r\n      isPlaying:    playbackControls.isPlaying(),\r\n      currentTrack: (currentIndex + 1),\r\n      position:     Math.ceil(m.player.embedded.getCurrentTime()),\r\n      numTracks:    m.player.getNumTracks(),\r\n      trackId:      allTracksList[currentIndex].getAttribute('data-track-id'),\r\n      iframeId:     'youtube-player',\r\n    };\r\n  }\r\n\r\n  return { isPlaying: false, currentTrack: 1, position: 0, trackId: 0 };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n\r\n    // eslint-disable-next-line no-undef\r\n    const embeddedPlayer = new YT.Player('youtube-player',\r\n    {\r\n      events:\r\n      {\r\n        onReady:       onYouTubePlayerReady,\r\n        onStateChange: onYouTubePlayerStateChange,\r\n        onError:       onYouTubePlayerError,\r\n      }\r\n    });\r\n\r\n    m.player = new mediaPlayers.Playlist(embeddedPlayer);\r\n    playbackControls.init(m.player, (positionSeconds) => m.player.embedded.seekTo(positionSeconds));\r\n    playbackEvents.dispatch(playbackEvents.EVENT.LOADING, { loadingPercent: 33 });\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n  \r\n  if (m.autoplayData?.autoplay === true)\r\n    eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY, null);\r\n\r\n  playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.LOADING, { loadingPercent: 66 });\r\n  playbackTimer.ready(m.player);\r\n  listControls.ready(m.player);\r\n\r\n  toggleMute(true);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.READY, { resetProgressBar: false });\r\n  loadOrCueCurrentTrack(m.autoplayData?.autoplay === true);\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange(): ${event.data} - trackId: ${m.currentTrackId}`);\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, m.currentTrackId);\r\n\r\n  // Set playback controls state to YouTube state so we have a single source of truth = playbackControls.isPlaying()\r\n  if (event.data !== YT.PlayerState.PLAYING) // eslint-disable-line no-undef\r\n    playbackControls.setPauseState();\r\n\r\n  switch(event.data)\r\n  {\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.UNSTARTED:\r\n      onYouTubeStateUnstarted();\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.CUED:\r\n      m.player.setPlayerState(event.data); // For internal state when trying to play a track that does not exist\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.BUFFERING:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n      break;\r\n    \r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PLAYING:\r\n      onYouTubeStatePlaying(event);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PAUSED:\r\n      listControls.setCurrentTrackState(STATE.PAUSED);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.ENDED:\r\n      playbackTimer.stop();\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED);\r\n      advanceToNextTrack(settings.playback.autoplay);\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction onYouTubeStateUnstarted()\r\n{\r\n  if (eventLog.ytAutoplayBlocked(m.currentTrackId, 3000))\r\n  {\r\n    listControls.setCurrentTrackState(STATE.PAUSED);\r\n    m.currentSnackbarId = showSnackbar('Autoplay blocked, Play to continue', 0, 'play', () => m.player.play(onYouTubePlayerError));\r\n  }\r\n\r\n  if (m.playerReady === false)\r\n  {\r\n    m.playerReady = true;\r\n    playbackEvents.dispatch(playbackEvents.EVENT.LOADING, { loadingPercent: 0 });\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(event)\r\n{\r\n  dismissSnackbar(m.currentSnackbarId);\r\n  m.player.setDuration(Math.round(event.target.getDuration()));\r\n\r\n  if (m.firstStatePlaying)\r\n  {\r\n    m.firstStatePlaying = false;\r\n    m.autoplayData      = null;\r\n    \r\n    setTimeout(() =>\r\n    {\r\n      if (settings.playback.autoplay            &&\r\n          playbackControls.isPlaying()          &&\r\n          (Math.round(window.pageYOffset) <= 1) &&\r\n          utils.matchesMedia(utils.MATCH.SITE_MAX_WIDTH_MOBILE))\r\n      {\r\n        playerScrollTo(0);\r\n      }\r\n    },\r\n    6000);\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log(`onYouTubePlayerError(): ${event.data} - trackId: ${m.currentTrackId}`);\r\n\r\n  listControls.setTrackMessage('Error!');\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, eventLogger.EVENT.PLAYER_ERROR, m.currentTrackId);\r\n  showSnackbar('Unable to play track, skipping to next', 5, 'Stop', stopSkipToNextTrack, skipToNextTrack);\r\n  \r\n  debugLogger.logErrorOnServer('EVENT_MEDIA_UNAVAILABLE', {\r\n    mediaUrl:   m.player.embedded.getVideoUrl(),\r\n    mediaTitle: `${m.player.getArtist()} - ${m.player.getTitle()}`,\r\n  });\r\n}\r\n", "//\r\n// List playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport PlaybackTimer          from '../playback-timer.js';\r\nimport { EVENT, addListener } from '../playback-events.js';\r\n\r\nimport { \r\n  isPlaying,\r\n  updateTimerAndProgress\r\n} from '../playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass ListPlaybackTimer extends PlaybackTimer\r\n{\r\n  constructor()\r\n  {\r\n    super();\r\n    this.player = null;\r\n  }\r\n\r\n  ready(player)\r\n  {\r\n    super.init();\r\n    this.player = player;\r\n    addListener(EVENT.MEDIA_PLAYING, () => super.start());\r\n  }\r\n\r\n  updateProxy()\r\n  {\r\n    if (isPlaying())\r\n      this.update(this.player.embedded.getCurrentTime(), this.player.getDuration());\r\n  }\r\n\r\n  update(positionSecondsDecimal, durationSeconds)\r\n  {\r\n    if (positionSecondsDecimal !== undefined)\r\n    {\r\n      const positionSeconds = Math.round(positionSecondsDecimal);\r\n\r\n      updateTimerAndProgress((positionSecondsDecimal * 1000), positionSeconds, durationSeconds);\r\n\r\n      if ((positionSeconds > 0) && (durationSeconds > 0))\r\n        super.updateTimeRemainingWarning(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new ListPlaybackTimer();\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger from '../shared/debuglogger.js';\r\nimport { showSnackbar } from '../shared/snackbar.js';\r\nimport { settings }     from '../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = debugLogger.newInstance('screen-wakelock');\r\nconst m     = { wakeLock: null };\r\n\r\n\r\n// ************************************************************************************************\r\n// \r\n// ************************************************************************************************\r\n\r\nexport function initScreenWakeLock()\r\n{\r\n  if (settings.mobile.keepScreenOn)\r\n    document.addEventListener('click', enableScreenWakeLock);\r\n}\r\n\r\nfunction enableScreenWakeLock()\r\n{\r\n  debug.log('enableScreenWakeLock()');\r\n\r\n  document.removeEventListener('click', enableScreenWakeLock);\r\n\r\n  enableWakeLock();\r\n\r\n  document.addEventListener('visibilitychange', () =>\r\n  {\r\n    if ((document.visibilityState === 'visible') && (settings.mobile.keepScreenOn))\r\n      setStateVisible();\r\n  });\r\n}\r\n\r\nfunction setStateVisible()\r\n{\r\n  if (isSupported() && (m.wakeLock === null))\r\n    requestWakeLock();\r\n}\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enableWakeLock()\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      if (await requestWakeLock() !== true)\r\n      {\r\n        debug.log('enableWakeLock(): Screen Wake Lock request failed');\r\n        showSnackbar('Keep Screen On failed', 5, 'Disable', () => (settings.mobile.keepScreenOn = false));\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enableWakeLock(): Screen Wake Lock is not supported');\r\n    showSnackbar('Keep Screen On is not supported', 5, 'Disable', () => (settings.mobile.keepScreenOn = false));\r\n  }\r\n}\r\n\r\nasync function requestWakeLock()\r\n{\r\n  try\r\n  {\r\n    m.wakeLock = await navigator.wakeLock.request('screen');\r\n  //debug.log('requestWakeLock(): Screen Wake Lock is Enabled');\r\n\r\n    m.wakeLock.addEventListener('release', () =>\r\n    {\r\n    //debug.log('requestWakeLock(): Screen Wake Lock was Released');\r\n      m.wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`requestWakeLock(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as debugLogger       from '../shared/debuglogger.js';\r\nimport * as eventLogger       from './eventlogger.js';\r\nimport * as galleryPlayback   from './gallery/gallery-playback.js';\r\nimport * as listPlayback      from './list/list-playback.js';\r\nimport * as playbackEvents    from './playback-events.js';\r\nimport * as utils             from '../shared/utils.js';\r\nimport * as footerToggles     from './footer-toggles.js';\r\nimport { showSnackbar }       from '../shared/snackbar.js';\r\nimport { initScreenWakeLock } from './screen-wakelock.js';\r\n\r\nimport {\r\n  setPlaybackControlsCss,\r\n  toggleRepeat,\r\n} from './playback-controls.js';\r\n\r\nimport {\r\n  response,\r\n  settings,\r\n  getSessionData,\r\n} from '../shared/session-data.js';\r\n\r\nimport {\r\n  hasGalleryPlayer,\r\n  hasListPlayer,\r\n  isGalleryPlayer,\r\n  isListPlayer,\r\n  playerScrollTo,\r\n  playerOnKeyScroll,\r\n  shuffleClickNavTo,\r\n  autoplayNavTo,\r\n} from './shared-gallery-list.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = debugLogger.newInstance('playback-interaction');\r\nconst eventLog = new eventLogger.Interaction(10);\r\n\r\nconst m = {\r\n  player:          null,\r\n  isPlaybackReady: false,\r\n};\r\n\r\nconst config = {\r\n  doubleClickDelay: 500,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{ \r\n  debug.log('DOMContentLoaded');\r\n\r\n  getSessionData();\r\n\r\n  if (hasGalleryPlayer())\r\n    m.player = galleryPlayback;\r\n  else if (hasListPlayer())\r\n    m.player = listPlayback;\r\n\r\n  if (m.player !== null)\r\n    initShared();\r\n\r\n  footerToggles.init(m.player?.getStatus);\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction initShared()\r\n{\r\n  debug.log('initShared()');\r\n\r\n  // Set user settings CSS with JS as early as possible...\r\n  setPlaybackControlsCss();\r\n\r\n  // Must be done before player.init() since events are used to relay player status updates\r\n  initPlaybackEvents();\r\n\r\n  m.player.init();\r\n  fullscreenElement.init();\r\n  keyboardShortcuts.init();\r\n\r\n  initListeners();\r\n  initScreenWakeLock();\r\n}\r\n\r\nfunction initPlaybackEvents()\r\n{\r\n  playbackEvents.addListener(playbackEvents.EVENT.READY,                playbackEventReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_CUE_NEXT,       playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n}\r\n\r\nfunction initListeners()\r\n{\r\n  utils.addListener('.playback-shuffle-control span', 'click', shuffleClickNavTo);\r\n\r\n  utils.addListenerAll('span.navbar-arrow-back',            'click', prevNextNavTo, response.prevPage);\r\n  utils.addListenerAll('span.navbar-arrow-fwd',             'click', prevNextNavTo, response.nextPage);\r\n  utils.addListener('nav.track-navigation .nav-previous a', 'click', prevNextNavTo, response.prevPage);\r\n  utils.addListener('nav.track-navigation .nav-next a',     'click', prevNextNavTo, response.nextPage);\r\n  \r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  document.addEventListener('keydown', documentEventMediaKeyDown);\r\n  window.addEventListener('blur', windowEventBlur);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Regular keyboard events handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady         &&\r\n      keyboardShortcuts.allow() &&\r\n      (event.repeat  === false) &&\r\n      (event.ctrlKey === false) &&\r\n      (event.altKey  === false))\r\n  {\r\n    switch(event.code)\r\n    {\r\n      case 'Backquote':\r\n        event.preventDefault();\r\n        playerScrollTo(m.player.getStatus().trackId);\r\n        break;\r\n    }\r\n\r\n    switch (event.key)\r\n    {\r\n      case ' ':\r\n        event.preventDefault();\r\n        m.player.togglePlayPause();\r\n        break;\r\n\r\n      case 'Home':\r\n      case 'End':\r\n      case 'PageUp':\r\n      case 'PageDown':\r\n        playerOnKeyScroll(event);\r\n        break;\r\n\r\n      case 'ArrowLeft':\r\n        {\r\n          event.preventDefault();\r\n          \r\n          if (event.shiftKey === true)\r\n            prevNextNavTo(null, response.prevPage);\r\n          else\r\n            m.player.prevTrack();\r\n        }\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        {\r\n          event.preventDefault();\r\n\r\n          if (event.shiftKey === true)\r\n            prevNextNavTo(null, response.nextPage);\r\n          else\r\n            m.player.nextTrack();\r\n        }\r\n        break;\r\n\r\n      case 'A':\r\n        footerToggles.autoplay.toggle();\r\n        break;\r\n\r\n      case 'f':\r\n      case 'F':\r\n        event.preventDefault();\r\n        fullscreenElement.toggle(document.getElementById(m.player.getStatus().iframeId));\r\n        break;\r\n\r\n      case 'm':\r\n      case 'M':\r\n        event.preventDefault();\r\n        m.player.toggleMute();\r\n        showSnackbar(settings.playback.masterMute ? 'Volume is muted (<b>m</b> to unmute)' : 'Volume is unmuted (<b>m</b> to mute)', 3);\r\n        break;\r\n\r\n      case 'p':\r\n      case 'P':\r\n        footerToggles.playerType.toggle();\r\n        break;\r\n\r\n      case 'r':\r\n      case 'R':\r\n        showSnackbar(`${toggleRepeat().title} (<b>r</b> to change)`, 3);\r\n        break;\r\n\r\n      case 'x':\r\n      case 'X':\r\n        footerToggles.crossfade.toggle();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard media keys event handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventMediaKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady && keyboardShortcuts.allow()) // && (event.repeat  === false)) does not function as expected on Firefox\r\n  {\r\n    switch(event.key)\r\n    {\r\n      case 'MediaPlayPause':\r\n        if (playbackEvents.hasPlaybackStarted === false)\r\n        {\r\n          debug.log('documentEventMediaKeyDown(): MediaPlayPause');\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n        }\r\n        break;\r\n\r\n      case 'MediaTrackPrevious':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackPrevious');\r\n        event.preventDefault();\r\n        m.player.prevTrack();\r\n        break;\r\n      \r\n      case 'MediaTrackNext':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackNext');\r\n        event.preventDefault();\r\n        m.player.nextTrack();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventReady()\r\n{\r\n  utils.addListener('.playback-details-control',   'click', playbackDetailsClick);\r\n  utils.addListener('.playback-thumbnail-control', 'click', playbackThumbnailClick);\r\n  utils.addListener('.playback-timer-control',     'click', playbackTimerClick);\r\n  m.isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  if (settings.playback.autoExitFullscreen)\r\n    fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  if (settings.playback.autoExitFsOnWarning && (playbackEvent.data.timeRemainingSeconds <= settings.playback.timeRemainingSeconds))\r\n    fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Window and document event handlers\r\n// ************************************************************************************************\r\n\r\nfunction windowEventBlur()\r\n{\r\n  // ToDo: This is only for gallery players for now...?\r\n  if (isListPlayer())\r\n    return;\r\n\r\n  // setTimeout(0) = Yield\r\n  setTimeout(() =>\r\n  {\r\n    // document (page) iframe was focused\r\n    if (document.activeElement instanceof HTMLIFrameElement)\r\n    {\r\n      setTimeout(() =>\r\n      {\r\n        document.activeElement.blur();\r\n        \r\n        // Needed to get Firefox to behave like Chrome\r\n        if (document.activeElement instanceof HTMLIFrameElement)\r\n          document.activeElement.blur();\r\n      }, 250);\r\n    }\r\n  }, 0);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick()\r\n{\r\n  playerScrollTo(m.player.getStatus().trackId);\r\n\r\n  if (isListPlayer() && settings.list.showUpNextModal)\r\n    showSnackbarHint('showUpNextModalHint', '<b>Tip:</b> Click or tap Artist &amp; Title to show Up Next queue');\r\n  else\r\n    showSnackbarHint('showTrackDetailsHint', '<b>Tip:</b> Click or tap Artist &amp; Title to show current track');\r\n}\r\n\r\nfunction playbackThumbnailClick()\r\n{\r\n  if (isGalleryPlayer())\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, null);\r\n    showSnackbarHint('showGalleryTrackThumbnailHint', '<b>Tip:</b> Double click or tap Track Thumbnail for full screen');\r\n  \r\n    if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, config.doubleClickDelay))\r\n      fullscreenElement.enter(document.getElementById(m.player.getStatus().iframeId));\r\n  }\r\n  else if (isListPlayer())\r\n  {\r\n    playerScrollTo(0);\r\n    showSnackbarHint('showListTrackThumbnailHint', '<b>Tip:</b> Click or tap Track Thumbnail to show player');\r\n  }\r\n}\r\n\r\nfunction playbackTimerClick()\r\n{\r\n  footerToggles.autoplay.toggle();\r\n  showSnackbarHint('showTrackTimerHint', '<b>Tip:</b> Click or tap Track Timer to toggle Autoplay On / Off');\r\n}\r\n\r\nfunction showSnackbarHint(hintKey, hintText, snackbarTimeout = 0)\r\n{\r\n  if (settings.tips[hintKey])\r\n  {\r\n    showSnackbar(hintText, snackbarTimeout);\r\n    settings.tips[hintKey] = false;\r\n  }\r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  autoplayNavTo(destUrl, m.player.getStatus().isPlaying);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Fullscreen Element module\r\n// ************************************************************************************************\r\n\r\nconst fullscreenElement = (() =>\r\n{\r\n  const fseEvent = new Event('fullscreenElement');\r\n  let fseTarget  = null;\r\n\r\n  return {\r\n    init,\r\n    enter,\r\n    exit,        \r\n    toggle,\r\n  };\r\n\r\n  function init()\r\n  {\r\n    document.addEventListener('fullscreenchange',       fullscreenChange);\r\n    document.addEventListener('webkitfullscreenchange', fullscreenChange);\r\n  }\r\n\r\n  function fullscreenChange()\r\n  {\r\n    fseTarget = (document.fullscreenElement !== null)\r\n                  ? document.fullscreenElement.id\r\n                  : null;\r\n    \r\n    fseEvent.fullscreenTarget = fseTarget;\r\n    document.dispatchEvent(fseEvent);\r\n  }\r\n\r\n  function enter(element)\r\n  {\r\n    element.requestFullscreen();\r\n  }\r\n  \r\n  function exit()\r\n  {\r\n    if (fseTarget !== null)\r\n    {\r\n      document.exitFullscreen();\r\n      fseTarget = null;\r\n    }\r\n  }\r\n\r\n  function toggle(element)\r\n  {\r\n    if (fseTarget === null)\r\n      enter(element);\r\n    else\r\n      exit();\r\n  }\r\n})();\r\n\r\n\r\n// ************************************************************************************************\r\n// Allow / Deny keyboard shortcuts event handling module\r\n// ************************************************************************************************\r\n\r\nconst keyboardShortcuts = (() =>\r\n{\r\n  let allow = false;\r\n\r\n  return {\r\n    allow() { return allow; },\r\n    init,\r\n  };\r\n\r\n  function init()\r\n  {\r\n    allow = settings.playback.keyboardShortcuts;\r\n    \r\n    document.addEventListener('allowKeyboardShortcuts', () =>\r\n    {\r\n      if (settings.playback.keyboardShortcuts)\r\n        allow = true;\r\n    });\r\n    \r\n    document.addEventListener('denyKeyboardShortcuts', () =>\r\n    {\r\n      if (settings.playback.keyboardShortcuts)\r\n        allow = false;\r\n    });\r\n  }\r\n})();\r\n"],
  "mappings": "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",
  "names": []
}
