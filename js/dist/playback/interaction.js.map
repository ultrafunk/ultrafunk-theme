{
  "version": 3,
  "sources": ["../../src/playback/common/eventlogger.js", "../../src/playback/gallery/gallery-playback.js", "../../src/playback/common/playback-timer.js", "../../src/playback/gallery/gallery-playback-timer.js", "../../src/playback/gallery/embedded-players.js", "../../src/playback/gallery/gallery-events.js", "../../src/playback/gallery/gallery-controls.js", "../../src/playback/gallery/gallery-players.js", "../../src/playback/list/list-playback.js", "../../src/playback/list/list-playback-timer.js", "../../src/playback/common/screen-wakelock.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Event logging and matching\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger } from '../../shared/debuglogger.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('eventlogger');\r\n\r\nexport const SOURCE = {\r\n// Default source\r\n  UNKNOWN: -10000,\r\n// interaction.js event sources\r\n  KEYBOARD: 100,\r\n  MOUSE:    110,\r\n// Playback event sources\r\n  YOUTUBE:    1,\r\n  SOUNDCLOUD: 2,\r\n  ULTRAFUNK:  50,\r\n};\r\n\r\nexport const EVENT = {\r\n// Default event\r\n  UNKNOWN:         -10000,\r\n// interaction.js event types\r\n  KEY_ARROW_LEFT:  180,\r\n  KEY_ARROW_RIGHT: 181,\r\n  MOUSE_CLICK:     182,\r\n// Playback event types\r\n  STATE_ERROR:     -5,\r\n  STATE_UNSTARTED: -1, // YT.PlayerState.UNSTARTED\r\n  STATE_ENDED:     0,  // YT.PlayerState.ENDED\r\n  STATE_PLAYING:   1,  // YT.PlayerState.PLAYING\r\n  STATE_PAUSED:    2,  // YT.PlayerState.PAUSED\r\n  STATE_BUFFERING: 3,  // YT.PlayerState.BUFFERING\r\n  STATE_CUED:      5,  // YT.PlayerState.CUED\r\n  RESUME_AUTOPLAY: 50,\r\n  PLAYER_ERROR:    60,\r\n  CROSSFADE_START: 70,\r\n};\r\n\r\nconst entry = {\r\n  eventSource: SOURCE.UNKNOWN,\r\n  eventType:   EVENT.UNKNOWN,\r\n  uId:         null,\r\n  timestamp:   0,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// EventLog base class\r\n// ************************************************************************************************\r\n\r\nclass EventLog\r\n{\r\n  #log        = [];\r\n  #maxEntries = 0;\r\n  #matchCount = 0;\r\n  #lastPos    = 0;\r\n\r\n  constructor(maxEntries = 10)\r\n  {\r\n    this.#maxEntries = maxEntries;\r\n  }\r\n\r\n  add(eventSource, eventType, uId = null, timestamp = Date.now())\r\n  {\r\n    const logEntry = Object.create(entry);\r\n\r\n    logEntry.eventSource = eventSource;\r\n    logEntry.eventType   = eventType;\r\n    logEntry.uId         = uId;\r\n    logEntry.timestamp   = timestamp;\r\n\r\n    // Simple and inefficient, but good enough...\r\n    if (this.#log.length < this.#maxEntries)\r\n    {\r\n      this.#log.push(logEntry);\r\n    }\r\n    else\r\n    {\r\n      this.#log.shift();\r\n      this.#log.push(logEntry);\r\n    }\r\n  }\r\n\r\n  clear()      { this.#log = [];       }\r\n  getLastPos() { return this.#lastPos; }\r\n\r\n  initMatch()\r\n  {\r\n    this.#lastPos    = this.#log.length - 1;\r\n    this.#matchCount = 0;\r\n  }\r\n\r\n  matchesEvent(index, eventSource, eventType, uId = null)\r\n  {\r\n    if ((this.#log[this.#lastPos - index].eventSource === eventSource) &&\r\n        (this.#log[this.#lastPos - index].eventType   === eventType)   &&\r\n        (this.#log[this.#lastPos - index].uId         === uId))\r\n    {\r\n      this.#matchCount++;\r\n    }\r\n  }\r\n\r\n  matchesDelta(elements, delta)\r\n  {\r\n    if ((this.#log[this.#lastPos].timestamp - this.#log[this.#lastPos - elements].timestamp) <= delta)\r\n      this.#matchCount++;\r\n  }\r\n\r\n  isPatternMatch(matchCount, event)\r\n  {\r\n    if (this.#matchCount === matchCount)\r\n    {\r\n      debug.log(`MATCH for: ${event}`);\r\n      this.logEventMatch();\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  logEventMatch()\r\n  {\r\n    const entries = [];\r\n\r\n    for (let i = 0; i < this.#log.length; i++)\r\n    {\r\n      const data = {\r\n        eventSource: debug.getKeyForValue(SOURCE, this.#log[i].eventSource),\r\n        eventType:   debug.getKeyForValue(EVENT,  this.#log[i].eventType),\r\n        uId:         this.#log[i].uId,\r\n        timestamp:   this.#log[i].timestamp,\r\n      };\r\n\r\n      entries.push(data);\r\n    }\r\n\r\n    debug.log(entries);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Interaction child class\r\n// ************************************************************************************************\r\n\r\nexport class Interaction extends EventLog\r\n{\r\n  doubleClicked(eventSource, eventType, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 1)\r\n    {\r\n      this.matchesEvent(1, eventSource, eventType);\r\n      this.matchesEvent(0, eventSource, eventType);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(3, `${debug.getKeyForValue(SOURCE, eventSource)} Double Clicked`);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback child class\r\n// ************************************************************************************************\r\n\r\nexport class Playback extends EventLog\r\n{\r\n  scAutoplayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 3)\r\n    {\r\n      this.matchesEvent(3, SOURCE.ULTRAFUNK,  EVENT.RESUME_AUTOPLAY, null);\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,    uId);\r\n      this.matchesDelta(3, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(5, 'SoundCloud Autoplay Blocked');\r\n  }\r\n\r\n  scWidgetPlayBlocked(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING, uId);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PAUSED,  uId);\r\n      this.matchesDelta(2, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud WidgetPlay Blocked');\r\n  }\r\n\r\n  scPlayDoubleTrigger(uId, deltaTime)\r\n  {\r\n    this.initMatch();\r\n\r\n    if (this.getLastPos() >= 2)\r\n    {\r\n      this.matchesEvent(2, SOURCE.ULTRAFUNK,  EVENT.CROSSFADE_START, null);\r\n      this.matchesEvent(1, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesEvent(0, SOURCE.SOUNDCLOUD, EVENT.STATE_PLAYING,   uId);\r\n      this.matchesDelta(1, deltaTime);\r\n    }\r\n\r\n    return this.isPatternMatch(4, 'SoundCloud Play Double Trigger');\r\n  }\r\n}\r\n", "//\r\n// Gallery playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as eventLogger          from '../common/eventlogger.js';\r\nimport * as embeddedPlayers      from './embedded-players.js';\r\nimport * as playbackEvents       from '../common/playback-events.js';\r\nimport * as galleryEvents        from './gallery-events.js';\r\nimport * as playbackControls     from '../common/playback-controls.js';\r\nimport * as galleryControls      from './gallery-controls.js';\r\nimport { newDebugLogger }        from '../../shared/debuglogger.js';\r\nimport { playbackTimer }         from './gallery-playback-timer.js';\r\nimport { galleryPlayers }        from './gallery-players.js';\r\nimport { CROSSFADE_TYPE }        from './crossfade.js';\r\nimport { settings }              from '../../shared/session-data.js';\r\nimport { singleTrackFetchReady } from './single-track-fetch.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-playback');\r\n\r\nconst m = {\r\n  eventLog: null,\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  minCrossfadeToTime: 5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:  3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.eventLog = embeddedPlayers.eventLog;\r\n\r\n  galleryEvents.init();\r\n\r\n  m.players = galleryPlayers();\r\n  m.players.init();\r\n\r\n  playbackControls.init((positionSeconds) => m.players.getTrackData(positionSeconds), seekClick);\r\n  galleryControls.init(m.players, crossfadeToClick);\r\n  playbackTimer.init(m.players, crossfadeInit);\r\n  embeddedPlayers.init(m.players, playbackState, embeddedEventHandler);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nexport function play()\r\n{\r\n  playbackControls.setPlayState();\r\n  m.players.current.play(embeddedPlayers.onPlayerError);\r\n}\r\n\r\nexport function pause()\r\n{\r\n  playbackControls.setPauseState();\r\n  m.players.current.pause();\r\n}\r\n\r\nexport function togglePlayPause()\r\n{\r\n  playbackControls.isPlaying() ? pause() : play();\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  debug.log(`prevTrack() - prevTrack: ${m.players.getCurrentTrackNum() - 1} - numTracks: ${m.players.getNumTracks()}`);\r\n\r\n  if (m.players.getCurrentTrackNum() > 0)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 5000)\r\n      {\r\n        m.players.current.seekTo(0);\r\n        playbackControls.updateTimerAndProgress(0, 0, m.players.current.getDuration());\r\n      }\r\n      else\r\n      {\r\n        if (m.players.getCurrentTrackNum() > 1)\r\n          m.players.stop();\r\n\r\n        if (m.players.prevTrack())\r\n          playCurrentTrack(playbackControls.isPlaying());\r\n        else\r\n          playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PREV_TRACK);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function nextTrack(isMediaEnded = false)\r\n{\r\n  const isLastTrack = ((m.players.getCurrentTrackNum() + 1) > m.players.getNumTracks());\r\n\r\n  debug.log(`nextTrack() - isMediaEnded: ${isMediaEnded} - isLastTrack: ${isLastTrack} - autoplay: ${settings.playback.autoplay}`);\r\n\r\n  if (repeatPlayback(isMediaEnded, isLastTrack))\r\n    return;\r\n\r\n  if (isLastTrack === false)\r\n  {\r\n    m.players.stop();\r\n\r\n    if (isMediaEnded && (settings.playback.autoplay === false))\r\n    {\r\n      playbackControls.setPauseState();\r\n    }\r\n    else\r\n    {\r\n      if (m.players.nextTrack())\r\n        playCurrentTrack(playbackControls.isPlaying());\r\n    }\r\n  }\r\n  else if ((isLastTrack === true) && (isMediaEnded === false))\r\n  {\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_NEXT_TRACK);\r\n  }\r\n  else if (isMediaEnded)\r\n  {\r\n    playbackControls.setPauseState();\r\n\r\n    if (settings.playback.autoplay)\r\n      playbackEvents.dispatch(playbackEvents.EVENT.CONTINUE_AUTOPLAY, { trackType: m.players.current.getTrackType() });\r\n    else\r\n      m.players.stop();\r\n  }\r\n}\r\n\r\nfunction repeatPlayback(isMediaEnded, isLastTrack)\r\n{\r\n  if (isMediaEnded && settings.playback.autoplay)\r\n  {\r\n    const repeatMode = playbackControls.getRepeatMode();\r\n\r\n    debug.log(`repeatPlayback(): ${debug.getKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n    if (repeatMode === playbackControls.REPEAT.ONE)\r\n    {\r\n      m.players.current.seekTo(0);\r\n      play();\r\n      return true;\r\n    }\r\n    else if (isLastTrack && (repeatMode === playbackControls.REPEAT.ALL))\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(0);\r\n      playCurrentTrack(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  m.players.current.seekTo(positionSeconds);\r\n}\r\n\r\nexport function setVolume()\r\n{\r\n  m.players.current.setVolume(settings.playback.masterVolume);\r\n}\r\n\r\nexport function toggleMute()\r\n{\r\n  settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n  m.players.mute();\r\n}\r\n\r\n//\r\n// Supports only YouTube players for now...\r\n//\r\nfunction cueOrPlayTrackById(iframeId, autoplayData, scrollToMedia = true)\r\n{\r\n  debug.log(`cueOrPlayTrackById() - iframeId: ${iframeId} - autoplay: ${autoplayData.autoplay} - position: ${autoplayData.position}`);\r\n\r\n  m.players.setPlayerIndex(m.players.indexMap.get(iframeId));\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n\r\n  if (autoplayData.autoplay)\r\n  {\r\n    m.players.current.playTrackById(autoplayData.position);\r\n  }\r\n  else\r\n  {\r\n    m.players.current.cueTrackById(autoplayData.position);\r\n\r\n    if (autoplayData.position !== 0)\r\n      playbackControls.updateTimerAndProgress((autoplayData.position * 1000), autoplayData.position, m.players.current.getDuration());\r\n  }\r\n\r\n  playbackControls.updateTrackData(autoplayData.position);\r\n}\r\n\r\nfunction playCurrentTrack(playMedia, scrollToMedia = true)\r\n{\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  if (playMedia) play();\r\n  playbackControls.updateTrackData();\r\n}\r\n\r\nfunction skipToTrack(trackNum, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack() - trackNum: ${trackNum} - playMedia: ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (playbackControls.isPlaying() === false))\r\n  {\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n\r\n    if (m.players.gotoTrackNum(trackNum))\r\n      playCurrentTrack(playMedia);\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay(autoplayData = null, iframeId = null)\r\n{\r\n  if ((autoplayData !== null) && (iframeId !== null))\r\n  {\r\n    cueOrPlayTrackById(iframeId, autoplayData);\r\n  }\r\n  else if ((autoplayData !== null) && (autoplayData.autoplay))\r\n  {\r\n    debug.log(`resumeAutoplay(): Play first track`);\r\n    m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.RESUME_AUTOPLAY);\r\n    play();\r\n  }\r\n  else\r\n  {\r\n    debug.log(`resumeAutoplay(): Cue first track`);\r\n    playbackControls.updateTrackData();\r\n  }\r\n}\r\n\r\nfunction cueOrPlaySingleTrackById(trackData, thumbnailData, playMedia = false)\r\n{\r\n  debug.log(`cueOrPlaySingleTrackById() - playMedia: ${playMedia}`);\r\n\r\n  m.players.current.setIsCued(false);\r\n  m.players.current.setIsPlayable(true);\r\n  m.players.current.setSourceUid(thumbnailData.uid);\r\n  m.players.current.setArtistTitle(trackData.track_artist, trackData.track_title);\r\n  m.players.current.setDuration(parseInt(trackData.track_duration));\r\n  m.players.current.setThumbnail(thumbnailData);\r\n\r\n  playbackControls.updateProgressPercent(0);\r\n  playbackControls.updateTrackData();\r\n\r\n  if (playMedia)\r\n    m.players.current.playTrackById();\r\n  else\r\n    m.players.current.cueTrackById();\r\n}\r\n\r\nexport function getStatus(getCurrentPosition = false)\r\n{\r\n  const status = {\r\n    isPlaying:    playbackControls.isPlaying(),\r\n    currentTrack: m.players.getCurrentTrackNum(),\r\n    trackType:    m.players.current.getTrackType(),\r\n    position:     0,\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      m.players.current.getTrackId(),\r\n    elementId:    m.players.current.getTrackId(),\r\n    iframeId:     m.players.current.getIframeId(),\r\n  };\r\n\r\n  if (getCurrentPosition)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      status.position = Math.round(positionMilliseconds / 1000);\r\n      return status;\r\n    });\r\n  }\r\n\r\n  return status;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((m.players.isCurrent(fadeInUid) === false) && (m.players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\r\n      fadeOut: ${m.players.current.getArtist()} - \"${m.players.current.getTitle()}\" (${m.players.current.getIframeId()})\r\n      fadeIn.: ${m.players.playerFromIframeId(fadeInUid).getArtist()} - \"${m.players.playerFromIframeId(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.playback.masterMute === false) && (settings.playback.autoplay === false))\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = m.players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (config.minCrossfadeToTime + config.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  m.eventLog.add(eventLogger.SOURCE.ULTRAFUNK, eventLogger.EVENT.CROSSFADE_START);\r\n\r\n  if (m.players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid))\r\n  {\r\n    if (crossfadeInUid === null)\r\n    {\r\n      if (m.players.nextTrack())\r\n        playCurrentTrack(true);\r\n    }\r\n    else\r\n    {\r\n      if (m.players.gotoTrackNum(m.players.trackNumFromIframeId(crossfadeInUid)))\r\n        playCurrentTrack(true, false);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Embedded players event handler proxy for playbackEvents.dispatch()\r\n// ************************************************************************************************\r\n\r\nfunction embeddedEventHandler(embeddedEvent, embeddedEventData = null)\r\n{\r\n  debug.log(`embeddedEventHandler() - event: ${debug.getKeyForValue(playbackEvents.EVENT, embeddedEvent)}`);\r\n  if (embeddedEventData !== null) debug.log(embeddedEventData);\r\n\r\n  switch (embeddedEvent)\r\n  {\r\n    case playbackEvents.EVENT.MEDIA_ENDED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED, getStatus());\r\n      nextTrack(true);\r\n      break;\r\n\r\n    case playbackEvents.EVENT.PLAYBACK_READY:\r\n      playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n      singleTrackFetchReady(cueOrPlaySingleTrackById);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_READY, embeddedEventData);\r\n      playbackEvents.dispatch(playbackEvents.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.AUTOPLAY_BLOCKED:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.AUTOPLAY_BLOCKED, null, { 'play': play });\r\n      break;\r\n\r\n    case playbackEvents.EVENT.PLAYBACK_BLOCKED:\r\n    case playbackEvents.EVENT.MEDIA_UNAVAILABLE:\r\n      playbackEvents.dispatch(embeddedEvent, embeddedEventData, { 'skipToTrack': skipToTrack });\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n\r\n  const sync = function syncRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.sync() - previousTrack: ${m.players.getCurrentTrackNum()} - nextTrack: ${m.players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getKeyForValue(STATE, syncState)}`);\r\n\r\n    if (m.players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(m.players.indexMap.get(nextPlayerUid));\r\n      playbackControls.updateTrackData();\r\n      syncRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  return {\r\n    STATE,\r\n    sync,\r\n  };\r\n})();\r\n", "//\r\n// PlaybackTimer base class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { settings } from '../../shared/session-data.js';\r\nimport { EVENT, dispatch } from './playback-events.js';\r\nimport { timeRemainingWarningBlink } from './playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nexport class PlaybackTimer\r\n{\r\n  #intervalId     = -1;\r\n  #lastPosSeconds = 0;\r\n  isVisible       = true;\r\n\r\n  config = {\r\n    updateTimerInterval: 250, // Milliseconds between each timer event\r\n    maxBufferingDelay:   3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n  };\r\n\r\n  init()\r\n  {\r\n    document.addEventListener('visibilitychange', () =>\r\n    {\r\n      this.isVisible = (document.visibilityState === 'visible');\r\n    });\r\n  }\r\n\r\n  // Abstract methods to override in child class(es)\r\n  updateTimer() {}\r\n  updateVolumeMute() {}\r\n\r\n  start()\r\n  {\r\n    this.stop();\r\n    this.#intervalId = setInterval(() => this.updateTimer(), this.config.updateTimerInterval);\r\n  }\r\n\r\n  stop()\r\n  {\r\n    if (this.#intervalId !== -1)\r\n    {\r\n      clearInterval(this.#intervalId);\r\n      this.#intervalId = -1;\r\n    }\r\n\r\n    this.#lastPosSeconds = 0;\r\n    timeRemainingWarningBlink(false);\r\n  }\r\n\r\n  updateOncePerSecond(positionSeconds, durationSeconds)\r\n  {\r\n    if (this.#lastPosSeconds !== positionSeconds)\r\n    {\r\n      this.#lastPosSeconds = positionSeconds;\r\n      this.updateVolumeMute();\r\n\r\n      if ((settings.playback.autoplay === false) && settings.playback.timeRemainingWarning)\r\n      {\r\n        const remainingSeconds = durationSeconds - positionSeconds;\r\n\r\n        if (remainingSeconds <= settings.playback.timeRemainingSeconds)\r\n        {\r\n          timeRemainingWarningBlink(true);\r\n          dispatch(EVENT.MEDIA_TIME_REMAINING, { timeRemainingSeconds: remainingSeconds });\r\n        }\r\n        else\r\n        {\r\n          timeRemainingWarningBlink(false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Gallery playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { PlaybackTimer }            from '../common/playback-timer.js';\r\nimport { settings }                 from '../../shared/session-data.js';\r\nimport { CROSSFADE_TYPE }           from './crossfade.js';\r\nimport { updateTimerAndProgress }   from '../common/playback-controls.js';\r\nimport { updateVolumeMuteSettings } from '../common/shared-gallery-list.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass GalleryPlaybackTimer extends PlaybackTimer\r\n{\r\n  #players       = null;\r\n  #crossfadeInit = null;\r\n\r\n  #updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    updateTimerAndProgress(positionMilliseconds, positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      super.updateOncePerSecond(positionSeconds, durationSeconds);\r\n      this.#updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  #isAutoCrossfade()\r\n  {\r\n    return (settings.playback.autoplay && settings.gallery.autoCrossfade);\r\n  }\r\n\r\n  #updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.playback.masterMute === false) && this.#isAutoCrossfade())\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.gallery.autoCrossfadeLength + this.config.maxBufferingDelay))\r\n      {\r\n        if ((this.#players.getCurrentTrackNum() + 1) <= this.#players.getNumTracks())\r\n        {\r\n          this.#crossfadeInit(CROSSFADE_TYPE.AUTO,\r\n          {\r\n            name:   'Auto Crossfade',\r\n            length: settings.gallery.autoCrossfadeLength,\r\n            curve:  settings.gallery.autoCrossfadeCurve\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  init(players, crossfadeInit)\r\n  {\r\n    super.init();\r\n    this.#players       = players;\r\n    this.#crossfadeInit = crossfadeInit;\r\n  }\r\n\r\n  updateTimer()\r\n  {\r\n    if (this.isVisible || this.#isAutoCrossfade())\r\n      this.#players.current.getPosition((position, duration) => this.#updateCallback(position, duration));\r\n  }\r\n\r\n  updateVolumeMute()\r\n  {\r\n    if (this.#players.crossfade.isFading() === false)\r\n      this.#players.current.getVolume((volume) => updateVolumeMuteSettings(Math.round(volume), this.#players.current.isMuted()));\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new GalleryPlaybackTimer();\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as eventLogger    from '../common/eventlogger.js';\r\nimport * as mediaPlayers   from '../common/mediaplayers.js';\r\nimport * as playbackEvents from '../common/playback-events.js';\r\nimport { newDebugLogger }  from '../../shared/debuglogger.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\nimport { playbackTimer }   from './gallery-playback-timer.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('embedded-players');\r\nexport const eventLog = new eventLogger.Playback(10);\r\n\r\nconst m = {\r\n  players:         {},\r\n  playbackState:   null,\r\n  embeddedEvent:   null,\r\n  loadEventsTotal: 0,\r\n  loadEventsCount: 1,\r\n};\r\n\r\nconst config = {\r\n  maxPlaybackStartDelay: 3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init(players, playbackState, embeddedEventHandler)\r\n{\r\n  m.players       = players;\r\n  m.playbackState = playbackState;\r\n  m.embeddedEvent = embeddedEventHandler;\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  m.loadEventsTotal = 3 + parseInt(document.body.getAttribute('data-gallery-track-count'));\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (m.loadEventsCount++ / m.loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (m.loadEventsCount >= m.loadEventsTotal)\r\n    m.embeddedEvent(playbackEvents.EVENT.PLAYBACK_READY, { resetProgressBar: true });\r\n  else\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const elements = document.querySelectorAll('single-track, gallery-track');\r\n\r\n  elements.forEach(element =>\r\n  {\r\n    const trackType = parseInt(element.getAttribute('data-track-type'));\r\n    const iframe    = element.querySelector('iframe');\r\n    let player      = null;\r\n\r\n    if (trackType === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if ((elements.length === 1) && (iframe === null))\r\n        player = getYouTubePlayer('youtube-player', element, true);\r\n      else\r\n        player = getYouTubePlayer(iframe.id, element, false);\r\n\r\n      player.setDuration(parseInt(element.getAttribute('data-track-duration')));\r\n    }\r\n    else if (trackType === mediaPlayers.TRACK_TYPE.SOUNDCLOUD)\r\n    {\r\n      /* eslint-disable */\r\n      const embeddedPlayer = SC.Widget(iframe.id);\r\n      player = new mediaPlayers.SoundCloud(element.id, iframe.id, embeddedPlayer);\r\n\r\n      embeddedPlayer.bind(SC.Widget.Events.READY,  () => onSoundCloudPlayerEventReady(iframe.id, element, player, embeddedPlayer));\r\n      embeddedPlayer.bind(SC.Widget.Events.PLAY,   () => onSoundCloudPlayerEventPlay(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.PAUSE,  () => onSoundCloudPlayerEventPause(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.FINISH, () => onSoundCloudPlayerEventFinish(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.ERROR,  () => onSoundCloudPlayerEventError(iframe.id));\r\n      /* eslint-enable */\r\n    }\r\n\r\n    if (player !== null)\r\n    {\r\n      player.setArtistTitle(element.getAttribute('data-track-artist'), element.getAttribute('data-track-title'));\r\n      m.players.add(player);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getYouTubePlayer(playerId, element, isSingleTrackPlayer = false)\r\n{\r\n  const videoId = element.getAttribute('data-track-source-uid');\r\n\r\n  const embeddedPlayer = new YT.Player(playerId, // eslint-disable-line no-undef\r\n  {\r\n    events:\r\n    {\r\n      onReady:           (event) => onYouTubePlayerReady(event, playerId),\r\n      onStateChange:     (event) => onYouTubePlayerStateChange(event, playerId),\r\n      onError:           (event) => onYouTubePlayerError(event, playerId),\r\n      onAutoplayBlocked: ()      => m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED),\r\n    },\r\n    playerVars: {\r\n      'disablekb': 1,\r\n    },\r\n    ...isSingleTrackPlayer && { videoId: videoId },\r\n  });\r\n\r\n  return new mediaPlayers.YouTube(element.id, playerId, embeddedPlayer, videoId);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nexport function onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player.getTrackType() === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n                        ? eventLogger.SOURCE.YOUTUBE\r\n                        : eventLogger.SOURCE.SOUNDCLOUD;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (m.players.isCurrent(player.getIframeId()) === false)\r\n    m.players.stop();\r\n\r\n  eventLog.add(eventSource, eventLogger.EVENT.PLAYER_ERROR, player.getIframeId());\r\n  m.embeddedEvent(playbackEvents.EVENT.MEDIA_UNAVAILABLE, getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: m.players.trackNumFromIframeId(player.getIframeId()),\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    trackType:    player.getTrackType(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady(event, iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  // YT.PlayerState.UNSTARTED (-1) here means the video is not available or playable anymore,\r\n  // so we set playbable to false for later use...\r\n  // ToDo: This is _NOT_ documented or official behaviour, so it could change at any time!\r\n  if (event.target.getPlayerState() === -1)\r\n  {\r\n    debug.warn(`onYouTubePlayerReady() - MEDIA_UNAVAILABLE: ${iframeId} => ${player.getSourceUid()} => ${player.getArtist()} - \"${player.getTitle()}\"`);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else\r\n  {\r\n    debug.log(`onYouTubePlayerReady(): ${iframeId} => ${player.getSourceUid()} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  }\r\n\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event, iframeId)\r\n{\r\n  eventLog.add(eventLogger.SOURCE.YOUTUBE, event.data, iframeId);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(iframeId); break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(iframeId); break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(iframeId);   break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(iframeId);    break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(iframeId);      break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(iframeId);     break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (iframeId: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.crossfade.isFading() === false)\r\n  {\r\n    const player = m.players.playerFromIframeId(iframeId);\r\n    player.mute(settings.playback.masterMute);\r\n    player.setVolume(settings.playback.masterVolume);\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (iframeId: ${iframeId})`);\r\n\r\n  // Call order is important on play events for state handling: Always sync first!\r\n  m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onYouTubeStatePaused(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    m.playbackState.sync(iframeId, m.playbackState.STATE.PAUSE);\r\n    playbackTimer.stop();\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateCued(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (iframeId: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerError(event, iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  debug.log(`onYouTubePlayerError(${(event.data !== null) ? event.data : 'null'}) - iframeId: ${iframeId} - isCued: ${player.isCued()} - isPlayable: ${player.isPlayable()}`);\r\n\r\n  if ((event.data !== null) && player.isCued())\r\n  {\r\n    player.setIsCued(false);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else if ((event.data !== null) && player.isPlayable())\r\n  {\r\n    player.setIsPlayable(false);\r\n    onPlayerError(player, event.target.getVideoUrl());\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady(iframeId, element, player, embeddedPlayer)\r\n{\r\n  debug.log(`onSoundCloudPlayerEventReady(): ${iframeId} => ${player.getArtist()} - ${player.getTitle()}`);\r\n\r\n  player.setThumbnail(element);\r\n\r\n  embeddedPlayer.getDuration(durationMilliseconds =>\r\n  {\r\n    player.setDuration(Math.round(durationMilliseconds / 1000));\r\n    element.setAttribute('data-track-duration', player.getDuration());\r\n    updatePlayersReady();\r\n  });\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (iframeId: ${iframeId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PLAYING, iframeId);\r\n\r\n  if (m.players.crossfade.isFading() && m.players.isCurrent(iframeId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(iframeId, (config.maxPlaybackStartDelay * 1000)))\r\n      m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n    m.players.current.mute(settings.playback.masterMute);\r\n    m.players.current.setVolume(settings.playback.masterVolume);\r\n  }\r\n\r\n  playbackTimer.start();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (iframeId: ${iframeId})`);\r\n  eventLog.add(eventLogger.SOURCE.SOUNDCLOUD, eventLogger.EVENT.STATE_PAUSED, iframeId);\r\n\r\n  if (eventLog.scAutoplayBlocked(iframeId, 3000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.AUTOPLAY_BLOCKED);\r\n  }\r\n  else if (eventLog.scWidgetPlayBlocked(iframeId, 30000))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.PLAYBACK_BLOCKED, { currentTrack: m.players.trackNumFromIframeId(iframeId), numTracks: m.players.getNumTracks() });\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (m.players.isCurrent(iframeId))\r\n    {\r\n      m.players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n        {\r\n          m.playbackState.sync(iframeId, m.playbackState.STATE.PAUSE);\r\n          playbackTimer.stop();\r\n        }\r\n      });\r\n    }\r\n    else\r\n    {\r\n      m.players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n  {\r\n    playbackTimer.stop();\r\n    m.embeddedEvent(playbackEvents.EVENT.MEDIA_ENDED);\r\n  }\r\n  else\r\n  {\r\n    m.players.crossfade.stop();\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError(iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  debug.warn(`onSoundCloudPlayerEventError() - MEDIA_UNAVAILABLE: ${player.getIframeId()} => ${player.getArtist()} - \"${player.getTitle()}\"`);\r\n  player.setIsPlayable(false);\r\n}\r\n", "//\r\n// Gallery playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger }     from '../../shared/debuglogger.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { TRACK_TYPE }         from '../common/mediaplayers.js';\r\nimport { replaceClass }       from '../../shared/utils.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../common/playback-events.js';\r\n\r\nimport {\r\n  SINGLE_TRACK,\r\n  isSingleTrackFetch,\r\n  cueOrPlaySingleTrack,\r\n} from './single-track-fetch.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../common/shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-events');\r\n\r\nconst m = {\r\n  snackbarId:      0,\r\n  nowPlayingIcons: null,\r\n};\r\n\r\nconst config = {\r\n  nowPlayingIconsSelector: 'h2.track-artist-title',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.nowPlayingIcons = document.querySelectorAll(config.nowPlayingIconsSelector);\r\n\r\n  addListener(EVENT.MEDIA_PLAYING,     mediaPlaying);\r\n  addListener(EVENT.MEDIA_PAUSED,      mediaPaused);\r\n  addListener(EVENT.MEDIA_ENDED,       mediaEnded);\r\n  addListener(EVENT.MEDIA_CUE_TRACK,   mediaCueTrack);\r\n  addListener(EVENT.CONTINUE_AUTOPLAY, continueAutoplay);\r\n  addListener(EVENT.RESUME_AUTOPLAY,   resumeAutoplay);\r\n  addListener(EVENT.AUTOPLAY_BLOCKED,  autoplayBlocked);\r\n  addListener(EVENT.PLAYBACK_BLOCKED,  playbackBlocked);\r\n  addListener(EVENT.MEDIA_UNAVAILABLE, mediaUnavailable);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(m.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (settings.gallery.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaCueTrack(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    playerScrollTo(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (isSingleTrackFetch() && (playbackEvent.data.trackType === TRACK_TYPE.YOUTUBE))\r\n    cueOrPlaySingleTrack(SINGLE_TRACK.NEXT, true);\r\n  else\r\n    autoplayNavTo(response.nextPage, true);\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayData = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debug.log(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayData !== null) ? JSON.stringify(autoplayData) : 'NO'}`);\r\n\r\n  if (autoplayData !== null)\r\n  {\r\n    const iframeId = document.getElementById(autoplayData.trackId)?.querySelector('iframe').id ?? null;\r\n\r\n    if ((iframeId === null) && (autoplayData.trackId !== null))\r\n      showSnackbar({ message: 'Unable to cue track (not found)', duration: 5 });\r\n    else\r\n      playbackEvent.callback.resumeAutoplay(autoplayData, iframeId);\r\n  }\r\n  else\r\n  {\r\n    playbackEvent.callback.resumeAutoplay();\r\n  }\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  m.snackbarId = showSnackbar({\r\n    message: 'Autoplay blocked, Play to continue',\r\n    duration: 0,\r\n    actionText: 'play',\r\n    actionClickCallback: () => playbackEvent.callback.play(),\r\n  });\r\n}\r\n\r\nfunction playbackBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  showSnackbar({\r\n    message: 'Unable to play track, skipping to next',\r\n    duration: 5,\r\n    actionText: 'Stop',\r\n    afterCloseCallback: () => playbackEventErrorTryNext(playbackEvent),\r\n  });\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  showSnackbar({\r\n    message: 'Unable to play track, skipping to next',\r\n    duration: 5,\r\n    actionText: 'Stop',\r\n    afterCloseCallback: () => playbackEventErrorTryNext(playbackEvent),\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  m.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (isSingleTrackFetch() && (playbackEvent.data.trackType === TRACK_TYPE.YOUTUBE))\r\n    {\r\n      // ToDo: Make below behaviour consistent throughout instead of: cueOrPlaySingleTrack(true) or\r\n      //                                                              cueOrPlaySingleTrack(isPlaying()) ?\r\n      // Meaning settings.playback.autoplay must be TRUE for autoplay triggering on next track played...?\r\n      cueOrPlaySingleTrack(SINGLE_TRACK.NEXT, settings.playback.autoplay);\r\n    }\r\n    else if (response.nextPage !== null)\r\n    {\r\n      autoplayNavTo(response.nextPage, true);\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Gallery-player controls module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as playbackEvents from '../common/playback-events.js';\r\nimport { newDebugLogger }  from '../../shared/debuglogger.js';\r\nimport { ElementClick }    from '../../shared/element-click.js';\r\nimport { isPlaying }       from '../common/playback-controls.js';\r\nimport { presetList }      from '../../settings/settings.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\n\r\nimport {\r\n  STATE,\r\n  ElementsWrapper,\r\n} from '../common/element-wrappers.js';\r\n\r\nimport {\r\n  linkClickUsePrefPlayer,\r\n  replaceClass,\r\n} from '../../shared/utils.js';\r\n\r\nimport {\r\n  showTrackSharePlay,\r\n  showTrackDetails,\r\n} from '../common/track-modals.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-controls');\r\nconst m     = { uiElements: null, players: {} };\r\nconst ctrl  = {};\r\n\r\nconst config = {\r\n  crossfadePresetSelector: '.crossfade-preset-control',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     '.crossfade-fadeto-control',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init(mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.players    = mediaPlayers;\r\n  m.uiElements = new UiElements('div.track-meta', true);\r\n\r\n  ctrl.crossfadePreset = ElementsWrapper(config.crossfadePresetSelector);\r\n  ctrl.crossfadeTo     = ElementsWrapper(config.crossfadeToSelector);\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element => setCrossfadePreset(element, settings.gallery.trackCrossfadeDefPreset));\r\n    ctrl.crossfadeTo.clickCallback = crossfadeClickCallback;\r\n  }\r\n\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY, playbackReady);\r\n}\r\n\r\nfunction playbackReady()\r\n{\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED.CLASS, STATE.ENABLED.CLASS);\r\n    });\r\n\r\n    ctrl.crossfadeTo.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nclass UiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('div.track-share-control'))\r\n      return showTrackSharePlay(this.closest('single-track, gallery-track'));\r\n\r\n    if (this.clicked('div.track-details-control'))\r\n      return showTrackDetails(this.closest('single-track, gallery-track'));\r\n\r\n    if (this.clicked('span.track-artists-links'))\r\n      return linkClickUsePrefPlayer(this.event);\r\n\r\n    if (this.clicked('span.track-channels-links'))\r\n      return linkClickUsePrefPlayer(this.event);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, index)\r\n{\r\n  element.setAttribute(config.crossfadePresetData, index);\r\n  element.textContent = `${index + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[index].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  const index = parseInt(event.target.getAttribute(config.crossfadePresetData));\r\n  setCrossfadePreset(event.target, ((index + 1) < presetList.crossfade.length) ? (index + 1) : 0);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (m.players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('gallery-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe = element.querySelector('iframe');\r\n      const index  = parseInt(element.querySelector(config.crossfadePresetSelector).getAttribute(config.crossfadePresetData));\r\n\r\n      replaceClass(element.querySelector(`div${config.crossfadeToSelector}`), STATE.ENABLED.CLASS, STATE.DISABLED.CLASS);\r\n      ctrl.crossfadeTo.clickCallback(iframe.id, presetList.crossfade[index]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? m.players.getTrackData().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  ctrl.crossfadeTo.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS),\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS)\r\n      );\r\n    }\r\n    else\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS),\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS)\r\n      );\r\n    }\r\n  });\r\n}\r\n", "//\r\n// Gallery players module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger }     from '../../shared/debuglogger.js';\r\nimport { crossfadeClosure }   from './crossfade.js';\r\nimport { settings }           from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../common/playback-events.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-players');\r\n\r\n\r\n// ************************************************************************************************\r\n// Gallery players closure\r\n// ************************************************************************************************\r\n\r\nexport const galleryPlayers = (() =>\r\n{\r\n  let crossfade      = null;\r\n  const mediaPlayers = [];\r\n  const indexMap     = new Map();\r\n  let playerIndex    = 0;\r\n\r\n  return {\r\n    indexMap,\r\n    get crossfade()                 { return crossfade;                            },\r\n    get current()                   { return mediaPlayers[playerIndex];            },\r\n    get next()                      { return mediaPlayers[playerIndex + 1];        },\r\n    setPlayerIndex(nextPlayerIndex) { playerIndex = nextPlayerIndex;               },\r\n    getTrackType()                  { return this.current.getTrackType();          },\r\n    getNumTracks()                  { return mediaPlayers.length;                  },\r\n    getCurrentTrackNum()            { return playerIndex + 1;                      },\r\n    playerFromIframeId(iframeId)    { return mediaPlayers[indexMap.get(iframeId)]; },\r\n    trackNumFromIframeId(iframeId)  { return (indexMap.get(iframeId) + 1);         },\r\n    isCurrent(iframeId)             { return (iframeId === this.current.getIframeId()); },\r\n    init,\r\n    add,\r\n    stop,\r\n    mute,\r\n    getTrackData,\r\n    prevTrack,\r\n    nextTrack,\r\n    gotoTrackNum,\r\n  };\r\n\r\n  function init()\r\n  {\r\n    debug.log('init()');\r\n\r\n    crossfade = crossfadeClosure(this);\r\n\r\n    addListener(EVENT.MEDIA_PLAYING, () => crossfade.start());\r\n    addListener(EVENT.MEDIA_PAUSED,  () => crossfade.stop());\r\n  }\r\n\r\n  function add(player)\r\n  {\r\n    debug.log(player);\r\n\r\n    mediaPlayers.push(player);\r\n    indexMap.set(player.getIframeId(), mediaPlayers.length - 1);\r\n  }\r\n\r\n  function stop()\r\n  {\r\n    this.current.stop();\r\n    crossfade.stop();\r\n  }\r\n\r\n  function mute()\r\n  {\r\n    this.current.mute(settings.playback.masterMute);\r\n    crossfade.mute(settings.playback.masterMute);\r\n  }\r\n\r\n  function getTrackData(positionSeconds = 0)\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrackNum(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      position:     positionSeconds,\r\n      duration:     this.current.getDuration(),\r\n      thumbnail:    { src: this.current.getThumbnailSrc(), class: this.current.getThumbnailClass() },\r\n    };\r\n  }\r\n\r\n  function prevTrack()\r\n  {\r\n    if (playerIndex > 0)\r\n    {\r\n      playerIndex--;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function nextTrack()\r\n  {\r\n    playerIndex++;\r\n\r\n    if (playerIndex < this.getNumTracks())\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  function gotoTrackNum(trackNum)\r\n  {\r\n    if ((trackNum > 0) && (trackNum <= this.getNumTracks()))\r\n    {\r\n      playerIndex = trackNum - 1;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n});\r\n", "//\r\n// List playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as playbackControls  from '../common/playback-controls.js';\r\nimport * as listControls      from './list-controls.js';\r\nimport * as mediaPlayers      from '../common/mediaplayers.js';\r\nimport * as playbackEvents    from '../common/playback-events.js';\r\nimport * as utils             from '../../shared/utils.js';\r\nimport { newDebugLogger }     from '../../shared/debuglogger.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { STATE }              from '../common/element-wrappers.js';\r\nimport { showModal }          from '../../shared/modal.js';\r\nimport { playbackTimer }      from './list-playback-timer.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\nimport { initTrackSearch }    from './track-search.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../common/shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('list-playback');\r\n\r\nconst m = {\r\n  player:            null,\r\n  autoplayData:      null,\r\n  playerReady:       false,\r\n  firstStatePlaying: true,\r\n  currentTrackId:    null,\r\n  currentSnackbarId: 0,\r\n};\r\n\r\nconst noPlayableTracksError = /*html*/ `\r\n  <p>The <b>List Player</b> only supports playing YouTube tracks, SoundCloud tracks will be automatically skipped over.</p>\r\n  <p>SoundCloud tracks must be played using the <b>Gallery Player</b> or by clicking / tapping on the track <b>Artist + Title</b> text link in the <b>List Player</b>.</p>\r\n  <p>To toggle between the <b>Gallery</b> and <b>List</b> players, please use the <b>Pref. Player: GALLERY / LIST</b> setting toggle button in the sites footer area.</p>`;\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  listControls.init(setCurrentTrack);\r\n  initTrackSearch(setCurrentTrack);\r\n\r\n  if (cueInitialTrack() !== null)\r\n  {\r\n    initYouTubeAPI();\r\n  }\r\n  else\r\n  {\r\n    showSnackbar({\r\n      message: 'No playable YouTube tracks!',\r\n      duration: 0,\r\n      actionText: 'help',\r\n      actionClickCallback: () => showModal({ modalTitle: 'No playable tracks', modalBody: noPlayableTracksError }),\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction cueInitialTrack()\r\n{\r\n  m.currentTrackId = listControls.getNextPlayableId();\r\n  m.autoplayData   = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  if (m.currentTrackId !== null)\r\n  {\r\n    if ((m.autoplayData !== null) && (m.autoplayData.trackId !== null))\r\n    {\r\n      const trackElement = listControls.queryTrack(`[data-track-id=\"${m.autoplayData.trackId}\"]`);\r\n\r\n      if (trackElement !== null)\r\n      {\r\n        if (listControls.getTrackType(trackElement) === mediaPlayers.TRACK_TYPE.YOUTUBE)\r\n        {\r\n          m.currentTrackId = trackElement.id;\r\n        }\r\n        else\r\n        {\r\n          showSnackbar({\r\n            message: 'Cannot play SoundCloud track',\r\n            duration: 5,\r\n            actionText: 'help',\r\n            actionClickCallback: () => showModal({ modalTitle: 'Cannot play SoundCloud track', modalBody: noPlayableTracksError }),\r\n          });\r\n        }\r\n      }\r\n      else\r\n      {\r\n        showSnackbar({ message: 'Unable to cue track (not found)', duration: 5 });\r\n      }\r\n    }\r\n\r\n    listControls.setCuedTrack(m.currentTrackId);\r\n  }\r\n\r\n  debug.log(`cueInitialTrack() - currentTrackId: ${m.currentTrackId} - autoplayData: ${(m.autoplayData !== null) ? JSON.stringify(m.autoplayData) : 'N/A'}`);\r\n\r\n  return m.currentTrackId;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction setCurrentTrack(nextTrackId, playTrack = true, isPointerClick = false)\r\n{\r\n  const nextTrackType = listControls.getTrackType(listControls.queryTrackId(nextTrackId));\r\n\r\n  debug.log(`setCurrentTrack() - nextTrackType: ${debug.getKeyForValue(mediaPlayers.TRACK_TYPE, nextTrackType)} - nextTrackId: ${nextTrackId} - playTrack: ${playTrack} - isPointerClick: ${isPointerClick}`);\r\n\r\n  if ((nextTrackType === mediaPlayers.TRACK_TYPE.SOUNDCLOUD) && isPointerClick)\r\n  {\r\n    showSnackbar({\r\n      message: 'Cannot play SoundCloud track',\r\n      duration: 5,\r\n      actionText: 'help',\r\n      actionClickCallback: () => showModal({ modalTitle: 'Cannot play SoundCloud track', modalBody: noPlayableTracksError }),\r\n    });\r\n\r\n    return;\r\n  }\r\n\r\n  if (nextTrackId === m.currentTrackId)\r\n  {\r\n    togglePlayPause();\r\n  }\r\n  else\r\n  {\r\n    if (playbackControls.isPlaying())\r\n      m.player.embedded.stopVideo();\r\n\r\n    m.currentTrackId = nextTrackId;\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { trackId: nextTrackId, isPointerClick: isPointerClick });\r\n    cueOrPlayCurrentTrack(playTrack);\r\n  }\r\n}\r\n\r\nfunction cueOrPlayCurrentTrack(playTrack, positionSeconds = 0)\r\n{\r\n  const sourceUid = listControls.updateTrackDetails();\r\n\r\n  debug.log(`cueOrPlayCurrentTrack(): trackId: ${m.currentTrackId} (${sourceUid}) - playTrack: ${playTrack} - position: ${positionSeconds}`);\r\n\r\n  m.player.resetState();\r\n\r\n  if (playTrack)\r\n  {\r\n    m.player.playTrackById(sourceUid, positionSeconds);\r\n    listControls.setCurrentTrackState(STATE.PLAYING);\r\n  }\r\n  else\r\n  {\r\n    m.player.cueTrackById(sourceUid, positionSeconds);\r\n    listControls.setCurrentTrackState(STATE.PAUSED);\r\n\r\n    if (positionSeconds !== 0)\r\n      playbackControls.updateTimerAndProgress((positionSeconds * 1000), positionSeconds, m.player.getDuration());\r\n  }\r\n\r\n  playbackControls.updateTrackData(positionSeconds);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function play()\r\n{\r\n  m.player.play(onYouTubePlayerError);\r\n}\r\n\r\nexport function pause()\r\n{\r\n  m.player.embedded.pauseVideo();\r\n}\r\n\r\nexport function togglePlayPause()\r\n{\r\n  if (m.currentTrackId === null)\r\n    setCurrentTrack(listControls.queryTrack('div.track-entry.current').id);\r\n  else\r\n    playbackControls.isPlaying() ? pause() : play();\r\n}\r\n\r\nexport function setVolume()\r\n{\r\n  m.player.setVolume(settings.playback.masterVolume);\r\n}\r\n\r\nexport function toggleMute(setMuteSetting = true)\r\n{\r\n  if (setMuteSetting)\r\n    settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n\r\n  if (settings.playback.masterMute)\r\n    m.player.embedded.mute();\r\n  else\r\n    m.player.embedded.unMute();\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  const prevTrackId = listControls.getPrevPlayableId();\r\n  const position    = m.player.embedded.getCurrentTime();\r\n\r\n  if ((prevTrackId !== null) && (position <= 5))\r\n  {\r\n    setCurrentTrack(prevTrackId, playbackControls.isPlaying());\r\n  }\r\n  else if (position !== 0)\r\n  {\r\n    m.player.seekTo(0);\r\n    playbackControls.updateTimerAndProgress(0, 0, m.player.getDuration());\r\n  }\r\n}\r\n\r\nexport function nextTrack()\r\n{\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  if (nextTrackId !== null)\r\n    setCurrentTrack(nextTrackId, playbackControls.isPlaying());\r\n}\r\n\r\nasync function advanceToNextTrack(autoplay = false, isPlaybackError = false)\r\n{\r\n  const repeatMode  = isPlaybackError ? playbackControls.REPEAT.OFF : playbackControls.getRepeatMode();\r\n  const nextTrackId = listControls.getNextPlayableId();\r\n\r\n  debug.log(`advanceToNextTrack() - autoplay: ${autoplay} - isPlaybackError: ${isPlaybackError} - nextTrackId: ${nextTrackId} - repeatMode: ${debug.getKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n  if (autoplay && (repeatMode === playbackControls.REPEAT.ONE))\r\n  {\r\n    m.player.seekTo(0);\r\n    m.player.play(onYouTubePlayerError);\r\n  }\r\n  else if (autoplay && (nextTrackId === null) && (repeatMode === playbackControls.REPEAT.ALL))\r\n  {\r\n    setCurrentTrack(listControls.getNextPlayableId(null)); // getNextPlayableId(null) means the nextTrackId will come from the top of the playlist\r\n    playerScrollTo(0);\r\n  }\r\n  else\r\n  {\r\n    if (nextTrackId === null)\r\n    {\r\n      if (settings.list.showLoadMoreTracks)\r\n      {\r\n        const tracksLoaded = await listControls.loadMoreTracks();\r\n\r\n        if (autoplay && tracksLoaded)\r\n          setCurrentTrack(listControls.getNextPlayableId());\r\n      }\r\n      else\r\n      {\r\n        autoplayNavTo(response.nextPage, autoplay);\r\n      }\r\n    }\r\n    else\r\n    {\r\n      autoplay ? setCurrentTrack(nextTrackId) : listControls.setCurrentTrackState(STATE.PAUSED);\r\n    }\r\n  }\r\n}\r\n\r\nfunction skipToNextTrack()\r\n{\r\n  if (playbackControls.isPlaying() === false)\r\n    advanceToNextTrack(true, true);\r\n}\r\n\r\nfunction stopSkipToNextTrack()\r\n{\r\n  m.currentTrackId = null;\r\n  listControls.setCurrentTrackState(STATE.PAUSED);\r\n}\r\n\r\nexport function getStatus(getCurrentTrackNum = false)\r\n{\r\n  let currentTrackElement = null;\r\n\r\n  (m.currentTrackId !== null)\r\n    ? currentTrackElement = listControls.queryTrackId(m.currentTrackId)\r\n    : currentTrackElement = listControls.queryTrack('div.track-entry.current');\r\n\r\n  if (currentTrackElement !== null)\r\n  {\r\n    let currentTrackIndex = 0;\r\n\r\n    if (getCurrentTrackNum)\r\n    {\r\n      const allTracksList = listControls.queryTrackAll('div.track-entry');\r\n      currentTrackIndex = Array.prototype.indexOf.call(allTracksList, currentTrackElement);\r\n      debug.log(`getStatus() - currentTrackNum: ${currentTrackIndex + 1} - trackId: ${currentTrackElement.getAttribute('data-track-id')}`);\r\n    }\r\n\r\n    return {\r\n      isPlaying:    playbackControls.isPlaying(),\r\n      currentTrack: (currentTrackIndex + 1),\r\n      trackType:    mediaPlayers.TRACK_TYPE.YOUTUBE,\r\n      position:     Math.ceil(m.player.embedded.getCurrentTime()),\r\n      numTracks:    1,\r\n      trackId:      currentTrackElement.getAttribute('data-track-id'),\r\n      elementId:    currentTrackElement.id,\r\n      iframeId:     'youtube-player',\r\n    };\r\n  }\r\n\r\n  return { isPlaying: false, currentTrack: 1, position: 0, trackId: 0 };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n\r\n  window.onYouTubeIframeAPIReady = function()\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n\r\n    // eslint-disable-next-line no-undef\r\n    const embeddedPlayer = new YT.Player('youtube-player',\r\n    {\r\n      events:\r\n      {\r\n        onReady:           onYouTubePlayerReady,\r\n        onStateChange:     onYouTubePlayerStateChange,\r\n        onError:           onYouTubePlayerError,\r\n        onAutoplayBlocked: onYouTubePlayerAutoplayBlocked,\r\n      },\r\n      playerVars: {\r\n        'disablekb': 1,\r\n      },\r\n    });\r\n\r\n    m.player = new mediaPlayers.Playlist(embeddedPlayer);\r\n    debug.log(m.player);\r\n\r\n    playbackControls.init((positionSeconds) => m.player.getTrackData(positionSeconds), (positionSeconds) => m.player.seekTo(positionSeconds));\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 33 });\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady()\r\n{\r\n  debug.log('onYouTubePlayerReady()');\r\n\r\n  playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 66 });\r\n  playbackTimer.ready(m.player);\r\n  listControls.ready(m.player);\r\n\r\n  toggleMute(false);\r\n  m.player.setVolume(settings.playback.masterVolume);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_READY, { resetProgressBar: false });\r\n  cueOrPlayCurrentTrack((m.autoplayData?.autoplay === true), (m.autoplayData?.position ?? 0));\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event)\r\n{\r\n  // eslint-disable-next-line no-undef\r\n  debug.log(`onYouTubePlayerStateChange: ${debug.getKeyForValue(YT.PlayerState, event.data)} (trackId: ${m.currentTrackId})`);\r\n\r\n  // Set playback controls state to YouTube state so we have a single source of truth = playbackControls.isPlaying()\r\n  if (event.data !== YT.PlayerState.PLAYING) // eslint-disable-line no-undef\r\n    playbackControls.setPauseState();\r\n\r\n  switch (event.data)\r\n  {\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.UNSTARTED:\r\n      if (m.playerReady === false)\r\n      {\r\n        m.playerReady = true;\r\n\r\n        if ((m.autoplayData?.position ?? 0) === 0)\r\n          playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, { loadingPercent: 0 });\r\n\r\n        m.autoplayData = null;\r\n      }\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.BUFFERING:\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PLAYING:\r\n      onYouTubeStatePlaying();\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.PAUSED:\r\n      listControls.setCurrentTrackState(STATE.PAUSED);\r\n      break;\r\n\r\n    // eslint-disable-next-line no-undef\r\n    case YT.PlayerState.ENDED:\r\n      playbackTimer.stop();\r\n      playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED);\r\n      advanceToNextTrack(settings.playback.autoplay);\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction onYouTubeStatePlaying()\r\n{\r\n  dismissSnackbar(m.currentSnackbarId);\r\n\r\n  if (m.firstStatePlaying)\r\n  {\r\n    m.firstStatePlaying = false;\r\n\r\n    setTimeout(() =>\r\n    {\r\n      if (settings.playback.autoplay        &&\r\n          playbackControls.isPlaying()      &&\r\n          (Math.round(window.scrollY) <= 1) &&\r\n          utils.matchesMedia(utils.MATCH.SITE_MAX_WIDTH_MOBILE))\r\n      {\r\n        playerScrollTo(0);\r\n      }\r\n    },\r\n    6000);\r\n  }\r\n}\r\n\r\nfunction onYouTubePlayerAutoplayBlocked()\r\n{\r\n  listControls.setCurrentTrackState(STATE.PAUSED);\r\n\r\n  m.currentSnackbarId = showSnackbar({\r\n    message: 'Autoplay blocked, Play to continue',\r\n    duration: 0,\r\n    actionText: 'play',\r\n    actionClickCallback: () => m.player.play(onYouTubePlayerError),\r\n  });\r\n}\r\n\r\nfunction onYouTubePlayerError(event)\r\n{\r\n  debug.log(`onYouTubePlayerError(${event.data}) - trackId: ${m.currentTrackId} - isCued: ${m.player.isCued()}`);\r\n\r\n  m.player.setPlayerError(event.data);\r\n\r\n  if (m.player.isCued() === false)\r\n  {\r\n    listControls.setTrackMessage('Error!');\r\n\r\n    showSnackbar({\r\n      message: 'Unable to play track, skipping to next',\r\n      duration: 5,\r\n      actionText: 'Stop',\r\n      actionClickCallback: stopSkipToNextTrack,\r\n      afterCloseCallback:  skipToNextTrack,\r\n    });\r\n  }\r\n}\r\n", "//\r\n// List playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { PlaybackTimer }            from '../common/playback-timer.js';\r\nimport { EVENT, addListener }       from '../common/playback-events.js';\r\nimport { updateVolumeMuteSettings } from '../common/shared-gallery-list.js';\r\n\r\nimport {\r\n  isPlaying,\r\n  updateTimerAndProgress\r\n} from '../common/playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass ListPlaybackTimer extends PlaybackTimer\r\n{\r\n  #player = null;\r\n\r\n  #update(positionSecondsDecimal, durationSeconds)\r\n  {\r\n    if (positionSecondsDecimal !== undefined)\r\n    {\r\n      const positionSeconds = Math.round(positionSecondsDecimal);\r\n\r\n      updateTimerAndProgress((positionSecondsDecimal * 1000), positionSeconds, durationSeconds);\r\n\r\n      if ((positionSeconds > 0) && (durationSeconds > 0))\r\n        super.updateOncePerSecond(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  ready(player)\r\n  {\r\n    super.init();\r\n    this.#player = player;\r\n    addListener(EVENT.MEDIA_PLAYING, () => super.start());\r\n  }\r\n\r\n  updateTimer()\r\n  {\r\n    if (this.isVisible && isPlaying())\r\n      this.#update(this.#player.embedded.getCurrentTime(), this.#player.getDuration());\r\n  }\r\n\r\n  updateVolumeMute()\r\n  {\r\n    updateVolumeMuteSettings(this.#player.embedded.getVolume(), this.#player.embedded.isMuted());\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new ListPlaybackTimer();\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger } from '../../shared/debuglogger.js';\r\nimport { showSnackbar }   from '../../shared/snackbar.js';\r\nimport { settings }       from '../../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('screen-wakelock');\r\nconst m     = { wakeLock: null };\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initScreenWakeLock()\r\n{\r\n  if (settings.mobile.keepScreenOn)\r\n    document.addEventListener('click', enableScreenWakeLock);\r\n}\r\n\r\nfunction enableScreenWakeLock()\r\n{\r\n  debug.log('enableScreenWakeLock()');\r\n\r\n  document.removeEventListener('click', enableScreenWakeLock);\r\n\r\n  enableWakeLock();\r\n\r\n  document.addEventListener('visibilitychange', () =>\r\n  {\r\n    if ((document.visibilityState === 'visible') && (settings.mobile.keepScreenOn))\r\n      setStateVisible();\r\n  });\r\n}\r\n\r\nfunction setStateVisible()\r\n{\r\n  if (isSupported() && (m.wakeLock === null))\r\n    requestWakeLock();\r\n}\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enableWakeLock()\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      if (await requestWakeLock() !== true)\r\n      {\r\n        debug.log('enableWakeLock(): Screen Wake Lock request failed');\r\n\r\n        showSnackbar({\r\n          message: 'Keep Screen On failed',\r\n          duration: 5,\r\n          actionText: 'Disable',\r\n          actionClickCallback: () => (settings.mobile.keepScreenOn = false),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enableWakeLock(): Screen Wake Lock is not supported');\r\n\r\n    showSnackbar({\r\n      message: 'Keep Screen On is not supported',\r\n      duration: 5,\r\n      actionText: 'Disable',\r\n      actionClickCallback: () => (settings.mobile.keepScreenOn = false),\r\n    });\r\n  }\r\n}\r\n\r\nasync function requestWakeLock()\r\n{\r\n  try\r\n  {\r\n    m.wakeLock = await navigator.wakeLock.request('screen');\r\n  //debug.log('requestWakeLock(): Screen Wake Lock is Enabled');\r\n\r\n    m.wakeLock.addEventListener('release', () =>\r\n    {\r\n    //debug.log('requestWakeLock(): Screen Wake Lock was Released');\r\n      m.wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`requestWakeLock(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as eventLogger       from './common/eventlogger.js';\r\nimport * as galleryPlayback   from './gallery/gallery-playback.js';\r\nimport * as listPlayback      from './list/list-playback.js';\r\nimport * as playbackEvents    from './common/playback-events.js';\r\nimport * as utils             from '../shared/utils.js';\r\nimport * as footerToggles     from '../site/footer-toggles.js';\r\nimport * as shared            from './common/shared-gallery-list.js';\r\nimport { ElementClick }       from '../shared/element-click.js';\r\nimport { showSnackbar }       from '../shared/snackbar.js';\r\nimport { initScreenWakeLock } from './common/screen-wakelock.js';\r\nimport { TRACK_TYPE }         from './common/mediaplayers.js';\r\n\r\nimport {\r\n  showTrackSharePlay,\r\n  showTrackDetails,\r\n} from './common/track-modals.js';\r\n\r\nimport {\r\n  newDebugLogger,\r\n  measureStartupExecutionTime,\r\n} from '../shared/debuglogger.js';\r\n\r\nimport {\r\n  SINGLE_TRACK,\r\n  isSingleTrackFetch,\r\n  isSingleTrackLoading,\r\n  cueOrPlaySingleTrack,\r\n} from './gallery/single-track-fetch.js';\r\n\r\nimport {\r\n  setPlaybackControlsCss,\r\n  toggleRepeat,\r\n} from './common/playback-controls.js';\r\n\r\nimport {\r\n  response,\r\n  settings,\r\n  getSessionData,\r\n} from '../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = newDebugLogger('playback-interaction');\r\nconst eventLog = new eventLogger.Interaction(10);\r\n\r\nconst m = {\r\n  player:             null,\r\n  isPlaybackReady:    false,\r\n  siteNavUiElements:  null,\r\n  trackNavUiElements: null,\r\n  keyboardShortcuts:  null,\r\n  broadcastChannel:   null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{\r\n  measureStartupExecutionTime();\r\n\r\n  debug.log('DOMContentLoaded');\r\n\r\n  getSessionData();\r\n\r\n  if (shared.hasGalleryPlayer())\r\n    m.player = galleryPlayback;\r\n  else if (shared.hasListPlayer())\r\n    m.player = listPlayback;\r\n\r\n  if (m.player !== null)\r\n    initCommon();\r\n\r\n  footerToggles.init(m.player?.getStatus);\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction initCommon()\r\n{\r\n  debug.log('initCommon()');\r\n\r\n  // Set user settings CSS with JS as early as possible...\r\n  setPlaybackControlsCss();\r\n\r\n  // Must be done before player.init() since events are used to relay player status updates\r\n  initPlaybackEvents();\r\n\r\n  m.player.init();\r\n  m.siteNavUiElements  = new siteNavUiElements('#site-navigation');\r\n  m.trackNavUiElements = new trackNavUiElements('nav.single-track-nav .nav-links');\r\n\r\n  shared.fullscreenElement.init();\r\n  m.keyboardShortcuts = utils.keyboardShortcuts(settings.playback.keyboardShortcuts);\r\n  m.broadcastChannel  = new BroadcastChannel('playbackStatus');\r\n\r\n  initListeners();\r\n  initScreenWakeLock();\r\n}\r\n\r\nfunction initPlaybackEvents()\r\n{\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY,       playbackEventPlaybackReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING,        () => m.broadcastChannel.postMessage(playbackEvents.EVENT.MEDIA_PLAYING));\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_CUE_TRACK,      playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PREV_TRACK,     () => cueOrPlayPrevNextTrack(null, SINGLE_TRACK.PREV, response.prevPage));\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_NEXT_TRACK,     () => cueOrPlayPrevNextTrack(null, SINGLE_TRACK.NEXT, response.nextPage));\r\n}\r\n\r\nfunction initListeners()\r\n{\r\n  utils.addListener('.playback-shuffle-control span', 'click', shared.shuffleClickNavTo);\r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  document.addEventListener('keydown', documentEventMediaKeyDown);\r\n\r\n  // Ensures that blur event is triggered on first iframe click / focus\r\n  window.focus();\r\n\r\n  // If an iframe is clicked / focused, set focus back to parent document to handle all input events etc.\r\n  window.addEventListener('blur', () =>\r\n  {\r\n    // setTimeout(250) = Yield, needed for Firefox to update document.activeElement\r\n    setTimeout(() =>\r\n    {\r\n      if (document.activeElement instanceof HTMLIFrameElement) {\r\n        window.focus();\r\n      }\r\n    }, 250);\r\n  });\r\n\r\n  m.broadcastChannel.addEventListener('message', (event) =>\r\n  {\r\n    debug.log(`broadcastChannel('playbackStatus') message: ${event.data}`);\r\n\r\n    if ((event.data === playbackEvents.EVENT.MEDIA_PLAYING) && settings.playback.pauseOnPlayerChange)\r\n      m.player.pause();\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Regular keyboard events handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady           &&\r\n      m.keyboardShortcuts.allow() &&\r\n      (event.ctrlKey === false)   &&\r\n      (event.altKey  === false))\r\n  {\r\n    // Events that need event.repeat goes here\r\n    switch (event.key)\r\n    {\r\n      case '+':\r\n      case '-':\r\n        onKeysVolumeChange(event);\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n        if (event.shiftKey)\r\n        {\r\n          onKeysVolumeChange(event);\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (event.repeat === false)\r\n    {\r\n      switch (event.code)\r\n      {\r\n        case 'Backquote':\r\n          event.preventDefault();\r\n          shared.playerScrollTo(m.player.getStatus().elementId);\r\n          break;\r\n      }\r\n\r\n      switch (event.key)\r\n      {\r\n        case ' ':\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n          break;\r\n\r\n        case 'Home':\r\n        case 'End':\r\n        case 'PageUp':\r\n        case 'PageDown':\r\n          shared.playerOnKeysScroll(event);\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n          onKeyArrowLeft(event);\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n          onKeyArrowRight(event);\r\n          break;\r\n\r\n        case 'A':\r\n          footerToggles.autoplay.toggle();\r\n          break;\r\n\r\n        case 'f':\r\n        case 'F':\r\n          event.preventDefault();\r\n          shared.fullscreenElement.toggle(document.getElementById(m.player.getStatus().iframeId));\r\n          break;\r\n\r\n        case 'i':\r\n          event.preventDefault();\r\n          showTrackDetails(document.getElementById(m.player.getStatus().elementId));\r\n          break;\r\n\r\n        case 'I':\r\n          event.preventDefault();\r\n          showTrackSharePlay(document.getElementById(m.player.getStatus().elementId));\r\n          break;\r\n\r\n        case 'm':\r\n        case 'M':\r\n          event.preventDefault();\r\n          m.player.toggleMute();\r\n          showSnackbar({ message: (settings.playback.masterMute ? '<b>Muted</b> (<b>m</b> to Unmute)' : '<b>Unmuted</b> (<b>m</b> to Mute)'), duration: 3 });\r\n          break;\r\n\r\n        case 'p':\r\n        case 'P':\r\n          footerToggles.playerType.toggle();\r\n          break;\r\n\r\n        case 'r':\r\n        case 'R':\r\n          showSnackbar({ message: `${toggleRepeat().title} (<b>r</b> to change)`, duration: 3 });\r\n          break;\r\n\r\n        case 'x':\r\n        case 'X':\r\n          footerToggles.crossfade.toggle();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard media keys event handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventMediaKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady && m.keyboardShortcuts.allow()) // && (event.repeat  === false)) does not function as expected on Firefox\r\n  {\r\n    switch (event.key)\r\n    {\r\n      case 'MediaPlayPause':\r\n        if (playbackEvents.hasPlaybackStarted === false)\r\n        {\r\n          debug.log('documentEventMediaKeyDown(): MediaPlayPause');\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n        }\r\n        break;\r\n\r\n      case 'MediaTrackPrevious':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackPrevious');\r\n        event.preventDefault();\r\n        m.player.prevTrack();\r\n        break;\r\n\r\n      case 'MediaTrackNext':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackNext');\r\n        event.preventDefault();\r\n        m.player.nextTrack();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard event handlers\r\n// ************************************************************************************************\r\n\r\nfunction onKeyArrowLeft(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    cueOrPlayPrevNextTrack(null, SINGLE_TRACK.PREV, response.prevPage);\r\n  else\r\n    m.player.prevTrack();\r\n}\r\n\r\nfunction onKeyArrowRight(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    cueOrPlayPrevNextTrack(null, SINGLE_TRACK.NEXT, response.nextPage);\r\n  else\r\n    m.player.nextTrack();\r\n}\r\n\r\nfunction cueOrPlayPrevNextTrack(event, prevNextTrack, prevNextPage)\r\n{\r\n  event?.preventDefault();\r\n\r\n  if (isSingleTrackFetch())\r\n  {\r\n    if (m.player.getStatus().trackType === TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if (isSingleTrackLoading() === false)\r\n        cueOrPlaySingleTrack(prevNextTrack, m.player.getStatus().isPlaying);\r\n      else\r\n        showSnackbar({ message: 'Loading track, please wait...', duration: 3 });\r\n    }\r\n    else\r\n    {\r\n      prevNextNavTo(null, prevNextPage);\r\n    }\r\n  }\r\n  else\r\n  {\r\n    prevNextNavTo(null, prevNextPage);\r\n  }\r\n}\r\n\r\nfunction onKeysVolumeChange(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  settings.playback.masterVolume = ((event.key === '+') || (event.key === 'ArrowUp'))\r\n    ? (settings.playback.masterVolume < 100) ? (settings.playback.masterVolume + 5) : 100\r\n    : (settings.playback.masterVolume > 5  ) ? (settings.playback.masterVolume - 5) : 5;\r\n\r\n  m.player.setVolume();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventPlaybackReady()\r\n{\r\n  utils.addListener('.playback-details-control',   'click', playbackDetailsClick);\r\n  utils.addListener('.playback-thumbnail-control', 'click', playbackThumbnailClick);\r\n  utils.addListener('.playback-timer-control',     'click', playbackTimerClick);\r\n  m.isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  const isGalleryPlayerMultipleTracks = (shared.isGalleryPlayer() && (m.player.getStatus().numTracks > 1));\r\n\r\n  if (settings.playback.autoExitFullscreen || isGalleryPlayerMultipleTracks)\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  const isTimeRemainingBelowThreshold = (playbackEvent.data.timeRemainingSeconds <= settings.playback.timeRemainingSeconds);\r\n\r\n  if (settings.playback.autoExitFsOnWarning && isTimeRemainingBelowThreshold)\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick()\r\n{\r\n  shared.playerScrollTo(m.player.getStatus().elementId);\r\n}\r\n\r\nfunction playbackThumbnailClick()\r\n{\r\n  if (shared.isGalleryPlayer())\r\n  {\r\n    eventLog.add(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK);\r\n\r\n    if (eventLog.doubleClicked(eventLogger.SOURCE.MOUSE, eventLogger.EVENT.MOUSE_CLICK, 500))\r\n      shared.fullscreenElement.enter(document.getElementById(m.player.getStatus().iframeId));\r\n  }\r\n  else if (shared.isListPlayer())\r\n  {\r\n    shared.playerScrollTo(0);\r\n  }\r\n}\r\n\r\nfunction playbackTimerClick()\r\n{\r\n  footerToggles.autoplay.toggle();\r\n}\r\n\r\nclass siteNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('a.navbar-prev-link'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.PREV, response.prevPage);\r\n\r\n    if (this.clicked('a.navbar-next-link'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nclass trackNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('div.nav-previous a'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.PREV, response.prevPage);\r\n\r\n    if (this.clicked('div.nav-next a'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  shared.autoplayNavTo(destUrl, m.player.getStatus().isPlaying);\r\n}\r\n"],
  "mappings": "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",
  "names": ["debug", "newDebugLogger", "SOURCE", "EVENT", "entry", "EventLog", "#log", "#maxEntries", "#matchCount", "#lastPos", "maxEntries", "eventSource", "eventType", "uId", "timestamp", "logEntry", "index", "elements", "delta", "matchCount", "event", "entries", "i", "data", "Interaction", "deltaTime", "Playback", "gallery_playback_exports", "__export", "getStatus", "init", "nextTrack", "pause", "play", "prevTrack", "setVolume", "toggleMute", "togglePlayPause", "PlaybackTimer", "#intervalId", "#lastPosSeconds", "timeRemainingWarningBlink", "positionSeconds", "durationSeconds", "settings", "remainingSeconds", "dispatch", "EVENT", "GalleryPlaybackTimer", "PlaybackTimer", "#players", "#crossfadeInit", "#updateCallback", "positionMilliseconds", "durationSeconds", "positionSeconds", "updateTimerAndProgress", "#updateAutoCrossfade", "#isAutoCrossfade", "settings", "TYPE", "players", "crossfadeInit", "position", "duration", "volume", "updateVolumeMuteSettings", "playbackTimer", "debug", "newDebugLogger", "eventLog", "Playback", "m", "config", "init", "players", "playbackState", "embeddedEventHandler", "initYouTubeAPI", "initSoundCloudAPI", "getLoadingPercent", "updatePlayersReady", "EVENT", "dispatch", "getAllPlayers", "elements", "element", "trackType", "iframe", "player", "TRACK_TYPE", "getYouTubePlayer", "embeddedPlayer", "SoundCloud", "onSoundCloudPlayerEventReady", "onSoundCloudPlayerEventPlay", "onSoundCloudPlayerEventPause", "onSoundCloudPlayerEventFinish", "onSoundCloudPlayerEventError", "playerId", "isSingleTrackPlayer", "videoId", "event", "onYouTubePlayerReady", "onYouTubePlayerStateChange", "onYouTubePlayerError", "YouTube", "onPlayerError", "mediaUrl", "eventSource", "SOURCE", "getPlayerErrorData", "artist", "title", "tag", "firstScriptTag", "iframeId", "onYouTubeStateUnstarted", "onYouTubeStateBuffering", "onYouTubeStatePlaying", "onYouTubeStatePaused", "onYouTubeStateCued", "onYouTubeStateEnded", "settings", "playbackTimer", "durationMilliseconds", "positionMilliseconds", "debug", "newDebugLogger", "m", "config", "init", "addListener", "EVENT", "mediaPlaying", "mediaPaused", "mediaEnded", "mediaCueTrack", "continueAutoplay", "resumeAutoplay", "autoplayBlocked", "playbackBlocked", "mediaUnavailable", "playbackEvent", "dismissSnackbar", "nowPlayingIcon", "resetNowPlayingIcons", "replaceClass", "settings", "playerScrollTo", "isSingleTrackFetch", "TRACK_TYPE", "cueOrPlaySingleTrack", "SINGLE_TRACK", "autoplayNavTo", "response", "autoplayData", "KEY", "iframeId", "showSnackbar", "playbackEventErrorTryNext", "nowPlayingElement", "element", "debug", "newDebugLogger", "m", "ctrl", "config", "init", "mediaPlayers", "crossfadeClickCallback", "UiElements", "ElementsWrapper", "element", "setCrossfadePreset", "settings", "addListener", "EVENT", "playbackReady", "crossfadePresetClick", "replaceClass", "STATE", "crossfadeToClick", "updateCrossfadeToState", "ElementClick", "showTrackSharePlay", "showTrackDetails", "linkClickUsePrefPlayer", "index", "presetList", "event", "isPlaying", "iframe", "isPlayingState", "currentTrack", "debug", "newDebugLogger", "galleryPlayers", "crossfade", "mediaPlayers", "indexMap", "playerIndex", "nextPlayerIndex", "iframeId", "init", "add", "stop", "mute", "getTrackData", "prevTrack", "nextTrack", "gotoTrackNum", "crossfadeClosure", "addListener", "EVENT", "player", "settings", "positionSeconds", "trackNum", "debug", "newDebugLogger", "m", "config", "init", "eventLog", "galleryPlayers", "positionSeconds", "seekClick", "crossfadeToClick", "playbackTimer", "crossfadeInit", "playbackState", "embeddedEventHandler", "play", "setPlayState", "onPlayerError", "pause", "setPauseState", "togglePlayPause", "isPlaying", "prevTrack", "positionMilliseconds", "updateTimerAndProgress", "playCurrentTrack", "dispatch", "EVENT", "nextTrack", "isMediaEnded", "isLastTrack", "settings", "repeatPlayback", "repeatMode", "getRepeatMode", "REPEAT", "setVolume", "toggleMute", "cueOrPlayTrackById", "iframeId", "autoplayData", "scrollToMedia", "updateTrackData", "playMedia", "skipToTrack", "trackNum", "SOURCE", "resumeAutoplay", "cueOrPlaySingleTrackById", "trackData", "thumbnailData", "updateProgressPercent", "getStatus", "getCurrentPosition", "status", "fadeInUid", "crossfadePreset", "TYPE", "crossfadeType", "crossfadeInUid", "embeddedEvent", "embeddedEventData", "ready", "singleTrackFetchReady", "STATE", "syncRecursive", "nextPlayerUid", "syncState", "list_playback_exports", "__export", "getStatus", "init", "nextTrack", "pause", "play", "prevTrack", "setVolume", "toggleMute", "togglePlayPause", "ListPlaybackTimer", "PlaybackTimer", "#player", "#update", "positionSecondsDecimal", "durationSeconds", "positionSeconds", "updateTimerAndProgress", "player", "addListener", "EVENT", "isPlaying", "updateVolumeMuteSettings", "playbackTimer", "debug", "newDebugLogger", "m", "noPlayableTracksError", "init", "setCurrentTrack", "initTrackSearch", "cueInitialTrack", "initYouTubeAPI", "showSnackbar", "showModal", "getNextPlayableId", "KEY", "trackElement", "queryTrack", "getTrackType", "TRACK_TYPE", "setCuedTrack", "nextTrackId", "playTrack", "isPointerClick", "nextTrackType", "queryTrackId", "togglePlayPause", "isPlaying", "dispatch", "EVENT", "cueOrPlayCurrentTrack", "positionSeconds", "sourceUid", "updateTrackDetails", "setCurrentTrackState", "STATE", "updateTimerAndProgress", "updateTrackData", "play", "onYouTubePlayerError", "pause", "setVolume", "settings", "toggleMute", "setMuteSetting", "prevTrack", "prevTrackId", "getPrevPlayableId", "position", "nextTrack", "advanceToNextTrack", "autoplay", "isPlaybackError", "repeatMode", "REPEAT", "getRepeatMode", "playerScrollTo", "tracksLoaded", "loadMoreTracks", "autoplayNavTo", "response", "skipToNextTrack", "stopSkipToNextTrack", "getStatus", "getCurrentTrackNum", "currentTrackElement", "currentTrackIndex", "allTracksList", "queryTrackAll", "embeddedPlayer", "onYouTubePlayerReady", "onYouTubePlayerStateChange", "onYouTubePlayerAutoplayBlocked", "Playlist", "tag", "firstScriptTag", "ready", "playbackTimer", "event", "setPauseState", "onYouTubeStatePlaying", "dismissSnackbar", "matchesMedia", "MATCH", "setTrackMessage", "debug", "newDebugLogger", "m", "initScreenWakeLock", "settings", "enableScreenWakeLock", "enableWakeLock", "setStateVisible", "isSupported", "requestWakeLock", "showSnackbar", "exception", "debug", "newDebugLogger", "eventLog", "Interaction", "m", "measureStartupExecutionTime", "getSessionData", "hasGalleryPlayer", "gallery_playback_exports", "hasListPlayer", "list_playback_exports", "initCommon", "init", "setPlaybackControlsCss", "initPlaybackEvents", "siteNavUiElements", "trackNavUiElements", "fullscreenElement", "keyboardShortcuts", "settings", "initListeners", "initScreenWakeLock", "addListener", "EVENT", "playbackEventPlaybackReady", "playbackEventMediaEnded", "playbackEventMediaTimeRemaining", "cueOrPlayPrevNextTrack", "SINGLE_TRACK", "response", "shuffleClickNavTo", "documentEventKeyDown", "documentEventMediaKeyDown", "event", "onKeysVolumeChange", "playerScrollTo", "playerOnKeysScroll", "onKeyArrowLeft", "onKeyArrowRight", "autoplay", "showTrackDetails", "showTrackSharePlay", "showSnackbar", "playerType", "toggleRepeat", "crossfade", "hasPlaybackStarted", "prevNextTrack", "prevNextPage", "isSingleTrackFetch", "TRACK_TYPE", "isSingleTrackLoading", "cueOrPlaySingleTrack", "prevNextNavTo", "playbackDetailsClick", "playbackThumbnailClick", "playbackTimerClick", "isGalleryPlayerMultipleTracks", "isGalleryPlayer", "playbackEvent", "isTimeRemainingBelowThreshold", "SOURCE", "isListPlayer", "ElementClick", "destUrl", "autoplayNavTo"]
}
