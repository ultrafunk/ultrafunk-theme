{
  "version": 3,
  "sources": ["../../src/playback/gallery/gallery-playback.js", "../../src/playback/gallery/gallery-playback-timer.js", "../../src/playback/gallery/embedded-players.js", "../../src/playback/gallery/gallery-players.js", "../../src/playback/gallery/gallery-events.js", "../../src/playback/gallery/gallery-controls.js", "../../src/playback/common/screen-wakelock.js", "../../src/playback/interaction.js"],
  "sourcesContent": ["//\r\n// Gallery playback module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as playbackEvents       from '../common/playback-events.js';\r\nimport * as playbackControls     from '../common/playback-controls.js';\r\nimport { newDebugLogger }        from '../../shared/debuglogger.js';\r\nimport { playbackTimer }         from './gallery-playback-timer.js';\r\nimport { GalleryPlayers }        from './gallery-players.js';\r\nimport { CROSSFADE_TYPE }        from './crossfade.js';\r\nimport { settings }              from '../../shared/session-data.js';\r\nimport { singleTrackFetchReady } from './single-track-fetch.js';\r\nimport { initGalleryEvents }     from './gallery-events.js';\r\nimport { initGalleryControls }   from './gallery-controls.js';\r\n\r\nimport {\r\n  eventLog as embeddedPlayersEventLog,\r\n  initEmbeddedPlayers,\r\n} from './embedded-players.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-playback');\r\n\r\nconst m = {\r\n  eventLog: null,\r\n  players:  {},\r\n};\r\n\r\nconst config = {\r\n  minCrossfadeToTime: 5,   // Shortest allowed track to track fade time\r\n  maxBufferingDelay:  3,   // VERY rough estimate of \"max\" network buffering delay in seconds\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Init\r\n// ************************************************************************************************\r\n\r\nexport function init()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.eventLog = embeddedPlayersEventLog;\r\n\r\n  initGalleryEvents();\r\n\r\n  m.players = new GalleryPlayers();\r\n\r\n  playbackControls.init((positionSeconds) => m.players.getTrackData(positionSeconds), seekClick);\r\n  initGalleryControls(m.players, crossfadeToClick);\r\n  playbackTimer.init(m.players, crossfadeInit);\r\n  initEmbeddedPlayers(m.players, playbackState);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls click handlers + state\r\n// ************************************************************************************************\r\n\r\nexport function play()\r\n{\r\n  playbackControls.setPlayState();\r\n  m.players.current.play();\r\n}\r\n\r\nexport function pause()\r\n{\r\n  playbackControls.setPauseState();\r\n  m.players.current.pause();\r\n}\r\n\r\nexport function togglePlayPause()\r\n{\r\n  playbackControls.isPlaying() ? pause() : play();\r\n}\r\n\r\nexport function prevTrack()\r\n{\r\n  debug.log(`prevTrack() - prevTrack: ${m.players.getCurrentTrackNum() - 1} - numTracks: ${m.players.getNumTracks()}`);\r\n\r\n  if (m.players.getCurrentTrackNum() > 0)\r\n  {\r\n    m.players.current.getPosition((positionMilliseconds) =>\r\n    {\r\n      if (positionMilliseconds > 5000)\r\n      {\r\n        m.players.current.seekTo(0);\r\n        playbackControls.updateTimerAndProgress(0, 0, m.players.current.getDuration());\r\n      }\r\n      else\r\n      {\r\n        if (m.players.getCurrentTrackNum() > 1)\r\n          m.players.stop();\r\n\r\n        if (m.players.prevTrack())\r\n          playCurrentTrack(playbackControls.isPlaying());\r\n        else\r\n          playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PREV_TRACK);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function nextTrack(isMediaEnded = false)\r\n{\r\n  const isLastTrack = ((m.players.getCurrentTrackNum() + 1) > m.players.getNumTracks());\r\n\r\n  debug.log(`nextTrack() - isMediaEnded: ${isMediaEnded} - isLastTrack: ${isLastTrack} - autoplay: ${settings.playback.autoplay}`);\r\n\r\n  if (repeatPlayback(isMediaEnded, isLastTrack))\r\n    return;\r\n\r\n  if (isLastTrack === false)\r\n  {\r\n    m.players.stop();\r\n\r\n    if (isMediaEnded && (settings.playback.autoplay === false))\r\n    {\r\n      playbackControls.setPauseState();\r\n    }\r\n    else\r\n    {\r\n      if (m.players.nextTrack())\r\n        playCurrentTrack(playbackControls.isPlaying());\r\n    }\r\n  }\r\n  else if ((isLastTrack === true) && (isMediaEnded === false))\r\n  {\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_NEXT_TRACK);\r\n  }\r\n  else if (isMediaEnded)\r\n  {\r\n    playbackControls.setPauseState();\r\n\r\n    if (settings.playback.autoplay)\r\n      playbackEvents.dispatch(playbackEvents.EVENT.CONTINUE_AUTOPLAY, { trackType: m.players.current.getTrackType() });\r\n    else\r\n      m.players.stop();\r\n  }\r\n}\r\n\r\nfunction repeatPlayback(isMediaEnded, isLastTrack)\r\n{\r\n  if (isMediaEnded && settings.playback.autoplay)\r\n  {\r\n    const repeatMode = playbackControls.getRepeatMode();\r\n\r\n    debug.log(`repeatPlayback(): ${debug.getKeyForValue(playbackControls.REPEAT, repeatMode)}`);\r\n\r\n    if (repeatMode === playbackControls.REPEAT.ONE)\r\n    {\r\n      m.players.current.seekTo(0);\r\n      play();\r\n      return true;\r\n    }\r\n    else if (isLastTrack && (repeatMode === playbackControls.REPEAT.ALL))\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(0);\r\n      playCurrentTrack(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction seekClick(positionSeconds)\r\n{\r\n  m.players.current.seekTo(positionSeconds);\r\n}\r\n\r\nexport function setVolume()\r\n{\r\n  m.players.current.setVolume(settings.playback.masterVolume);\r\n}\r\n\r\nexport function toggleMute()\r\n{\r\n  settings.playback.masterMute = (settings.playback.masterMute === true) ? false : true;\r\n  m.players.mute();\r\n}\r\n\r\nfunction cueOrPlayTrackById(iframeId, autoplayData, scrollToMedia = true)\r\n{\r\n  debug.log(`cueOrPlayTrackById() - iframeId: ${iframeId} - autoplay: ${autoplayData.autoplay} - position: ${autoplayData.position}`);\r\n\r\n  m.players.setPlayerIndex(m.players.indexMap.get(iframeId));\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n\r\n  if (autoplayData.autoplay)\r\n  {\r\n    m.players.current.playTrackById(autoplayData.position);\r\n  }\r\n  else\r\n  {\r\n    m.players.current.cueTrackById(autoplayData.position);\r\n\r\n    if (autoplayData.position !== 0)\r\n      playbackControls.updateTimerAndProgress((autoplayData.position * 1000), autoplayData.position, m.players.current.getDuration());\r\n  }\r\n\r\n  playbackControls.updateTrackData(autoplayData.position);\r\n}\r\n\r\nfunction playCurrentTrack(playMedia, scrollToMedia = true)\r\n{\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_CUE_TRACK, { scrollToMedia: scrollToMedia, trackId: m.players.current.getTrackId() });\r\n  if (playMedia) play();\r\n  playbackControls.updateTrackData();\r\n}\r\n\r\nfunction skipToTrack(trackNum, playMedia = true)\r\n{\r\n  debug.log(`skipToTrack() - trackNum: ${trackNum} - playMedia: ${playMedia}`);\r\n\r\n  if ((playMedia === true) && (playbackControls.isPlaying() === false))\r\n  {\r\n    m.eventLog.add(m.eventLog.SOURCE.ULTRAFUNK, m.eventLog.EVENT.RESUME_AUTOPLAY);\r\n\r\n    if (m.players.gotoTrackNum(trackNum))\r\n      playCurrentTrack(playMedia);\r\n  }\r\n}\r\n\r\nfunction resumeAutoplay(autoplayData = null, iframeId = null)\r\n{\r\n  if ((autoplayData !== null) && (iframeId !== null))\r\n  {\r\n    if (autoplayData.autoplay)\r\n      m.eventLog.add(m.eventLog.SOURCE.ULTRAFUNK, m.eventLog.EVENT.RESUME_AUTOPLAY);\r\n\r\n    cueOrPlayTrackById(iframeId, autoplayData);\r\n  }\r\n  else if ((autoplayData !== null) && (autoplayData.autoplay))\r\n  {\r\n    debug.log(`resumeAutoplay(): Play first track`);\r\n    m.eventLog.add(m.eventLog.SOURCE.ULTRAFUNK, m.eventLog.EVENT.RESUME_AUTOPLAY);\r\n    play();\r\n  }\r\n  else\r\n  {\r\n    debug.log(`resumeAutoplay(): Cue first track`);\r\n    playbackControls.updateTrackData();\r\n  }\r\n}\r\n\r\nfunction cueOrPlaySingleTrackById(trackData, thumbnailData, playMedia = false)\r\n{\r\n  debug.log(`cueOrPlaySingleTrackById() - playMedia: ${playMedia}`);\r\n\r\n  m.players.current.setIsCued(false);\r\n  m.players.current.setIsPlayable(true);\r\n  m.players.current.setSourceUid(thumbnailData.uid);\r\n  m.players.current.setArtistAndTitle(trackData.track_artist, trackData.track_title);\r\n  m.players.current.setDuration(parseInt(trackData.track_duration));\r\n  m.players.current.setThumbnail(thumbnailData);\r\n\r\n  playbackControls.updateProgressPercent(0);\r\n  playbackControls.updateTrackData();\r\n\r\n  if (playMedia)\r\n    m.players.current.playTrackById();\r\n  else\r\n    m.players.current.cueTrackById();\r\n}\r\n\r\nexport function getStatus(getCurrentPosition = false)\r\n{\r\n  const status = {\r\n    isPlaying:      playbackControls.isPlaying(),\r\n    currentTrack:   m.players.getCurrentTrackNum(),\r\n    trackType:      m.players.current.getTrackType(),\r\n    position:       0,\r\n    numTracks:      m.players.getNumTracks(),\r\n    trackId:        m.players.current.getTrackId(),\r\n    trackElementId: m.players.current.getTrackId(),\r\n    playerId:       m.players.current.getIframeId(),\r\n  };\r\n\r\n  if (getCurrentPosition)\r\n  {\r\n    return new Promise((resolve) =>\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        status.position = Math.round(positionMilliseconds / 1000);\r\n        resolve(status);\r\n      });\r\n    });\r\n  }\r\n\r\n  return status;\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Track to Track crossfade click handler + crossfade init helper functions\r\n// ************************************************************************************************\r\n\r\nfunction crossfadeToClick(fadeInUid, crossfadePreset)\r\n{\r\n  if ((m.players.isCurrent(fadeInUid) === false) && (m.players.current.getDuration() > 0))\r\n  {\r\n    debug.log(`crossfadeToClick():\r\n      fadeOut: ${m.players.current.getArtist()} - \"${m.players.current.getTitle()}\" (${m.players.current.getIframeId()})\r\n      fadeIn.: ${m.players.playerFromIframeId(fadeInUid).getArtist()} - \"${m.players.playerFromIframeId(fadeInUid).getTitle()}\" (${fadeInUid})`);\r\n\r\n    if ((settings.playback.masterMute === false) && (settings.playback.autoplay === false))\r\n    {\r\n      m.players.current.getPosition((positionMilliseconds) =>\r\n      {\r\n        const timeRemaining = m.players.current.getDuration() - (positionMilliseconds / 1000);\r\n\r\n        if (timeRemaining >= (config.minCrossfadeToTime + config.maxBufferingDelay))\r\n          crossfadeInit(CROSSFADE_TYPE.TRACK, crossfadePreset, fadeInUid);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction crossfadeInit(crossfadeType, crossfadePreset, crossfadeInUid = null)\r\n{\r\n  m.eventLog.add(m.eventLog.SOURCE.ULTRAFUNK, m.eventLog.EVENT.CROSSFADE_START);\r\n\r\n  if (m.players.crossfade.init(crossfadeType, crossfadePreset, crossfadeInUid))\r\n  {\r\n    if (crossfadeInUid === null)\r\n    {\r\n      if (m.players.nextTrack())\r\n        playCurrentTrack(true);\r\n    }\r\n    else\r\n    {\r\n      if (m.players.gotoTrackNum(m.players.trackNumFromIframeId(crossfadeInUid)))\r\n        playCurrentTrack(true, false);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Proxy functions for embedded-players playbackEvents.dispatch()\r\n// ************************************************************************************************\r\n\r\nexport function onEmbeddedPlayersReady()\r\n{\r\n  debug.log('onEmbeddedPlayersReady()');\r\n  playbackControls.ready(prevTrack, togglePlayPause, nextTrack, toggleMute);\r\n  singleTrackFetchReady(cueOrPlaySingleTrackById);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_READY, { resetProgressBar: true });\r\n  playbackEvents.dispatch(playbackEvents.EVENT.RESUME_AUTOPLAY, null, { 'resumeAutoplay': resumeAutoplay });\r\n}\r\n\r\nexport function onMediaEnded()\r\n{\r\n  debug.log('onMediaEnded()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_ENDED, getStatus());\r\n  nextTrack(true);\r\n}\r\n\r\nexport function onAutoplayBlocked()\r\n{\r\n  debug.log('onAutoplayBlocked()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.AUTOPLAY_BLOCKED, null, { 'play': play });\r\n}\r\n\r\nexport function onMediaUnavailable(errorData)\r\n{\r\n  debug.log('onMediaUnavailable()');\r\n  debug.log(errorData);\r\n  playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_UNAVAILABLE, errorData, { 'skipToTrack': skipToTrack });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Playback controls and embedded players state sync module\r\n// ************************************************************************************************\r\n\r\nconst playbackState = (() =>\r\n{\r\n  const STATE = {\r\n    PLAY:  1,\r\n    PAUSE: 2,\r\n  };\r\n\r\n  const sync = function syncRecursive(nextPlayerUid, syncState)\r\n  {\r\n    debug.log(`playbackState.sync() - previousTrack: ${m.players.getCurrentTrackNum()} - nextTrack: ${m.players.indexMap.get(nextPlayerUid) + 1} - syncState: ${debug.getKeyForValue(STATE, syncState)}`);\r\n\r\n    if (m.players.isCurrent(nextPlayerUid))\r\n    {\r\n      if (syncState === STATE.PLAY)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PLAYING, getStatus());\r\n      }\r\n      else if (syncState === STATE.PAUSE)\r\n      {\r\n        playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_PAUSED, getStatus());\r\n      }\r\n    }\r\n    else\r\n    {\r\n      m.players.stop();\r\n      m.players.setPlayerIndex(m.players.indexMap.get(nextPlayerUid));\r\n      playbackControls.updateTrackData();\r\n      syncRecursive(nextPlayerUid, syncState);\r\n    }\r\n  };\r\n\r\n  return {\r\n    STATE,\r\n    sync,\r\n  };\r\n})();\r\n", "//\r\n// Gallery playback timer child class\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { settings }       from '../../shared/session-data.js';\r\nimport { PlaybackTimer }  from '../common/playback-timer.js';\r\nimport { CROSSFADE_TYPE } from './crossfade.js';\r\nimport { updateVolumeMuteSettings } from '../common/shared-gallery-list.js';\r\n\r\nimport {\r\n  isPlaying,\r\n  updateTimerAndProgress,\r\n} from '../common/playback-controls.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nclass GalleryPlaybackTimer extends PlaybackTimer\r\n{\r\n  #players       = null;\r\n  #crossfadeInit = null;\r\n\r\n  #updateCallback(positionMilliseconds, durationSeconds = 0)\r\n  {\r\n    const positionSeconds = Math.round(positionMilliseconds / 1000);\r\n\r\n    updateTimerAndProgress(positionMilliseconds, positionSeconds, durationSeconds);\r\n\r\n    if ((positionSeconds > 0) && (durationSeconds > 0))\r\n    {\r\n      super.updateOncePerSecond(positionSeconds, durationSeconds);\r\n      this.#updateAutoCrossfade(positionSeconds, durationSeconds);\r\n    }\r\n  }\r\n\r\n  #isAutoCrossfade()\r\n  {\r\n    return (settings.playback.autoplay && settings.gallery.autoCrossfade);\r\n  }\r\n\r\n  #updateAutoCrossfade(positionSeconds, durationSeconds)\r\n  {\r\n    if ((settings.playback.masterMute === false) && this.#isAutoCrossfade())\r\n    {\r\n      if ((durationSeconds - positionSeconds) === (settings.gallery.autoCrossfadeLength + this.config.maxBufferingDelay))\r\n      {\r\n        if ((this.#players.getCurrentTrackNum() + 1) <= this.#players.getNumTracks())\r\n        {\r\n          this.#crossfadeInit(CROSSFADE_TYPE.AUTO,\r\n          {\r\n            name:   'Auto Crossfade',\r\n            length: settings.gallery.autoCrossfadeLength,\r\n            curve:  settings.gallery.autoCrossfadeCurve\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  init(players, crossfadeInit)\r\n  {\r\n    super.init();\r\n    this.#players       = players;\r\n    this.#crossfadeInit = crossfadeInit;\r\n  }\r\n\r\n  updateTimer()\r\n  {\r\n    if (this.isVisible || this.#isAutoCrossfade())\r\n      this.#players.current.getPosition((position, duration) => this.#updateCallback(position, duration));\r\n  }\r\n\r\n  updateVolumeMute()\r\n  {\r\n    if (isPlaying() && (this.#players.crossfade.isFading() === false))\r\n      this.#players.current.getVolume((volume) => updateVolumeMuteSettings(Math.round(volume), this.#players.current.isMuted()));\r\n  }\r\n}\r\n\r\nexport const playbackTimer = new GalleryPlaybackTimer();\r\n", "//\r\n// Embedded players\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as playbackEvents from '../common/playback-events.js';\r\nimport { newDebugLogger }  from '../../shared/debuglogger.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\nimport { PlaybackLog }     from '../common/eventlogger.js';\r\n\r\nimport {\r\n  onEmbeddedPlayersReady,\r\n  onAutoplayBlocked,\r\n  onMediaEnded,\r\n  onMediaUnavailable,\r\n} from './gallery-playback.js';\r\n\r\nimport {\r\n  TRACK_TYPE,\r\n  getAttrTrackType\r\n} from '../common/mediaplayer.js';\r\n\r\nimport {\r\n YouTubePlayer,\r\n SoundCloudPlayer,\r\n} from './gallery-players.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('embedded-players');\r\nexport const eventLog = new PlaybackLog(10);\r\n\r\nconst m = {\r\n  players:         {},\r\n  playbackState:   null,\r\n  loadEventsTotal: 0,\r\n  loadEventsCount: 1,\r\n};\r\n\r\nconst config = {\r\n  maxPlaybackStartDelay: 3, // VERY rough estimate of \"max\" network buffering delay in seconds (see also: maxBufferingDelay)\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initEmbeddedPlayers(players, playbackState)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.players       = players;\r\n  m.playbackState = playbackState;\r\n\r\n  // The total number of loadEvents include 3 stages before embedded players are loaded\r\n  m.loadEventsTotal = 3 + parseInt(document.body.getAttribute('data-gallery-track-count'));\r\n\r\n  initYouTubeAPI();\r\n  initSoundCloudAPI();\r\n}\r\n\r\nfunction getLoadingPercent()\r\n{\r\n  return { loadingPercent: (100 * (m.loadEventsCount++ / m.loadEventsTotal)) };\r\n}\r\n\r\nfunction updatePlayersReady()\r\n{\r\n  if (m.loadEventsCount >= m.loadEventsTotal)\r\n    onEmbeddedPlayersReady();\r\n  else\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Get and wrap all embedder players in MediaPlayer YouTube or SoundCloud classes\r\n// ************************************************************************************************\r\n\r\nfunction getAllPlayers()\r\n{\r\n  const elements = document.querySelectorAll('single-track, gallery-track');\r\n\r\n  elements.forEach(element =>\r\n  {\r\n    const trackType = getAttrTrackType(element);\r\n    const iframe    = element.querySelector('iframe');\r\n    let player      = null;\r\n\r\n    if (trackType === TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if ((elements.length === 1) && (iframe === null))\r\n        player = getYouTubePlayer('youtube-player', element, true);\r\n      else\r\n        player = getYouTubePlayer(iframe.id, element, false);\r\n\r\n      player.setDuration(parseInt(element.getAttribute('data-track-duration')));\r\n    }\r\n    else if (trackType === TRACK_TYPE.SOUNDCLOUD)\r\n    {\r\n      /* eslint-disable */\r\n      const embeddedPlayer = SC.Widget(iframe.id);\r\n      player = new SoundCloudPlayer(element.id, iframe.id, embeddedPlayer);\r\n\r\n      embeddedPlayer.bind(SC.Widget.Events.READY,  () => onSoundCloudPlayerEventReady(iframe.id, element, player, embeddedPlayer));\r\n      embeddedPlayer.bind(SC.Widget.Events.PLAY,   () => onSoundCloudPlayerEventPlay(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.PAUSE,  () => onSoundCloudPlayerEventPause(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.FINISH, () => onSoundCloudPlayerEventFinish(iframe.id));\r\n      embeddedPlayer.bind(SC.Widget.Events.ERROR,  () => onSoundCloudPlayerEventError(iframe.id));\r\n      /* eslint-enable */\r\n    }\r\n\r\n    if (player !== null)\r\n    {\r\n      player.setArtistAndTitle(element.getAttribute('data-track-artist'), element.getAttribute('data-track-title'));\r\n      m.players.add(player);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getYouTubePlayer(playerId, element, isSingleTrackPlayer = false)\r\n{\r\n  const videoId = element.getAttribute('data-track-source-uid');\r\n\r\n  const embeddedPlayer = new YT.Player(playerId, // eslint-disable-line no-undef\r\n  {\r\n    events:\r\n    {\r\n      onReady:           (event) => onYouTubePlayerReady(event, playerId),\r\n      onStateChange:     (event) => onYouTubePlayerStateChange(event, playerId),\r\n      onError:           (event) => onYouTubePlayerError(event, playerId),\r\n      onAutoplayBlocked: ()      => onAutoplayBlocked(),\r\n    },\r\n    playerVars: {\r\n      'disablekb': 1,\r\n    },\r\n    ...isSingleTrackPlayer && { videoId: videoId },\r\n  });\r\n\r\n  return new YouTubePlayer(element.id, playerId, embeddedPlayer, videoId);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Helper functions for the YouTube and SoundCloud MediaPlayer classes\r\n// ************************************************************************************************\r\n\r\nexport function onPlayerError(player, mediaUrl)\r\n{\r\n  debug.log('onPlayerError()');\r\n  debug.log(player);\r\n\r\n  const eventSource = (player.getTrackType() === TRACK_TYPE.YOUTUBE)\r\n                        ? eventLog.SOURCE.YOUTUBE\r\n                        : eventLog.SOURCE.SOUNDCLOUD;\r\n\r\n  // Stop the current track if it is not the one we are going to next\r\n  if (m.players.isCurrent(player.getIframeId()) === false)\r\n    m.players.stop();\r\n\r\n  eventLog.add(eventSource, eventLog.EVENT.PLAYER_ERROR, player.getIframeId());\r\n  onMediaUnavailable(getPlayerErrorData(player, mediaUrl));\r\n}\r\n\r\nfunction getPlayerErrorData(player, mediaUrl)\r\n{\r\n  const artist = player.getArtist() || 'N/A';\r\n  const title  = player.getTitle()  || 'N/A';\r\n\r\n  return {\r\n    currentTrack: m.players.trackNumFromIframeId(player.getIframeId()),\r\n    numTracks:    m.players.getNumTracks(),\r\n    trackId:      player.getTrackId(),\r\n    trackType:    player.getTrackType(),\r\n    mediaTitle:   `${artist} - ${title}`,\r\n    mediaUrl:     mediaUrl,\r\n  };\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube init and event functions\r\n// https://developers.google.com/youtube/iframe_api_reference\r\n// ************************************************************************************************\r\n\r\nfunction initYouTubeAPI()\r\n{\r\n  debug.log('initYouTubeAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n  window.onYouTubeIframeAPIReady = () =>\r\n  {\r\n    debug.log('onYouTubeIframeAPIReady()');\r\n    playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n\r\n    // ToDo: THIS SHOULD NOT BE TRIGGERED HERE ONLY?\r\n    getAllPlayers();\r\n  };\r\n\r\n  const tag = document.createElement('script');\r\n  tag.id    = 'youtube-iframe-api';\r\n  tag.src   = 'https://www.youtube.com/iframe_api';\r\n  const firstScriptTag = document.getElementsByTagName('script')[0];\r\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n}\r\n\r\nfunction onYouTubePlayerReady(event, iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  // YT.PlayerState.UNSTARTED (-1) here means the video is not available or playable anymore,\r\n  // so we set playbable to false for later use...\r\n  // ToDo: This is _NOT_ documented or official behaviour, so it could change at any time!\r\n  if (event.target.getPlayerState() === -1)\r\n  {\r\n    debug.warn(`onYouTubePlayerReady() - MEDIA_UNAVAILABLE: ${iframeId} => ${player.getSourceUid()} => ${player.getArtist()} - \"${player.getTitle()}\"`);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else\r\n  {\r\n    debug.log(`onYouTubePlayerReady(): ${iframeId} => ${player.getSourceUid()} => ${player.getArtist()} - ${player.getTitle()}`);\r\n  }\r\n\r\n  updatePlayersReady();\r\n}\r\n\r\nfunction onYouTubePlayerStateChange(event, iframeId)\r\n{\r\n  eventLog.add(eventLog.SOURCE.YOUTUBE, event.data, iframeId);\r\n\r\n  switch (event.data)\r\n  {\r\n    /* eslint-disable */\r\n    case YT.PlayerState.UNSTARTED: onYouTubeStateUnstarted(iframeId); break;\r\n    case YT.PlayerState.BUFFERING: onYouTubeStateBuffering(iframeId); break;\r\n    case YT.PlayerState.PLAYING:   onYouTubeStatePlaying(iframeId);   break;\r\n    case YT.PlayerState.PAUSED:    onYouTubeStatePaused(iframeId);    break;\r\n    case YT.PlayerState.CUED:      onYouTubeStateCued(iframeId);      break;\r\n    case YT.PlayerState.ENDED:     onYouTubeStateEnded(iframeId);     break;\r\n    /* eslint-enable */\r\n  }\r\n}\r\n\r\nfunction onYouTubeStateUnstarted(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: UNSTARTED (iframeId: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateBuffering(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: BUFFERING (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.crossfade.isFading() === false)\r\n  {\r\n    const player = m.players.playerFromIframeId(iframeId);\r\n    player.mute(settings.playback.masterMute);\r\n    player.setVolume(settings.playback.masterVolume);\r\n    playbackEvents.dispatch(playbackEvents.EVENT.MEDIA_LOADING);\r\n  }\r\n}\r\n\r\nfunction onYouTubeStatePlaying(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PLAYING   (iframeId: ${iframeId})`);\r\n\r\n  // Call order is important on play events for state handling: Always sync first!\r\n  m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n}\r\n\r\nfunction onYouTubeStatePaused(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: PAUSED    (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n    m.playbackState.sync(iframeId, m.playbackState.STATE.PAUSE);\r\n  else\r\n    m.players.crossfade.stop();\r\n}\r\n\r\nfunction onYouTubeStateCued(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: CUED      (iframeId: ${iframeId})`);\r\n}\r\n\r\nfunction onYouTubeStateEnded(iframeId)\r\n{\r\n  debug.log(`onYouTubePlayerStateChange: ENDED     (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n    onMediaEnded();\r\n  else\r\n    m.players.crossfade.stop();\r\n}\r\n\r\nfunction onYouTubePlayerError(event, iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  debug.log(`onYouTubePlayerError(${(event.data !== null) ? event.data : 'null'}) - iframeId: ${iframeId} - isCued: ${player.isCued()} - isPlayable: ${player.isPlayable()}`);\r\n\r\n  if ((event.data !== null) && player.isCued())\r\n  {\r\n    player.setIsCued(false);\r\n    player.setIsPlayable(false);\r\n  }\r\n  else if ((event.data !== null) && player.isPlayable())\r\n  {\r\n    player.setIsPlayable(false);\r\n    onPlayerError(player, event.target.getVideoUrl());\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud init and event functions\r\n// https://developers.soundcloud.com/docs/api/html5-widget\r\n// ************************************************************************************************\r\n\r\nfunction initSoundCloudAPI()\r\n{\r\n  debug.log('initSoundCloudAPI()');\r\n  playbackEvents.dispatch(playbackEvents.EVENT.PLAYBACK_LOADING, getLoadingPercent());\r\n}\r\n\r\nfunction onSoundCloudPlayerEventReady(iframeId, element, player, embeddedPlayer)\r\n{\r\n  debug.log(`onSoundCloudPlayerEventReady(): ${iframeId} => ${player.getArtist()} - ${player.getTitle()}`);\r\n\r\n  player.setThumbnail(element);\r\n\r\n  embeddedPlayer.getDuration(durationMilliseconds =>\r\n  {\r\n    player.setDuration(Math.round(durationMilliseconds / 1000));\r\n    element.setAttribute('data-track-duration', player.getDuration());\r\n    updatePlayersReady();\r\n  });\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPlay(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PLAY   (iframeId: ${iframeId})`);\r\n  eventLog.add(eventLog.SOURCE.SOUNDCLOUD, eventLog.EVENT.STATE_PLAYING, iframeId);\r\n\r\n  if (m.players.crossfade.isFading() && m.players.isCurrent(iframeId))\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    if (eventLog.scPlayDoubleTrigger(iframeId, (config.maxPlaybackStartDelay * 1000)))\r\n      m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n  }\r\n  else\r\n  {\r\n    // Call order is important on play events for state handling: Always sync first!\r\n    m.playbackState.sync(iframeId, m.playbackState.STATE.PLAY);\r\n    m.players.current.mute(settings.playback.masterMute);\r\n    m.players.current.setVolume(settings.playback.masterVolume);\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventPause(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: PAUSE  (iframeId: ${iframeId})`);\r\n  eventLog.add(eventLog.SOURCE.SOUNDCLOUD, eventLog.EVENT.STATE_PAUSED, iframeId);\r\n\r\n  if (eventLog.scAutoplayBlocked(iframeId, 3000))\r\n  {\r\n    onAutoplayBlocked();\r\n  }\r\n  else\r\n  {\r\n    // Only sync state if we get pause events on the same (current) player\r\n    if (m.players.isCurrent(iframeId))\r\n    {\r\n      m.players.current.getPosition(positionMilliseconds =>\r\n      {\r\n        if (positionMilliseconds > 0)\r\n          m.playbackState.sync(iframeId, m.playbackState.STATE.PAUSE);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      m.players.crossfade.stop();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onSoundCloudPlayerEventFinish(iframeId)\r\n{\r\n  debug.log(`onSoundCloudPlayerEvent: FINISH (iframeId: ${iframeId})`);\r\n\r\n  if (m.players.isCurrent(iframeId))\r\n    onMediaEnded();\r\n  else\r\n    m.players.crossfade.stop();\r\n}\r\n\r\nfunction onSoundCloudPlayerEventError(iframeId)\r\n{\r\n  const player = m.players.playerFromIframeId(iframeId);\r\n\r\n  debug.warn(`onSoundCloudPlayerEventError() - MEDIA_UNAVAILABLE: ${player.getIframeId()} => ${player.getArtist()} - \"${player.getTitle()}\"`);\r\n  player.setIsPlayable(false);\r\n}\r\n", "//\r\n// Gallery player classes\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger }     from '../../shared/debuglogger.js';\r\nimport { settings }           from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../common/playback-events.js';\r\nimport { onPlayerError }      from './embedded-players.js';\r\n\r\nimport {\r\n  VOLUME,\r\n  crossfadeClosure,\r\n} from './crossfade.js';\r\n\r\nimport {\r\n  TRACK_TYPE,\r\n  MediaPlayer,\r\n  getYouTubeThumbnailUrl,\r\n  getSoundCloudThumbnailUrl,\r\n} from '../common/mediaplayer.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-players');\r\n\r\n\r\n// ************************************************************************************************\r\n// YouTube Gallery Player child class\r\n// ************************************************************************************************\r\n\r\nexport class YouTubePlayer extends MediaPlayer\r\n{\r\n  constructor(trackId, iframeId, embeddedPlayer, videoId)\r\n  {\r\n    super(TRACK_TYPE.YOUTUBE, trackId, iframeId, embeddedPlayer);\r\n    this.setThumbnail(getYouTubeThumbnailUrl(videoId));\r\n    this.setSourceUid(videoId);\r\n  }\r\n\r\n  pause() { this.embedded.pauseVideo(); }\r\n  stop()  { this.embedded.stopVideo();  }\r\n\r\n  cueTrackById(positionSeconds = 0)\r\n  {\r\n    this.embedded.cueVideoById(this.getSourceUid(), positionSeconds);\r\n    this.setIsCued(true);\r\n  }\r\n\r\n  playTrackById(positionSeconds = 0)\r\n  {\r\n    this.embedded.loadVideoById(this.getSourceUid(), positionSeconds);\r\n  }\r\n\r\n  play()\r\n  {\r\n    if (this.isPlayable())\r\n      this.embedded.playVideo();\r\n    else\r\n      onPlayerError(this, this.embedded.getVideoUrl());\r\n  }\r\n\r\n  getVolume(callback)\r\n  {\r\n    callback(this.embedded.getVolume());\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    if (setMute)\r\n      this.embedded.mute();\r\n    else\r\n      this.embedded.unMute();\r\n  }\r\n\r\n  isMuted()\r\n  {\r\n    return this.embedded.isMuted();\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    callback((this.embedded.getCurrentTime() * 1000), this.duration);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// SoundCloud Gallery Player child class\r\n// ************************************************************************************************\r\n\r\nexport class SoundCloudPlayer extends MediaPlayer\r\n{\r\n  #volume  = VOLUME.MAX;\r\n  #isMuted = false;\r\n\r\n  constructor(trackId, iframeId, embeddedPlayer)\r\n  {\r\n    super(TRACK_TYPE.SOUNDCLOUD, trackId, iframeId, embeddedPlayer);\r\n  }\r\n\r\n  setThumbnail(trackThumbnailUrlElement)\r\n  {\r\n    this.embedded.getCurrentSound(soundObject =>\r\n    {\r\n      super.setThumbnail(getSoundCloudThumbnailUrl(soundObject));\r\n      trackThumbnailUrlElement?.setAttribute('data-track-thumbnail-url', this.getThumbnailSrc());\r\n    });\r\n  }\r\n\r\n  cueTrackById(positionSeconds = 0)\r\n  {\r\n    this.seekTo(positionSeconds);\r\n    this.setIsCued(true);\r\n  }\r\n\r\n  playTrackById(positionSeconds = 0)\r\n  {\r\n    this.seekTo(positionSeconds);\r\n    this.play();\r\n    this.setIsCued(false);\r\n  }\r\n\r\n  pause() { this.embedded.pause(); }\r\n\r\n  play()\r\n  {\r\n    // playable is set to FALSE if the widget fires SC.Widget.Events.ERROR (track does not exist)\r\n    if (this.isPlayable())\r\n    {\r\n      this.embedded.getCurrentSound(soundObject =>\r\n      {\r\n        if (soundObject.playable === true)\r\n          this.embedded.play();\r\n        else\r\n          onPlayerError(this, soundObject.permalink_url);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      onPlayerError(this, 'https://soundcloud.com');\r\n    }\r\n  }\r\n\r\n  stop()\r\n  {\r\n    this.pause();\r\n    super.seekTo(0);\r\n  }\r\n\r\n  // Override parent because SoundCloud seekTo() needs milliseconds instead of just seconds\r\n  seekTo(positionSeconds)\r\n  {\r\n    super.seekTo(positionSeconds * 1000);\r\n  }\r\n\r\n  getVolume(callback)\r\n  {\r\n    if (this.#isMuted === false)\r\n      this.embedded.getVolume(volume => callback(volume));\r\n  }\r\n\r\n  // Override parent setVolume() because we use it for mute() as well\r\n  setVolume(volume)\r\n  {\r\n    if (volume !== 0)\r\n      this.#volume = volume;\r\n\r\n    if ((this.#isMuted === false) || (volume === 0))\r\n      super.setVolume(volume);\r\n  }\r\n\r\n  mute(setMute)\r\n  {\r\n    this.#isMuted = setMute ? true : false;\r\n\r\n    if (setMute)\r\n      this.setVolume(0);\r\n    else\r\n      this.setVolume(this.#volume);\r\n  }\r\n\r\n  isMuted()\r\n  {\r\n    return this.#isMuted;\r\n  }\r\n\r\n  getPosition(callback)\r\n  {\r\n    this.embedded.getPosition(positionMilliseconds => callback(positionMilliseconds, this.duration));\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Gallery Players proxy class\r\n// ************************************************************************************************\r\n\r\nexport class GalleryPlayers\r\n{\r\n  indexMap      = new Map();\r\n  crossfade     = null;\r\n  #mediaPlayers = [];\r\n  #playerIndex  = 0;\r\n\r\n  constructor()\r\n  {\r\n    this.crossfade = crossfadeClosure(this);\r\n\r\n    addListener(EVENT.MEDIA_PLAYING, () => this.crossfade.start());\r\n    addListener(EVENT.MEDIA_PAUSED,  () => this.crossfade.stop());\r\n  }\r\n\r\n  get current()                   { return this.#mediaPlayers[this.#playerIndex];           };\r\n  get next()                      { return this.#mediaPlayers[this.#playerIndex + 1];       };\r\n  setPlayerIndex(nextPlayerIndex) { this.#playerIndex = nextPlayerIndex;                    };\r\n  getTrackType()                  { return this.current.getTrackType();                     };\r\n  getNumTracks()                  { return this.#mediaPlayers.length;                       };\r\n  getCurrentTrackNum()            { return this.#playerIndex + 1;                           };\r\n  playerFromIframeId(iframeId)    { return this.#mediaPlayers[this.indexMap.get(iframeId)]; };\r\n  trackNumFromIframeId(iframeId)  { return (this.indexMap.get(iframeId) + 1);               };\r\n  isCurrent(iframeId)             { return (iframeId === this.current.getIframeId());       };\r\n\r\n  add(player)\r\n  {\r\n    debug.log(player);\r\n\r\n    this.#mediaPlayers.push(player);\r\n    this.indexMap.set(player.getIframeId(), this.#mediaPlayers.length - 1);\r\n  }\r\n\r\n  stop()\r\n  {\r\n    this.current.stop();\r\n    this.crossfade.stop();\r\n  }\r\n\r\n  mute()\r\n  {\r\n    this.current.mute(settings.playback.masterMute);\r\n    this.crossfade.mute(settings.playback.masterMute);\r\n  }\r\n\r\n  getTrackData(positionSeconds = 0)\r\n  {\r\n    return {\r\n      currentTrack: this.getCurrentTrackNum(),\r\n      numTracks:    this.getNumTracks(),\r\n      artist:       this.current.getArtist(),\r\n      title:        this.current.getTitle(),\r\n      position:     positionSeconds,\r\n      duration:     this.current.getDuration(),\r\n      thumbnail:    { src: this.current.getThumbnailSrc(), class: this.current.getThumbnailClass() },\r\n    };\r\n  }\r\n\r\n  prevTrack()\r\n  {\r\n    if (this.#playerIndex > 0)\r\n    {\r\n      this.#playerIndex--;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  nextTrack()\r\n  {\r\n    this.#playerIndex++;\r\n\r\n    if (this.#playerIndex < this.getNumTracks())\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  gotoTrackNum(trackNum)\r\n  {\r\n    if ((trackNum > 0) && (trackNum <= this.getNumTracks()))\r\n    {\r\n      this.#playerIndex = trackNum - 1;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n", "//\r\n// Gallery playback events module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger }     from '../../shared/debuglogger.js';\r\nimport { KEY }                from '../../shared/storage.js';\r\nimport { TRACK_TYPE }         from '../common/mediaplayer.js';\r\nimport { replaceClass }       from '../../shared/utils.js';\r\nimport { response, settings } from '../../shared/session-data.js';\r\nimport { EVENT, addListener } from '../common/playback-events.js';\r\n\r\nimport {\r\n  SINGLE_TRACK,\r\n  isSingleTrackFetch,\r\n  cueOrPlaySingleTrack,\r\n} from './single-track-fetch.js';\r\n\r\nimport {\r\n  playerScrollTo,\r\n  autoplayNavTo,\r\n} from '../common/shared-gallery-list.js';\r\n\r\nimport {\r\n  showSnackbar,\r\n  dismissSnackbar,\r\n} from '../../shared/snackbar.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-events');\r\n\r\nconst m = {\r\n  snackbarId:      0,\r\n  nowPlayingIcons: null,\r\n};\r\n\r\nconst config = {\r\n  nowPlayingIconsSelector: 'h2.track-artist-title',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initGalleryEvents()\r\n{\r\n  debug.log('init()');\r\n\r\n  m.nowPlayingIcons = document.querySelectorAll(config.nowPlayingIconsSelector);\r\n\r\n  addListener(EVENT.MEDIA_PLAYING,     mediaPlaying);\r\n  addListener(EVENT.MEDIA_PAUSED,      mediaPaused);\r\n  addListener(EVENT.MEDIA_ENDED,       mediaEnded);\r\n  addListener(EVENT.MEDIA_CUE_TRACK,   mediaCueTrack);\r\n  addListener(EVENT.CONTINUE_AUTOPLAY, continueAutoplay);\r\n  addListener(EVENT.RESUME_AUTOPLAY,   resumeAutoplay);\r\n  addListener(EVENT.AUTOPLAY_BLOCKED,  autoplayBlocked);\r\n  addListener(EVENT.MEDIA_UNAVAILABLE, mediaUnavailable);\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction mediaPlaying(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  // If autoplayBlocked() snackbar is still visible, dismiss it when playback starts\r\n  dismissSnackbar(m.snackbarId);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n  {\r\n    const nowPlayingIcon = document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`);\r\n\r\n    resetNowPlayingIcons(nowPlayingIcon);\r\n    replaceClass(nowPlayingIcon, 'playing-paused', 'now-playing-icon');\r\n\r\n    if (settings.gallery.animateNowPlayingIcon)\r\n      nowPlayingIcon.classList.add('playing-animate');\r\n  }\r\n}\r\n\r\nfunction mediaPaused(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.numTracks > 1)\r\n    document.querySelector(`#${playbackEvent.data.trackId} ${config.nowPlayingIconsSelector}`).classList.add('playing-paused');\r\n}\r\n\r\nfunction mediaEnded(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if ((playbackEvent !== null) && (playbackEvent.data.numTracks > 1))\r\n    resetNowPlayingIcons();\r\n}\r\n\r\nfunction mediaCueTrack(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (playbackEvent.data.scrollToMedia)\r\n    playerScrollTo(playbackEvent.data.trackId);\r\n}\r\n\r\nfunction continueAutoplay(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  if (isSingleTrackFetch() && (playbackEvent.data.trackType === TRACK_TYPE.YOUTUBE))\r\n    cueOrPlaySingleTrack(SINGLE_TRACK.NEXT, true);\r\n  else\r\n    autoplayNavTo(response.nextPage, true);\r\n}\r\n\r\nfunction resumeAutoplay(playbackEvent)\r\n{\r\n  const autoplayData = JSON.parse(sessionStorage.getItem(KEY.UF_AUTOPLAY));\r\n  sessionStorage.removeItem(KEY.UF_AUTOPLAY);\r\n\r\n  debug.log(playbackEvent);\r\n  debug.log(`RESUME_AUTOPLAY: ${(autoplayData !== null) ? JSON.stringify(autoplayData) : 'NO'}`);\r\n\r\n  if (autoplayData !== null)\r\n  {\r\n    const iframeId = document.getElementById(autoplayData.trackId)?.querySelector('iframe').id ?? null;\r\n\r\n    if ((iframeId === null) && (autoplayData.trackId !== null))\r\n      showSnackbar({ message: 'Unable to cue track (not found)', duration: 5 });\r\n    else\r\n      playbackEvent.callback.resumeAutoplay(autoplayData, iframeId);\r\n  }\r\n  else\r\n  {\r\n    playbackEvent.callback.resumeAutoplay();\r\n  }\r\n}\r\n\r\nfunction autoplayBlocked(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  m.snackbarId = showSnackbar({\r\n    message: 'Autoplay blocked, Play to continue',\r\n    duration: 0,\r\n    actionText: 'play',\r\n    actionClickCallback: () => playbackEvent.callback.play(),\r\n  });\r\n}\r\n\r\nfunction mediaUnavailable(playbackEvent)\r\n{\r\n  debug.log(playbackEvent);\r\n\r\n  showSnackbar({\r\n    message: 'Error playing track, skipping to next',\r\n    duration: 4,\r\n    actionText: 'Stop',\r\n    afterCloseCallback: () => playbackEventErrorTryNext(playbackEvent),\r\n  });\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nfunction resetNowPlayingIcons(nowPlayingElement)\r\n{\r\n  m.nowPlayingIcons.forEach(element =>\r\n  {\r\n    if (element !== nowPlayingElement)\r\n      element.classList.remove('now-playing-icon', 'playing-animate', 'playing-paused');\r\n  });\r\n}\r\n\r\nfunction playbackEventErrorTryNext(playbackEvent)\r\n{\r\n  if (playbackEvent.data.currentTrack < playbackEvent.data.numTracks)\r\n  {\r\n    // Only supports skipping FORWARD for now...\r\n    playbackEvent.callback.skipToTrack(playbackEvent.data.currentTrack + 1, true);\r\n  }\r\n  else\r\n  {\r\n    if (isSingleTrackFetch() && (playbackEvent.data.trackType === TRACK_TYPE.YOUTUBE))\r\n    {\r\n      // ToDo: Make below behaviour consistent throughout instead of: cueOrPlaySingleTrack(true) or\r\n      //                                                              cueOrPlaySingleTrack(isPlaying()) ?\r\n      // Meaning settings.playback.autoplay must be TRUE for autoplay triggering on next track played...?\r\n      cueOrPlaySingleTrack(SINGLE_TRACK.NEXT, settings.playback.autoplay);\r\n    }\r\n    else if (response.nextPage !== null)\r\n    {\r\n      autoplayNavTo(response.nextPage, true);\r\n    }\r\n  }\r\n}\r\n", "//\r\n// Gallery-player controls module\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as playbackEvents from '../common/playback-events.js';\r\nimport { newDebugLogger }  from '../../shared/debuglogger.js';\r\nimport { ElementClick }    from '../../shared/element-click.js';\r\nimport { isPlaying }       from '../common/playback-controls.js';\r\nimport { presetList }      from '../../settings/settings.js';\r\nimport { settings }        from '../../shared/session-data.js';\r\n\r\nimport {\r\n  STATE,\r\n  ElementsWrapper,\r\n} from '../common/element-wrappers.js';\r\n\r\nimport {\r\n  linkClickUsePrefPlayer,\r\n  replaceClass,\r\n} from '../../shared/utils.js';\r\n\r\nimport {\r\n  showTrackSharePlay,\r\n  showTrackDetails,\r\n} from '../common/track-modals.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('gallery-controls');\r\nconst m     = { uiElements: null, players: {} };\r\nconst ctrl  = {};\r\n\r\nconst config = {\r\n  crossfadePresetSelector: 'button.crossfade-preset-toggle',\r\n  crossfadePresetData:     'data-crossfade-preset',\r\n  crossfadeToSelector:     'button.crossfade-fadeto-button',\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initGalleryControls(mediaPlayers, crossfadeClickCallback)\r\n{\r\n  debug.log('init()');\r\n\r\n  m.players    = mediaPlayers;\r\n  m.uiElements = new UiElements('div.track-meta', true);\r\n\r\n  ctrl.crossfadePreset = ElementsWrapper(config.crossfadePresetSelector);\r\n  ctrl.crossfadeTo     = ElementsWrapper(config.crossfadeToSelector);\r\n\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element => setCrossfadePreset(element, settings.gallery.trackCrossfadeDefPreset));\r\n    ctrl.crossfadeTo.clickCallback = crossfadeClickCallback;\r\n  }\r\n\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY, playbackReady);\r\n}\r\n\r\nfunction playbackReady()\r\n{\r\n  if ((ctrl.crossfadePreset.length > 1) && (ctrl.crossfadeTo.length > 1))\r\n  {\r\n    ctrl.crossfadePreset.forEach(element =>\r\n    {\r\n      element.addEventListener('click', crossfadePresetClick);\r\n      replaceClass(element, STATE.DISABLED.CLASS, STATE.ENABLED.CLASS);\r\n    });\r\n\r\n    ctrl.crossfadeTo.forEach(element => element.addEventListener('click', crossfadeToClick));\r\n\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING, updateCrossfadeToState);\r\n    playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PAUSED,  updateCrossfadeToState);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nclass UiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('button.track-share-button'))\r\n      return showTrackSharePlay(this.closest('single-track, gallery-track'));\r\n\r\n    if (this.clicked('button.track-details-button'))\r\n      return showTrackDetails(this.closest('single-track, gallery-track'));\r\n\r\n    if (this.clicked('span.track-artists-links'))\r\n      return linkClickUsePrefPlayer(this.event);\r\n\r\n    if (this.clicked('span.track-channels-links'))\r\n      return linkClickUsePrefPlayer(this.event);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Crossfade controls (preset and fadeTo)\r\n// ************************************************************************************************\r\n\r\nfunction setCrossfadePreset(element, index)\r\n{\r\n  element.setAttribute(config.crossfadePresetData, index);\r\n  element.textContent = `${index + 1}`;\r\n  element.title       = `Preset: ${presetList.crossfade[index].name}`;\r\n}\r\n\r\nfunction crossfadePresetClick(event)\r\n{\r\n  const index = parseInt(event.target.getAttribute(config.crossfadePresetData));\r\n  setCrossfadePreset(event.target, ((index + 1) < presetList.crossfade.length) ? (index + 1) : 0);\r\n}\r\n\r\nfunction crossfadeToClick(event)\r\n{\r\n  if (isPlaying() && (m.players.crossfade.isFading() === false))\r\n  {\r\n    const element = event.target.closest('gallery-track');\r\n\r\n    if (element !== null)\r\n    {\r\n      const iframe = element.querySelector('iframe');\r\n      const index  = parseInt(element.querySelector(config.crossfadePresetSelector).getAttribute(config.crossfadePresetData));\r\n\r\n      replaceClass(element.querySelector(config.crossfadeToSelector), STATE.ENABLED.CLASS, STATE.DISABLED.CLASS);\r\n      ctrl.crossfadeTo.clickCallback(iframe.id, presetList.crossfade[index]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCrossfadeToState()\r\n{\r\n  const isPlayingState = isPlaying();\r\n  const currentTrack   = isPlayingState ? m.players.getTrackData().currentTrack : -1;\r\n\r\n  debug.log(`updateCrossfadeToState() - playingState: ${isPlayingState} - currentTrack: ${currentTrack}`);\r\n\r\n  ctrl.crossfadeTo.forEach((element, index) =>\r\n  {\r\n    if (currentTrack === (index + 1))\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS),\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS)\r\n      );\r\n    }\r\n    else\r\n    {\r\n      replaceClass(element,\r\n        (isPlayingState ? STATE.DISABLED.CLASS : STATE.ENABLED.CLASS),\r\n        (isPlayingState ? STATE.ENABLED.CLASS  : STATE.DISABLED.CLASS)\r\n      );\r\n    }\r\n  });\r\n}\r\n", "//\r\n// Experimental Screen Wake Lock API support: https://web.dev/wakelock/\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport { newDebugLogger } from '../../shared/debuglogger.js';\r\nimport { showSnackbar }   from '../../shared/snackbar.js';\r\nimport { settings }       from '../../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug = newDebugLogger('screen-wakelock');\r\nconst m     = { wakeLock: null };\r\n\r\n\r\n// ************************************************************************************************\r\n//\r\n// ************************************************************************************************\r\n\r\nexport function initScreenWakeLock()\r\n{\r\n  if (settings.mobile.keepScreenOn)\r\n    document.addEventListener('click', enableScreenWakeLock);\r\n}\r\n\r\nfunction enableScreenWakeLock()\r\n{\r\n  debug.log('enableScreenWakeLock()');\r\n\r\n  document.removeEventListener('click', enableScreenWakeLock);\r\n\r\n  enableWakeLock();\r\n\r\n  document.addEventListener('visibilitychange', () =>\r\n  {\r\n    if ((document.visibilityState === 'visible') && (settings.mobile.keepScreenOn))\r\n      setStateVisible();\r\n  });\r\n}\r\n\r\nfunction setStateVisible()\r\n{\r\n  if (isSupported() && (m.wakeLock === null))\r\n    requestWakeLock();\r\n}\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nfunction isSupported()\r\n{\r\n  return (('wakeLock' in navigator) && ('request' in navigator.wakeLock));\r\n}\r\n\r\nasync function enableWakeLock()\r\n{\r\n  if (isSupported())\r\n  {\r\n    if (document.visibilityState === 'visible')\r\n    {\r\n      if (await requestWakeLock() !== true)\r\n      {\r\n        debug.log('enableWakeLock(): Screen Wake Lock request failed');\r\n\r\n        showSnackbar({\r\n          message: 'Keep Screen On failed',\r\n          duration: 5,\r\n          actionText: 'Disable',\r\n          actionClickCallback: () => (settings.mobile.keepScreenOn = false),\r\n        });\r\n      }\r\n    }\r\n  }\r\n  else\r\n  {\r\n    debug.log('enableWakeLock(): Screen Wake Lock is not supported');\r\n\r\n    showSnackbar({\r\n      message: 'Keep Screen On is not supported',\r\n      duration: 5,\r\n      actionText: 'Disable',\r\n      actionClickCallback: () => (settings.mobile.keepScreenOn = false),\r\n    });\r\n  }\r\n}\r\n\r\nasync function requestWakeLock()\r\n{\r\n  try\r\n  {\r\n    m.wakeLock = await navigator.wakeLock.request('screen');\r\n  //debug.log('requestWakeLock(): Screen Wake Lock is Enabled');\r\n\r\n    m.wakeLock.addEventListener('release', () =>\r\n    {\r\n    //debug.log('requestWakeLock(): Screen Wake Lock was Released');\r\n      m.wakeLock = null;\r\n    });\r\n\r\n    return true;\r\n  }\r\n  catch (exception)\r\n  {\r\n    debug.error(`requestWakeLock(): ${exception.name} - ${exception.message}`);\r\n  }\r\n\r\n  return false;\r\n}\r\n", "//\r\n// Browser interaction and media playback handler\r\n//\r\n// https://ultrafunk.com\r\n//\r\n\r\n\r\nimport * as galleryPlayback     from './gallery/gallery-playback.js';\r\nimport * as listPlayback        from './list/list-playback.js';\r\nimport * as playbackEvents      from './common/playback-events.js';\r\nimport * as utils               from '../shared/utils.js';\r\nimport * as footerToggles       from '../site/footer-toggles.js';\r\nimport * as shared              from './common/shared-gallery-list.js';\r\nimport { ElementClick }         from '../shared/element-click.js';\r\nimport { showSnackbar }         from '../shared/snackbar.js';\r\nimport { initScreenWakeLock }   from './common/screen-wakelock.js';\r\nimport { TRACK_TYPE }           from './common/mediaplayer.js';\r\nimport { InteractionLog }       from './common/eventlogger.js';\r\nimport { hasLoadedLocalTracks } from './list/local-tracks.js';\r\n\r\nimport {\r\n  showTrackSharePlay,\r\n  showTrackDetails,\r\n} from './common/track-modals.js';\r\n\r\nimport {\r\n  newDebugLogger,\r\n  measureStartupExecutionTime,\r\n} from '../shared/debuglogger.js';\r\n\r\nimport {\r\n  SINGLE_TRACK,\r\n  isSingleTrackFetch,\r\n  isSingleTrackLoading,\r\n  cueOrPlaySingleTrack,\r\n} from './gallery/single-track-fetch.js';\r\n\r\nimport {\r\n  setPlaybackControlsCss,\r\n  toggleRepeat,\r\n} from './common/playback-controls.js';\r\n\r\nimport {\r\n  response,\r\n  settings,\r\n  getSessionData,\r\n} from '../shared/session-data.js';\r\n\r\n\r\n/*************************************************************************************************/\r\n\r\n\r\nconst debug    = newDebugLogger('playback-interaction');\r\nconst eventLog = new InteractionLog(10);\r\n\r\nconst m = {\r\n  player:             null,\r\n  isPlaybackReady:    false,\r\n  siteNavUiElements:  null,\r\n  trackNavUiElements: null,\r\n  keyboardShortcuts:  null,\r\n  broadcastChannel:   null,\r\n};\r\n\r\n\r\n// ************************************************************************************************\r\n// Document ready and document / window event listeners\r\n// ************************************************************************************************\r\n\r\ndocument.addEventListener('DOMContentLoaded', () =>\r\n{\r\n  measureStartupExecutionTime();\r\n\r\n  debug.log('DOMContentLoaded');\r\n\r\n  getSessionData();\r\n\r\n  if (shared.hasGalleryPlayer())\r\n    m.player = galleryPlayback;\r\n  else if (shared.hasListPlayer())\r\n    m.player = listPlayback;\r\n\r\n  if (m.player !== null)\r\n    initCommon();\r\n\r\n  footerToggles.init(m.player);\r\n});\r\n\r\n\r\n// ************************************************************************************************\r\n// Read settings and interaction init\r\n// ************************************************************************************************\r\n\r\nfunction initCommon()\r\n{\r\n  debug.log('init()');\r\n\r\n  // Set user settings CSS with JS as early as possible...\r\n  setPlaybackControlsCss();\r\n\r\n  // Must be done before player.init() since events are used to relay player status updates\r\n  initPlaybackEvents();\r\n\r\n  m.player.init();\r\n  m.siteNavUiElements  = new SiteNavUiElements('#site-navigation');\r\n  m.trackNavUiElements = new TrackNavUiElements('nav.single-track-nav .nav-links');\r\n\r\n  shared.fullscreenElement.init();\r\n  m.keyboardShortcuts = utils.keyboardShortcuts(settings.playback.keyboardShortcuts);\r\n  m.broadcastChannel  = new BroadcastChannel('playbackStatus');\r\n\r\n  initListeners();\r\n  initScreenWakeLock();\r\n}\r\n\r\nfunction initPlaybackEvents()\r\n{\r\n  playbackEvents.addListener(playbackEvents.EVENT.PLAYBACK_READY,       playbackEventPlaybackReady);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PLAYING,        () => m.broadcastChannel.postMessage(playbackEvents.EVENT.MEDIA_PLAYING));\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_CUE_TRACK,      playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_ENDED,          playbackEventMediaEnded);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_TIME_REMAINING, playbackEventMediaTimeRemaining);\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_PREV_TRACK,     () => cueOrPlayPrevNextTrack(null, SINGLE_TRACK.PREV, response.prevPage));\r\n  playbackEvents.addListener(playbackEvents.EVENT.MEDIA_NEXT_TRACK,     () => cueOrPlayPrevNextTrack(null, SINGLE_TRACK.NEXT, response.nextPage));\r\n}\r\n\r\nfunction initListeners()\r\n{\r\n  utils.addListener('.playback-shuffle-button span', 'click', shared.shuffleClickNavTo);\r\n  document.addEventListener('keydown', documentEventKeyDown);\r\n  document.addEventListener('keydown', documentEventMediaKeyDown);\r\n\r\n  // Ensures that blur event is triggered on first iframe click / focus\r\n  window.focus();\r\n\r\n  // If an iframe is clicked / focused, set focus back to parent document to handle all input events etc.\r\n  window.addEventListener('blur', () =>\r\n  {\r\n    // setTimeout(250) = Yield, needed for Firefox to update document.activeElement\r\n    setTimeout(() =>\r\n    {\r\n      if (document.activeElement instanceof HTMLIFrameElement) {\r\n        window.focus();\r\n      }\r\n    }, 250);\r\n  });\r\n\r\n  m.broadcastChannel.addEventListener('message', (event) =>\r\n  {\r\n    debug.log(`broadcastChannel('playbackStatus') message: ${event.data}`);\r\n\r\n    if ((event.data === playbackEvents.EVENT.MEDIA_PLAYING) && settings.playback.pauseOnPlayerChange)\r\n      m.player.pause();\r\n  });\r\n\r\n  if (shared.isListPlayer() && settings.list.showLoadMoreTracks && settings.list.warnOnPageChange)\r\n  {\r\n    window.addEventListener('beforeunload', (event) =>\r\n    {\r\n      if (m.player.getStatus().isPlaying || hasLoadedLocalTracks())\r\n      {\r\n        event.preventDefault();\r\n        event.returnValue = true;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Regular keyboard events handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady           &&\r\n      m.keyboardShortcuts.allow() &&\r\n      (event.ctrlKey === false)   &&\r\n      (event.altKey  === false))\r\n  {\r\n    // Events that need event.repeat goes here\r\n    switch (event.key)\r\n    {\r\n      case '+':\r\n      case '-':\r\n        shared.onKeysVolumeChange(event, m.player);\r\n        break;\r\n\r\n      case 'ArrowUp':\r\n      case 'ArrowDown':\r\n        if (event.shiftKey)\r\n        {\r\n          shared.onKeysVolumeChange(event, m.player);\r\n        }\r\n        break;\r\n    }\r\n\r\n    if (event.repeat === false)\r\n    {\r\n      switch (event.code)\r\n      {\r\n        case 'Backquote':\r\n          event.preventDefault();\r\n          shared.playerScrollTo(m.player.getStatus().trackElementId);\r\n          break;\r\n      }\r\n\r\n      switch (event.key)\r\n      {\r\n        case ' ':\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n          break;\r\n\r\n        case 'Home':\r\n        case 'End':\r\n        case 'PageUp':\r\n        case 'PageDown':\r\n          shared.playerOnKeysScroll(event);\r\n          break;\r\n\r\n        case 'ArrowLeft':\r\n          onKeyArrowLeft(event);\r\n          break;\r\n\r\n        case 'ArrowRight':\r\n          onKeyArrowRight(event);\r\n          break;\r\n\r\n        case 'A':\r\n          footerToggles.autoplay.toggle();\r\n          break;\r\n\r\n        case 'f':\r\n        case 'F':\r\n          event.preventDefault();\r\n          shared.fullscreenElement.toggle(document.getElementById(m.player.getStatus().playerId));\r\n          break;\r\n\r\n        case 'i':\r\n          event.preventDefault();\r\n          showTrackDetails(document.getElementById(m.player.getStatus().trackElementId));\r\n          break;\r\n\r\n        case 'I':\r\n          event.preventDefault();\r\n          showTrackSharePlay(document.getElementById(m.player.getStatus().trackElementId));\r\n          break;\r\n\r\n        case 'm':\r\n        case 'M':\r\n          event.preventDefault();\r\n          m.player.toggleMute();\r\n          showSnackbar({ message: (settings.playback.masterMute ? '<b>Muted</b> (<b>m</b> to Unmute)' : '<b>Unmuted</b> (<b>m</b> to Mute)'), duration: 3 });\r\n          break;\r\n\r\n        case 'O':\r\n          document.getElementById('select-local-files')?.click();\r\n          break;\r\n\r\n        case 'p':\r\n        case 'P':\r\n          footerToggles.playerType.toggle();\r\n          break;\r\n\r\n        case 'r':\r\n        case 'R':\r\n          showSnackbar({ message: `${toggleRepeat().title} (<b>r</b> to change)`, duration: 3 });\r\n          break;\r\n\r\n        case 'V':\r\n          shared.resetVolumeMute(m.player);\r\n          break;\r\n\r\n        case 'x':\r\n        case 'X':\r\n          footerToggles.crossfade.toggle();\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard media keys event handler\r\n// ************************************************************************************************\r\n\r\nfunction documentEventMediaKeyDown(event)\r\n{\r\n  if (m.isPlaybackReady && m.keyboardShortcuts.allow()) // && (event.repeat  === false)) does not function as expected on Firefox\r\n  {\r\n    switch (event.key)\r\n    {\r\n      case 'MediaPlayPause':\r\n        if (playbackEvents.hasPlaybackStarted === false)\r\n        {\r\n          debug.log('documentEventMediaKeyDown(): MediaPlayPause');\r\n          event.preventDefault();\r\n          m.player.togglePlayPause();\r\n        }\r\n        break;\r\n\r\n      case 'MediaTrackPrevious':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackPrevious');\r\n        event.preventDefault();\r\n        m.player.prevTrack();\r\n        break;\r\n\r\n      case 'MediaTrackNext':\r\n        debug.log('documentEventMediaKeyDown(): MediaTrackNext');\r\n        event.preventDefault();\r\n        m.player.nextTrack();\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Keyboard event handlers\r\n// ************************************************************************************************\r\n\r\nfunction onKeyArrowLeft(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    cueOrPlayPrevNextTrack(null, SINGLE_TRACK.PREV, response.prevPage);\r\n  else\r\n    m.player.prevTrack();\r\n}\r\n\r\nfunction onKeyArrowRight(event)\r\n{\r\n  event.preventDefault();\r\n\r\n  if (event.shiftKey === true)\r\n    cueOrPlayPrevNextTrack(null, SINGLE_TRACK.NEXT, response.nextPage);\r\n  else\r\n    m.player.nextTrack();\r\n}\r\n\r\nfunction cueOrPlayPrevNextTrack(event, prevNextTrack, prevNextPage)\r\n{\r\n  event?.preventDefault();\r\n\r\n  if (isSingleTrackFetch())\r\n  {\r\n    if (m.player.getStatus().trackType === TRACK_TYPE.YOUTUBE)\r\n    {\r\n      if (isSingleTrackLoading() === false)\r\n        cueOrPlaySingleTrack(prevNextTrack, m.player.getStatus().isPlaying);\r\n      else\r\n        showSnackbar({ message: 'Loading track, please wait...', duration: 3 });\r\n    }\r\n    else\r\n    {\r\n      prevNextNavTo(null, prevNextPage);\r\n    }\r\n  }\r\n  else\r\n  {\r\n    prevNextNavTo(null, prevNextPage);\r\n  }\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// playbackEvent listeners\r\n// ************************************************************************************************\r\n\r\nfunction playbackEventPlaybackReady()\r\n{\r\n  utils.addListener('.playback-thumbnail-control', 'click', playbackThumbnailClick);\r\n  utils.addListener('.playback-details-control',   'click', playbackDetailsClick);\r\n  utils.addListener('.playback-timer-control',     'click', playbackTimerClick);\r\n  m.isPlaybackReady = true;\r\n}\r\n\r\nfunction playbackEventMediaEnded()\r\n{\r\n  const isGalleryPlayerMultipleTracks = (shared.isGalleryPlayer() && (m.player.getStatus().numTracks > 1));\r\n\r\n  if (settings.playback.autoExitFullscreen || isGalleryPlayerMultipleTracks)\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\nfunction playbackEventMediaTimeRemaining(playbackEvent)\r\n{\r\n  const isTimeRemainingBelowThreshold = (playbackEvent.data.timeRemainingSeconds <= settings.playback.timeRemainingSeconds);\r\n\r\n  if (settings.playback.autoExitFsOnWarning && isTimeRemainingBelowThreshold)\r\n    shared.fullscreenElement.exit();\r\n}\r\n\r\n\r\n// ************************************************************************************************\r\n// Click event handlers\r\n// ************************************************************************************************\r\n\r\nfunction playbackDetailsClick()\r\n{\r\n  shared.playerScrollTo(m.player.getStatus().trackElementId);\r\n}\r\n\r\nfunction playbackThumbnailClick()\r\n{\r\n  if (shared.isGalleryPlayer())\r\n  {\r\n    eventLog.add(eventLog.SOURCE.MOUSE, eventLog.EVENT.MOUSE_CLICK);\r\n\r\n    if (eventLog.doubleClicked(eventLog.SOURCE.MOUSE, eventLog.EVENT.MOUSE_CLICK, 500))\r\n      shared.fullscreenElement.enter(document.getElementById(m.player.getStatus().playerId));\r\n  }\r\n  else if (shared.isListPlayer())\r\n  {\r\n    shared.playerScrollTo(0);\r\n  }\r\n}\r\n\r\nfunction playbackTimerClick()\r\n{\r\n  footerToggles.autoplay.toggle();\r\n}\r\n\r\nclass SiteNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('a.navbar-prev-link'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.PREV, response.prevPage);\r\n\r\n    if (this.clicked('a.navbar-next-link'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nclass TrackNavUiElements extends ElementClick\r\n{\r\n  elementClicked()\r\n  {\r\n    if (this.clicked('div.nav-previous a'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.PREV, response.prevPage);\r\n\r\n    if (this.clicked('div.nav-next a'))\r\n      return cueOrPlayPrevNextTrack(this.event, SINGLE_TRACK.NEXT, response.nextPage);\r\n  }\r\n}\r\n\r\nfunction prevNextNavTo(event, destUrl)\r\n{\r\n  event?.preventDefault();\r\n  shared.autoplayNavTo(destUrl, m.player.getStatus().isPlaying);\r\n}\r\n"],
  "mappings": "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",
  "names": ["gallery_playback_exports", "__export", "getStatus", "init", "nextTrack", "onAutoplayBlocked", "onEmbeddedPlayersReady", "onMediaEnded", "onMediaUnavailable", "pause", "play", "prevTrack", "setVolume", "toggleMute", "togglePlayPause", "GalleryPlaybackTimer", "PlaybackTimer", "#players", "#crossfadeInit", "#updateCallback", "positionMilliseconds", "durationSeconds", "positionSeconds", "updateTimerAndProgress", "#updateAutoCrossfade", "#isAutoCrossfade", "settings", "TYPE", "players", "crossfadeInit", "position", "duration", "isPlaying", "volume", "updateVolumeMuteSettings", "playbackTimer", "debug", "newDebugLogger", "eventLog", "PlaybackLog", "m", "config", "initEmbeddedPlayers", "players", "playbackState", "initYouTubeAPI", "initSoundCloudAPI", "getLoadingPercent", "updatePlayersReady", "onEmbeddedPlayersReady", "dispatch", "EVENT", "getAllPlayers", "elements", "element", "trackType", "getAttrTrackType", "iframe", "player", "TRACK_TYPE", "getYouTubePlayer", "embeddedPlayer", "SoundCloudPlayer", "onSoundCloudPlayerEventReady", "onSoundCloudPlayerEventPlay", "onSoundCloudPlayerEventPause", "onSoundCloudPlayerEventFinish", "onSoundCloudPlayerEventError", "playerId", "isSingleTrackPlayer", "videoId", "event", "onYouTubePlayerReady", "onYouTubePlayerStateChange", "onYouTubePlayerError", "onAutoplayBlocked", "YouTubePlayer", "onPlayerError", "mediaUrl", "eventSource", "onMediaUnavailable", "getPlayerErrorData", "artist", "title", "tag", "firstScriptTag", "iframeId", "onYouTubeStateUnstarted", "onYouTubeStateBuffering", "onYouTubeStatePlaying", "onYouTubeStatePaused", "onYouTubeStateCued", "onYouTubeStateEnded", "settings", "onMediaEnded", "durationMilliseconds", "positionMilliseconds", "debug", "newDebugLogger", "YouTubePlayer", "MediaPlayer", "trackId", "iframeId", "embeddedPlayer", "videoId", "TRACK_TYPE", "getYouTubeThumbnailUrl", "positionSeconds", "onPlayerError", "callback", "setMute", "SoundCloudPlayer", "#volume", "VOLUME", "#isMuted", "trackThumbnailUrlElement", "soundObject", "getSoundCloudThumbnailUrl", "volume", "positionMilliseconds", "GalleryPlayers", "#mediaPlayers", "#playerIndex", "crossfadeClosure", "addListener", "EVENT", "nextPlayerIndex", "player", "settings", "trackNum", "debug", "newDebugLogger", "m", "config", "initGalleryEvents", "addListener", "EVENT", "mediaPlaying", "mediaPaused", "mediaEnded", "mediaCueTrack", "continueAutoplay", "resumeAutoplay", "autoplayBlocked", "mediaUnavailable", "playbackEvent", "dismissSnackbar", "nowPlayingIcon", "resetNowPlayingIcons", "replaceClass", "settings", "playerScrollTo", "isSingleTrackFetch", "TRACK_TYPE", "cueOrPlaySingleTrack", "SINGLE_TRACK", "autoplayNavTo", "response", "autoplayData", "KEY", "iframeId", "showSnackbar", "playbackEventErrorTryNext", "nowPlayingElement", "element", "debug", "newDebugLogger", "m", "ctrl", "config", "initGalleryControls", "mediaPlayers", "crossfadeClickCallback", "UiElements", "ElementsWrapper", "element", "setCrossfadePreset", "settings", "addListener", "EVENT", "playbackReady", "crossfadePresetClick", "replaceClass", "STATE", "crossfadeToClick", "updateCrossfadeToState", "ElementClick", "showTrackSharePlay", "showTrackDetails", "linkClickUsePrefPlayer", "index", "presetList", "event", "isPlaying", "iframe", "isPlayingState", "currentTrack", "debug", "newDebugLogger", "m", "config", "init", "eventLog", "initGalleryEvents", "GalleryPlayers", "positionSeconds", "seekClick", "initGalleryControls", "crossfadeToClick", "playbackTimer", "crossfadeInit", "initEmbeddedPlayers", "playbackState", "play", "setPlayState", "pause", "setPauseState", "togglePlayPause", "isPlaying", "prevTrack", "positionMilliseconds", "updateTimerAndProgress", "playCurrentTrack", "dispatch", "EVENT", "nextTrack", "isMediaEnded", "isLastTrack", "settings", "repeatPlayback", "repeatMode", "getRepeatMode", "REPEAT", "setVolume", "toggleMute", "cueOrPlayTrackById", "iframeId", "autoplayData", "scrollToMedia", "updateTrackData", "playMedia", "skipToTrack", "trackNum", "resumeAutoplay", "cueOrPlaySingleTrackById", "trackData", "thumbnailData", "updateProgressPercent", "getStatus", "getCurrentPosition", "status", "resolve", "fadeInUid", "crossfadePreset", "TYPE", "crossfadeType", "crossfadeInUid", "onEmbeddedPlayersReady", "ready", "singleTrackFetchReady", "onMediaEnded", "onAutoplayBlocked", "onMediaUnavailable", "errorData", "STATE", "syncRecursive", "nextPlayerUid", "syncState", "debug", "newDebugLogger", "m", "initScreenWakeLock", "settings", "enableScreenWakeLock", "enableWakeLock", "setStateVisible", "isSupported", "requestWakeLock", "showSnackbar", "exception", "debug", "newDebugLogger", "eventLog", "InteractionLog", "m", "measureStartupExecutionTime", "getSessionData", "hasGalleryPlayer", "gallery_playback_exports", "hasListPlayer", "list_playback_exports", "initCommon", "init", "setPlaybackControlsCss", "initPlaybackEvents", "SiteNavUiElements", "TrackNavUiElements", "fullscreenElement", "keyboardShortcuts", "settings", "initListeners", "initScreenWakeLock", "addListener", "EVENT", "playbackEventPlaybackReady", "playbackEventMediaEnded", "playbackEventMediaTimeRemaining", "cueOrPlayPrevNextTrack", "SINGLE_TRACK", "response", "shuffleClickNavTo", "documentEventKeyDown", "documentEventMediaKeyDown", "event", "isListPlayer", "hasLoadedLocalTracks", "onKeysVolumeChange", "playerScrollTo", "playerOnKeysScroll", "onKeyArrowLeft", "onKeyArrowRight", "autoplay", "showTrackDetails", "showTrackSharePlay", "showSnackbar", "playerType", "toggleRepeat", "resetVolumeMute", "crossfade", "hasPlaybackStarted", "prevNextTrack", "prevNextPage", "isSingleTrackFetch", "TRACK_TYPE", "isSingleTrackLoading", "cueOrPlaySingleTrack", "prevNextNavTo", "playbackThumbnailClick", "playbackDetailsClick", "playbackTimerClick", "isGalleryPlayerMultipleTracks", "isGalleryPlayer", "playbackEvent", "isTimeRemainingBelowThreshold", "ElementClick", "destUrl", "autoplayNavTo"]
}
